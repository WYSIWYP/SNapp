{"version":3,"sources":["contexts/Preferences.tsx","contexts/Dialog.tsx","util/Dialog.tsx","parser/Types.tsx","util/Util.tsx","components/SNView.tsx","parser/MusicXML.tsx","images/dropDown.svg","images/upload.svg","components/Frame.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx"],"names":["colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","colorPreferenceOptions","Object","keys","scalePreferenceOptions","spacingPreferenceOptions","noteHeadPreferenceOptions","measuresPerRowOptions","initialState","noteDurationColor","noteSymbolColor","staffScale","horizontalSpacing","verticalSpacing","noteScale","naturalNoteShape","sharpNoteShape","flatNoteShape","measuresPerRow","PreferencesContext","createContext","undefined","PreferencesStateProvider","_ref","children","reducer","useRef","state","action","type","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","val","_useReducer","useReducer","current","_useReducer2","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Provider","value","usePreferencesState","useContext","shown","DialogContext","DialogStateProvider","data","react__WEBPACK_IMPORTED_MODULE_1___default","useDialogState","__webpack_require__","d","__webpack_exports__","close","showMessage","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","title","body","buttonText","buttonAction","width","height","contents","style","styles","space","top","bottom","link","onClick","display","flexDirection","position","left","fontSize","textAlign","flex","padding","overflowX","overflowY","paddingBottom","color","cursor","fontWeight","Tie","range","min","max","res","i","push","Accidental","SNView","error","xml","ref","_useState","useState","_useState2","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setWidth","_useState3","_useState4","score","setScore","_usePreferencesState","preferences","_useDialogState","_useDialogState2","dialogState","setDialogState","console","log","useEffect","callback","newWidth","getBoundingClientRect","window","addEventListener","removeEventListener","parse","horizontalPadding","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","octaveLines","number","accidentalMap","map","x","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","line","Math","floor","minNote","maxNote","forEach","track","measures","measure","midi","Error","minLine","maxLine","abs","rowHeight","beatsPerMeasure","measureWidth","availableMeasureSpace","measureNumber","reduce","accum","length","rowNumber","ceil","y","_getCurrentSignatures","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","reverse","currentTime","find","timeSignature","currentKey","keySignature","getCurrentSignatures","key","measureSVG","strokeWidth","measureLabelSpace","fill","j","octaveLine","lineY","textAnchor","dominantBaseline","tickX","tickSize","noteHeadSVG","noteTailSVG","noteHead","noteTail","id","concat","transform","noteTimeToPos","noteTime","x1","x2","boxes","_noteTimeToPos","time","xStart","yStart","xEnd","duration","fillOpacity","Fragment","attributes","ties","includes","Stop","accidental","_noteTimeToPos3","noteSymbolSize","triHeight","sqrt","crossCircleWidth","triangleUp","points","triangleDown","hollowCircle","cx","cy","r","stroke","circle","crossCircle","y1","y2","noteShapes","▲","▼","○","●","◼","□","⨂","svgRows","viewBox","staffLabelSpace","row","overflow","minWidth","userSelect","paddingTop","e","Dialog","navigate","setImmediate","_Types__WEBPACK_IMPORTED_MODULE_0__","pitchToMidi","pitch","step","c","f","g","b","toLowerCase","octave","alter","round","currentBeatType","parts","partName","divisions","progress","Array","part","notes","divisionsToNoteLength","entry","_class","chord","rest","entryTies","tie","Start","times","parseInt","beatTypes","module","exports","p","appContainer","header","fontStyle","alignItems","letterSpacing","backgroundColor","page","sideBar","right","Frame","sideMenu","showSideMenu","react_default","objectSpread","className","CurrentFileContext","CurrentFileStateProvider","slicedToArray","useCurrentFileState","leftSide","float","svg","marginRight","marginTop","marginLeft","subHeader","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","opacity","sideBarContent","margin","name","select","backgroundPosition","backgroundRepeat","backgroundImage","dropDown","paddingLeft","border","borderRadius","WebkitAppearance","Convert","show","setShow","_usePreferencesState2","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","showPreferencesButton","setShowPreferencesButton","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","wrap","_context","prev","next","localStorage","getItem","JSON","filter","stop","sidebar","file","Blob","stringify","saveAs","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","readAsText","files","importFile","onSubmit","components_Frame","xmlns","strokeLinecap","strokeLinejoin","canvg","pdf","jsPDF","addSvgAsImage","document","getElementById","innerHTML","save","openPDF","padding-right","NotFound","GlobalStateProvider","bg","frame","lineHeight","headerRight","maxHeight","buttons","dialog","active","startX","startY","mouseX","mouseY","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","Global","components","X","container","item","recentFiles","maxWidth","recentFilesInner","paddingRight","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","icon","Menu","setRecentFiles","recent","loadFile","setItem","react","Date","date","getMonth","getDate","getFullYear","src","alt","fileName","replace","MusicXML","parseScore","from","random","toString","join","newRecentFiles","splice","unshift","getTime","uploadFile","Router","contexts_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","global_Global","Boolean","location","hostname","match","ReactDOM","render","src_Router","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0XAEaA,EAAwB,CACjCC,MAAO,UACPC,KAAM,UACNC,IAAK,UACLC,OAAQ,SACRC,OAAQ,UACRC,MAAO,UACPC,KAAM,UACNC,OAAQ,UAECC,EAAyBC,OAAOC,KACzCX,GAISY,EAAyB,CAAC,QAAS,SAAU,SAG7CC,EAA2B,CAAC,EAAG,EAAG,EAAG,GAGrCC,EAA4B,CAAC,SAAK,SAAK,SAAK,SAAK,SAAI,SAAI,UAGzDC,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAoBpDC,EAAsB,CACtBC,kBAAmB,OACnBC,gBAAiB,QACjBC,WAAY,SACZC,kBAAmB,EACnBC,gBAAiB,EACjBC,UAAW,SACXC,iBAAkB,SAClBC,eAAgB,SAChBC,cAAe,SACfC,eAAgB,GAGPC,EAAqBC,6BAAcC,GAInCC,EAAyC,SAAAC,GAAgB,IAAdC,EAAcD,EAAdC,SAEhDC,EAAUC,iBACV,SAACC,EAAcC,GACX,OAAQA,EAAOC,MACX,IAAK,MACD,OAAO3B,OAAA4B,EAAA,EAAA5B,CAAA,GAAIyB,EAAUC,EAAOG,QANsBC,EAU1CC,qBAAWR,EAAQS,QAAS1B,GAVc2B,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAA8B,EAAA,GAU7DL,EAV6DQ,EAAA,GAUtDE,EAVsDF,EAAA,GAWlE,OACIG,EAAAC,EAAAC,cAACrB,EAAmBsB,SAApB,CAA6BC,MAAO,CAACf,EAAOU,IACvCb,IAIAmB,EAAsB,kBAAMC,qBAAWzB,8HC/DhDX,EAAsB,CACtBqC,OAAO,GAGEC,EAAgB1B,6BAAcC,GAC9B0B,EAAoC,SAAAxB,GAAgB,IAAdC,EAAcD,EAAdC,SAE3CC,EAAUC,iBAAO,SAACC,EAAcC,GAChC,OAAQA,EAAOC,MACX,IAAK,OACD,MAAO,CACHgB,OAAO,EACPG,KAAMpB,EAAOG,KAErB,IAAK,QACD,MAAO,CAACc,OAAO,MAVkCb,EAarCC,qBAAWR,EAAQS,QAAS1B,GAbS2B,EAAAjC,OAAAkC,EAAA,EAAAlC,CAAA8B,EAAA,GAaxDL,EAbwDQ,EAAA,GAajDE,EAbiDF,EAAA,GAc7D,OACIc,EAAAV,EAAAC,cAACM,EAAcL,SAAf,CAAwBC,MAAO,CAACf,EAAOU,IAClCb,IAIA0B,EAAiB,kBAAMN,qBAAWE,mCC1C/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAGaF,EAAQ,WACjB,MAAO,CAACzB,KAAM,UAGL0B,EAAc,SAACI,EAAeC,EAAWC,EAAoBC,GACtE,MAAO,CAACjC,KAAM,OAAQE,IAAK,CAAC4B,QAAOI,MAAO,IAAKC,OAAQ,IAAKC,SAAUR,EAAAlB,EAAAC,cAAA,OAAK0B,MAAOC,EAAOP,MACrFH,EAAAlB,EAAAC,cAAA,OAAK0B,MAAOC,EAAOC,QACnBX,EAAAlB,EAAAC,cAAA,OAAK0B,MAAOC,EAAOE,KACdT,GAELH,EAAAlB,EAAAC,cAAA,OAAK0B,MAAOC,EAAOC,QACnBX,EAAAlB,EAAAC,cAAA,OAAK0B,MAAOC,EAAOG,QACfb,EAAAlB,EAAAC,cAAA,QAAM0B,MAAOC,EAAOI,KAAMC,QAASV,GAC9BD,QA8CXM,EAxCW,CACbP,KAAM,CACFa,QAAS,OACTC,cAAe,UAEnBL,IAAK,CACDM,SAAU,UACVN,IAAK,OACLO,KAAM,OACNZ,OAAQ,OACRa,SAAU,OACVC,UAAW,SACXC,KAAM,WACNC,QAAS,OACTC,UAAW,SACXC,UAAW,QAEfZ,OAAQ,CACJK,SAAU,UACVN,IAAK,OACLO,KAAM,OACNZ,OAAQ,OACRc,UAAW,SACXC,KAAM,WACNI,cAAe,QAEnBf,MAAO,CACHO,SAAU,UACVN,IAAK,OACLO,KAAM,OACNZ,OAAQ,OACRe,KAAM,YAEVR,KAAM,CACFa,MAAO,UACPC,OAAQ,UACRR,SAAU,OACVS,WAAY,yCCvDb,IAAKC,EAJZpC,EAAAC,EAAAC,EAAA,sBAAAkC,aAIYA,4ECHL,SAASC,EAAMC,EAAaC,GAE/B,IADA,IAAIC,EAAgB,GACZC,EAAIH,EAAKG,EAAIF,EAAKE,IACtBD,EAAIE,KAAKD,GAEb,OAAOD,EALXxC,EAAAC,EAAAC,EAAA,sBAAAmC,0DCeKM,+KA4VUC,IAtViB,SAAAxE,GAAoC,IAQ/CyE,EARaC,EAAkC1E,EAAlC0E,IACxBC,EAAMxE,iBAAO,MAD6CyE,EAExCC,wBAA6B/E,GAFWgF,EAAAnG,OAAAoG,EAAA,EAAApG,CAAAiG,EAAA,GAE3DpC,EAF2DsC,EAAA,GAEpDE,EAFoDF,EAAA,GAAAG,EAGxCJ,wBAA4B/E,GAHYoF,EAAAvG,OAAAoG,EAAA,EAAApG,CAAAsG,EAAA,GAG3DE,EAH2DD,EAAA,GAGpDE,EAHoDF,EAAA,GAAAG,EAI3CjE,cAAhBkE,EAJ2D3G,OAAAoG,EAAA,EAAApG,CAAA0G,EAAA,MAAAE,EAM5B5D,cAN4B6D,EAAA7G,OAAAoG,EAAA,EAAApG,CAAA4G,EAAA,GAM3DE,EAN2DD,EAAA,GAM9CE,EAN8CF,EAAA,GAuChE,GAxBAG,QAAQC,IAAIT,GACZU,oBAAU,WACN,IAAIrD,OAAgB1C,EAChBgG,EAAW,WACX,IAAIC,EAAWpB,EAAIhE,QAASqF,wBAAwBxD,MAChDA,IAAUuD,IACVvD,EAAQuD,EACRf,EAASe,KAMjB,OAHAE,OAAOC,iBAAiB,SAAUJ,GAElCA,IACO,WACHG,OAAOE,oBAAoB,SAAUL,KAG1C,IAEHD,oBAAU,WAENT,EAASgB,YAAM1B,KAChB,CAACA,SAEU5E,IAAVqF,QAAiCrF,IAAV0C,EACvB,OAAOzB,EAAAC,EAAAC,cAAA,OAAK0D,IAAKA,IAGrB,IACIgB,QAAQC,IAAI,KACZ,IAcIS,EAAoB,GAMpBC,EAAa9D,EAAQ,EAAI6D,EALP,GAJE,GAUpBE,EAAYD,EAAanB,EAAMqB,OAAO,GAAGC,eAAe,GAAGC,MAAQpB,EAAY3F,eAG/EgH,EAAYxB,EAAMqB,OAAO,GAAGI,cAAc,GAAGC,OAI7CC,EAAc,CACd,CAACjD,MAAO,MAAOkD,QAAQ,QAAOjH,OAAWA,EACzC,CAAC+D,MAAO,aAAS/D,OAAWA,OAAWA,GAEvCkH,EAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,IAAI,SAAAC,GAAC,OAAU,IAANA,IAC9DC,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5CC,EAAoB,SAACC,GACrB,OAAOL,EAAcK,EAAO,IAAOV,GAAa,EAAIpC,EAAW+C,MAAQ/C,EAAWgD,KAAQhD,EAAWiD,SAIrGC,EAAc,SAACJ,GACf,IAAIK,EAAmC,EAA5BC,KAAKC,MAAMP,EAAO,GAAK,GAASF,EAAQE,EAAO,IAE1D,OADAK,GAAQN,EAAkBC,GAAQ,EAAI,EAAI,GAI1CQ,EAAU,IAAKC,GAAW,EAS9B,GARA3C,EAAMqB,OAAOuB,QAAQ,SAAAC,GAAK,OAAIA,EAAMC,SAASF,QAAQ,SAAAG,GAAO,OACxDA,EAAQH,QAAQ,SAAAV,GACZQ,EAAUF,KAAKzD,IAAI2D,EAASR,EAAKc,MACjCL,EAAUH,KAAKxD,IAAI2D,EAAST,EAAKc,YAKrCN,GAAW,KAAOA,EAAU,GAAKC,GAAW,KAAOA,EAAU,EAE7D,MADAnC,QAAQC,IAAIiC,EAASC,GACf,IAAIM,MAAM,gEAQpB,IAJA,IAAIC,EAAUZ,EAAYI,GACtBS,EAAUb,EAAYK,GAGnBO,EAAU,IAAM,GAAKA,EAAU,IAAM,GAAGA,IAC/C,KAAOC,EAAU,IAAM,GAAKA,EAAU,IAAM,GAAGA,IAG3CX,KAAKY,IAAID,EAAUD,IAAY,IAC/BC,GAAYA,EAAU,IAAM,EAAK,EAAI,EACrCD,GAAYA,EAAU,IAAM,EAAK,EAAI,GAGzC,IAAIG,EAtEiB,IAsEJF,EAAUD,GAA4B,EAGnDI,EAAkBtD,EAAMqB,OAAO,GAAGC,eAAe,GAAGC,MACpDgC,EAAenC,EAAYkC,EAG3BE,EAAwBnG,EAA4B,EAApB6D,EAlEd,GAJE,GAuEpB1G,EAAiBgI,KAAKC,MAAMe,EAAwBD,GACxD,GAAI/I,GAAkB,EAClB,MAAM,IAAIyI,MAAM,kDAEpB/B,IAAsBsC,EAAwBhJ,EAAiB+I,GAAgB,EAK/E,IAAIE,EAAgBzD,EAAMqB,OAAOqC,OAAO,SAACC,EAAOd,GAAR,OAAkBL,KAAKxD,IAAI2E,EAAOd,EAAMC,SAASc,SAAS,GAClG,GAAIH,GAAiB,EACjB,MAAM,IAAIR,MAAM,yCAEpB,IAAIY,EAAYrB,KAAKsB,KAAKL,EAAgBjJ,GAetCuI,EAAU,SAAChB,EAAWgC,EAAWN,GAA0B,IAAAO,EAVpC,SAACP,GACxB,IAAInC,EAAiB9H,OAAAyK,EAAA,EAAAzK,CAAIwG,EAAOqB,OAAO,GAAGC,gBAAgB4C,UACtDzC,EAAgBjI,OAAAyK,EAAA,EAAAzK,CAAIwG,EAAOqB,OAAO,GAAGI,eAAeyC,UAKxD,MAAO,CAACC,YAHY7C,EAAe8C,KAAK,SAAAC,GAAa,OAAIA,EAActB,SAAWU,IAG7Da,WAFF7C,EAAc2C,KAAK,SAAAG,GAAY,OAAIA,EAAaxB,SAAWU,KAO9Ce,CAAqBf,GAAhDU,EAFsDH,EAEtDG,YAAaG,EAFyCN,EAEzCM,WAClBlD,EAAYD,EAAagD,EAAY5C,MAAQpB,EAAY3F,eACzD8I,EAAkBa,EAAY5C,MAC9BC,EAAY8C,EAAY5C,OAGxB,IAAI+C,EAAM,EACNC,EAA4B,GAChCA,EAAWvF,KAAKvD,EAAAC,EAAAC,cAAA,QAAM2I,IAAKA,IAAO1C,EAAGwB,EAAeoB,EAAiBZ,EAAGa,GAAqCvH,MAnH/F,EAmHmHC,OAAQ+F,EAnH3H,EAmHoJwB,KAAK,aACvK,IAAK,IAAIC,EAAI5B,EAAS4B,GAAK3B,EAAS2B,IAAK,CACrC,IAAIC,EAAapD,EAAYmD,EAAI,GACjC,QAAmBnK,IAAfoK,EAA0B,CAC1B,IAAIC,EAjHQ,GAiHoB3B,EAxHvB,IAwHoCyB,EAAI5B,GAA4B,EAK7E,GAJAwB,EAAWvF,KAAKvD,EAAAC,EAAAC,cAAA,QAAM2I,IAAKA,IAAO1C,EAAG4C,EAAiBZ,EAAGiB,EAAQL,EAAiBtH,MAAOkG,EAxHnF,EAwH+GjG,OAxH/G,EAwHoIuH,KAAME,EAAWrG,SACvJ+E,EAAgBjJ,IAAmB,IAA2B,IAAtBuK,EAAWnD,QACnD8C,EAAWvF,KAAKvD,EAAAC,EAAAC,cAAA,QAAMiG,GA1HpB,EA0HqC0C,IAAKA,IAAOV,EAAGiB,EAAO7G,SApHrD,GAoHkF8G,WAAW,MAAMC,iBAAiB,UAAU1C,KAAKC,MAAMqC,EAAI,KAErJA,EAAI3B,EACJ,IAAK,IAAIM,EAAgB,EAAGA,EAAgBH,EAAiBG,IAAiB,CAC1E,IAAI0B,EAAQ5B,EAAeD,EAAkBG,EAC7CiB,EAAWvF,KAAKvD,EAAAC,EAAAC,cAAA,QAAM2I,IAAKA,IAAO1C,EAAGoD,EAAQR,EAAiBZ,EAAGiB,EA9HtE,EA8HwF3H,MA/HrF,EA+HyGC,OAAQ8H,EAA4BP,KAAK,eAOhK,IAAMQ,EAA6B,GAC7BC,EAA6B,GAQnC,OAPAtF,EAAOqB,OAAOuB,QAAQ,SAAAC,GAClBA,EAAMC,SAASW,GAAeb,QAAQ,SAAAV,GAClCmD,EAAYlG,KAAKoG,GAASrD,EAAMuC,MAChCa,EAAYnG,KAAKqG,EAAStD,EAAMuC,UAKpC7I,EAAAC,EAAAC,cAAA,KAAG2J,GAAE,UAAAC,OAAYjC,EAAgB,GAAKgB,IAAKhB,EAAekC,UAAS,aAAAD,OAAe3D,EAAf,MAAA2D,OAAqB3B,EAArB,MAC/DnI,EAAAC,EAAAC,cAAA,KAAG2J,GAAG,SACqG,KACvG7J,EAAAC,EAAAC,cAAA,QAAMiG,EAnJJ,EAmJoBgC,EAAGa,GAAiCzG,SA7IlD,IA6IgFsF,EAAgB,GACvGiB,GAEL9I,EAAAC,EAAAC,cAAA,KAAG2J,GAAG,SACDH,EACAD,KAwBbO,EAAgB,SAACC,GAAD,MAAuB,CACvC9D,EAAGX,EAAYyE,EACf9B,EAAGV,EA5KiB,KA4LpBmC,EAAW,SAACtD,EAAiBhD,GAC7B,IAOe4G,EAAYC,EAAYhC,EAPnCU,EAAM,EACNuB,EAAuB,GAEvBzD,EAAOD,EAAYJ,EAAKc,MAAQE,EAJO+C,EAKdL,EAAc1D,EAAKgE,MAAxCC,EALmCF,EAKtClE,EAAcqE,EALwBH,EAK3BlC,EACRsC,EAAQT,EAAc1D,EAAKgE,KAAOhE,EAAKoE,UAA1CvE,EAgBL,OAde+D,EAYPK,EAZmBJ,EAYXM,EAZuBtC,EAYjBqC,EAXlBJ,EAAM7G,KAAKvD,EAAAC,EAAAC,cAAA,QAAM2I,IAAKA,IAAO1C,EAAG+D,EAAI/B,EAAGA,EA5M1B,IA4M+BxB,EAAO,GAAsB,EAAGlF,MAAO0I,EAAKD,EAAIxI,OA5M/E,GA4MuGuH,KAAM/L,IAAsBqH,EAAYpG,mBAAoBwM,YAAa,MAc7L3K,EAAAC,EAAAC,cAACF,EAAAC,EAAM2K,SAAP,CAAgB/B,IAAKvF,GAChB8G,IAKTT,GAAW,SAACrD,EAAiBhD,GAC7B,IAAIgD,EAAKuE,WAAWC,KAAKC,SAAS9H,IAAI+H,MAAtC,CAEA,IAAIC,EAAyB5E,EAAkBC,EAAKc,MAChDT,EAAOD,EAAYJ,EAAKc,MAAQE,EAJO4D,EAM9BlB,EAAc1D,EAAKgE,MAA3BnE,EANsC+E,EAMtC/E,EAAGgC,EANmC+C,EAMnC/C,EAERhC,GAAKgF,GACLhD,GAzOiB,GAyOZxB,EAAwB,EAC7B,IAAIyE,EA1Oa,GA0OgBxE,KAAKyE,KAAK,GAAK,EAG5CC,EAAmBH,GAAqBvE,KAAKyE,KAAK,GAElDE,EAAavL,EAAAC,EAAAC,cAAA,WAAS2I,IAAKvF,EAAGkI,OAAM,GAAA1B,OAAK3D,EAAL,KAAA2D,OAAU3B,EAAIiD,EAAY,EAA1B,KAAAtB,OAA+B3D,EAAIgF,GAAnC,KAAArB,OAAyD3B,EAAIiD,EAAY,EAAzE,KAAAtB,OAA8E3D,EAAIgF,GAAlF,KAAArB,OAAwG3B,EAAIiD,EAAY,GAAKnC,KAAM/L,IAAsBqH,EAAYnG,mBACzMqN,EAAezL,EAAAC,EAAAC,cAAA,WAAS2I,IAAKvF,EAAGkI,OAAM,GAAA1B,OAAK3D,EAAL,KAAA2D,OAAU3B,EAAIiD,EAAY,EAA1B,KAAAtB,OAA+B3D,EAAIgF,GAAnC,KAAArB,OAAyD3B,EAAIiD,EAAY,EAAzE,KAAAtB,OAA8E3D,EAAIgF,GAAlF,KAAArB,OAAwG3B,EAAIiD,EAAY,GAAKnC,KAAM/L,IAAsBqH,EAAYnG,mBAC3MsN,EAAe1L,EAAAC,EAAAC,cAAA,UAAQ2I,IAAKvF,EAAGqI,GAAIxF,EAAGyF,GAAIzD,EAAG0D,EAAG,IAAoC9C,YALtE,EAKgG+C,OAAQ5O,IAAsBqH,EAAYnG,iBAAkB6K,KAAK,SAC/K8C,EAAS/L,EAAAC,EAAAC,cAAA,UAAQ2I,IAAKvF,EAAGqI,GAAIxF,EAAGyF,GAAIzD,EAAG0D,EAAGV,GAAoBlC,KAAM/L,IAAsBqH,EAAYnG,mBAEtG4N,EAAchM,EAAAC,EAAAC,cAAA,KAAG2I,IAAKvF,GACtBtD,EAAAC,EAAAC,cAAA,UAAQyL,GAAIxF,EAAGyF,GAAIzD,EAAG0D,EAAG,EAA0B9C,YAAa,EAAG+C,OAAQ5O,IAAsBqH,EAAYnG,iBAAkB6K,KAAK,SADtH,IAEdjJ,EAAAC,EAAAC,cAAA,QAAMgK,GAAI/D,EAAImF,EAAkBW,GAAI9D,EAAImD,EAAkBnB,GAAIhE,EAAImF,EAAkBY,GAAI/D,EAAImD,EAAkBQ,OAAQ5O,IAAsBqH,EAAYnG,iBAAkB2K,YAAa,IACvL/I,EAAAC,EAAAC,cAAA,QAAMgK,GAAI/D,EAAImF,EAAkBW,GAAI9D,EAAImD,EAAkBnB,GAAIhE,EAAImF,EAAkBY,GAAI/D,EAAImD,EAAkBQ,OAAQ5O,IAAsBqH,EAAYnG,iBAAkB2K,YAAa,KAMvLoD,EAAa,CACbC,SAAKb,EACLc,SAAKZ,EACLa,SAAKZ,EACLa,SAAKR,EACLS,SARSxM,EAAAC,EAAAC,cAAA,QAAMiG,EAAGA,EAAIgF,GAAqBpC,IAAiBZ,EAAGA,EAAIgD,GAAqBpC,IAAiBtH,MAAO0J,GAA8BzJ,OAAQyJ,GAA8BlC,KAAM/L,IAAsBqH,EAAYnG,mBAS5NqO,SARezM,EAAAC,EAAAC,cAAA,QAAMiG,EAAGA,EAAIgF,GAAqBpC,IAAiBZ,EAAGA,EAAIgD,GAAqBpC,IAAiBtH,MAAO0J,GAA8BzJ,OAAQyJ,GAA8BW,OAAQ5O,IAAsBqH,EAAYnG,iBAAkB2K,YAfxO,EAekQE,KAAK,SASrRyD,SAAKV,GAET,OAAsB,IAAff,EAAmBkB,EAAW5H,EAAY9F,kBAAqBwM,EAAa,EAAIkB,EAAW5H,EAAY7F,gBAAkByN,EAAW5H,EAAY5F,iBAcvJgO,GAAyBzJ,YAAM,EAAG+E,GAAW/B,IAAI,SAAA5C,GAAC,OArH5C,SAACA,GACP,IAAI5B,EAAU+F,EAzJM,GAyJ2B0D,GAC/C,OACInL,EAAAC,EAAAC,cAAA,OAAK2J,GAAE,MAAAC,OAAQxG,GAAKuF,IAAKvF,EAAGsJ,QAAO,OAAA9C,OAASrI,EAAT,KAAAqI,OAAkBpI,GAAUE,MAAO,CAACiB,cAAa,GAAAiH,OA5J3E,MA6JL9J,EAAAC,EAAAC,cAAA,KAAG2J,GAAE,MAAAC,OAAQxG,GAAKuF,IAAKvF,EAAGyG,UAAS,aAAAD,OAAexE,EAAf,SACuE,KACqB,KAC3HtF,EAAAC,EAAAC,cAAA,QAAMiG,EA3JA,GA2JoBgC,EA/JlB,GA+JyCV,EAAY,EAAGlF,SAAUsK,KAAuBxD,WAAW,MAAMC,iBAAiB,UAAnI,gBACAtJ,EAAAC,EAAAC,cAAA,QAAMiG,EAAG0G,GAAsD1E,EAAGa,GAAqCvH,MAtKrG,EAsKyHC,OAAQ+F,EAtKjI,EAsK0JwB,KAAK,YAEhK/F,YAAM,EAAGI,EAAI2E,EAAY,EAAIrJ,EAAiBiJ,GAAiBI,EAAY,GAAKrJ,GAAgBsH,IAAI,SAAAgD,GAAC,OAClG/B,EAAQ0F,GAAqC3D,EAAIvB,EAAc,EAAGrE,EAAI1E,EAAiBsK,OA0GjD4D,CAAIxJ,KAC9D,OACItD,EAAAC,EAAAC,cAAA,OAAK2J,GAAG,SAASjG,IAAKA,EAAKhC,MAAO,CAACH,MAAO,OAAQC,OAAQ,OAAQqL,SAAU,SAAUC,SAAU,QAASC,WAAY,OAAQC,WAjR3G,GAiRwIrK,cAjRxI,KAmRb8J,IAGX,MAAMQ,IAMJ,OALIzI,EAAYnE,QArUHmD,EAsUC,2DArUdiB,EAAeyI,IAAmB,oBAAoB1J,EAAM,QAAQ,WAChE2J,YAAS,KACTC,EAAa,kBAAI3I,EAAeyI,aAsUpCxI,QAAQC,IAAI,KACL7E,EAAAC,EAAAC,cAAA,OAAK0D,IAAKA,oECvWzB/C,EAAAC,EAAAC,EAAA,sBAAAsE,IAAA,IAAAkI,EAAA1M,EAAA,GAEM2M,EAAc,SAACC,GAEjB,IAAIC,EAAQ,CAACC,EAAG,EAAG7M,EAAG,EAAGqM,EAAG,EAAGS,EAAG,EAAGC,EAAG,EAAG5N,EAAG,EAAG6N,EAAG,IAAkCL,EAAMC,KAAKK,eACjG,OAA4B,IAApBN,EAAMO,OAAS,GAAUN,QAAwB3O,IAAhB0O,EAAMQ,MAAsB,EAAIrH,KAAKsH,MAAMT,EAAMQ,SAGjF5I,EAAQ,SAAC1B,GAClB,IAAIwK,EAAkB,EAClBC,EAQA,GAgHJ,OA/GAzK,EAAIuD,SAASF,QAAQ,SAACG,EAASU,GAC3BjK,OAAOC,KAAKsJ,EAAQiH,OAAOpH,QAAQ,SAAAqH,QACPtP,IAApBqP,EAAMC,KACND,EAAMC,GAAY,CACdC,eAAWvP,EACXwP,SAAU,EACV7I,eAAgB,GAChBG,cAAe,GACfqB,SAAUsH,MAAM7K,EAAIuD,SAASc,UAGrC,IAAIyG,EAAOL,EAAMC,GACbK,EAAqB,GAErBC,EAAwB,SAACL,GACzB,YAAuBvP,IAAnB0P,EAAKH,WACL1J,QAAQlB,MAAM,gEACP4K,EAAY,IAEhBA,EAAYG,EAAKH,WAAaH,EAAkB,IAE3DM,EAAKF,SAAW,EAChBpH,EAAQiH,MAAMC,GAAUrH,QAAQ,SAAA4H,GAC5B,OAAQA,EAAMC,QACV,IAAK,OACD,QAAuB9P,IAAnB6P,EAAMlE,SAAwB,CAC9B,IAAIJ,EAAOmE,EAAKF,SAmBhB,QAlBoBxP,IAAhB6P,EAAME,MACe,IAAjBJ,EAAM1G,OACNpD,QAAQlB,MAAM,wEAEVgL,EAAMA,EAAM1G,OAAS,GAAG0C,WAAaiE,EAAsBC,EAAMlE,WACjE9F,QAAQlB,MAAM,oDAElB4G,EAAOoE,EAAMA,EAAM1G,OAAS,GAAGsC,MAGnCmE,EAAKF,UAAYI,EAAsBC,EAAMlE,eAE9B3L,IAAf6P,EAAMG,WAAsChQ,IAAhB6P,EAAMnB,OAClC7I,QAAQlB,MAAM,6DAEC3E,IAAf6P,EAAMG,WAAsChQ,IAAhB6P,EAAMnB,OAClC7I,QAAQlB,MAAM,+DAEE3E,IAAhB6P,EAAMnB,MAAqB,CAC3B,IAAMuB,EAAYJ,EAAM9D,KACxB4D,EAAMnL,KAAK,CACP+G,OAAMI,SAAUiE,EAAsBC,EAAMlE,UAC5CtD,KAAMoG,EAAYoB,EAAMnB,OACxB5C,WAAY,CACRC,KAAMkE,EAAYA,EAAU9I,IAAI,SAAA+I,GAAG,OAAiB,IAAbA,EAAI1P,KAAa0D,IAAIiM,MAAQjM,IAAI+H,OAAQ,MAI5FyD,EAAKvH,SAASW,GAAiB6G,EAEnC,MACJ,IAAK,SACDD,EAAKF,UAAYI,EAAsBC,EAAMlE,UAC7C,MACJ,IAAK,UACD+D,EAAKF,UAAYI,EAAsBC,EAAMlE,UAC7C,MACJ,IAAK,aAID,QAHwB3L,IAApB6P,EAAMN,YACNG,EAAKH,UAAYM,EAAMN,gBAEPvP,IAAhB6P,EAAMO,OACqB,IAAvBP,EAAMO,MAAMnH,OACZ,IACIyG,EAAK/I,eAAenC,KAAK,CACrB4D,QAASU,EACTlC,MAAOyJ,SAASR,EAAMO,MAAM,GAAGxJ,MAAM,IACrC0J,UAAWT,EAAMO,MAAM,GAAGE,UAAU,KAExClB,EAAkBS,EAAMO,MAAM,GAAGE,UAAU,GAC7C,MAAOlC,GACLvI,QAAQlB,MAAM,iCAAkCkL,EAAMO,MAAM,IAIxE,GAAIP,EAAM/I,eAAgD,IAA/B+I,EAAM/I,cAAcmC,OAC3C,IACIyG,EAAK5I,cAActC,KAAK,CACpB4D,QAASU,EACT/B,OAAQ8I,EAAM/I,cAAc,GAAGC,SAErC,MAAOqH,GACLvI,QAAQlB,MAAM,gCAAiCkL,EAAM/I,cAAc,IAG3E,MACJ,IAAK,QAEL,IAAK,UAEL,IAAK,YACD,MACJ,QACIjB,QAAQlB,MAAR,iCAAAoG,OAA+C8E,EAAMC,OAArD,aAWb,CAACpJ,OALa7H,OAAOC,KAAKuQ,GAAOlI,IAAI,SAAAC,GAAC,MAAK,CAC9Ce,SAAUkH,EAAMjI,GAAGe,SACnBxB,eAAgB0I,EAAMjI,GAAGT,eACzBG,cAAeuI,EAAMjI,GAAGN,qCCjIhCyJ,EAAAC,QAAiB1O,EAAA2O,EAAuB,wDCAxCF,EAAAC,QAAiB1O,EAAA2O,EAAuB,wQCwElC3N,EAnCW,CACf4N,aAAc,CACZ1C,SAAU,UAEZ2C,OAAQ,CACNxC,WAAY,MACZyC,UAAW,SACX3M,WAAY,SACZT,SAAU,OACVqN,WAAY,SACZpN,UAAW,SACXqN,cAAe,SACfvN,KAAM,MACNP,IAAK,MACLL,OAAQ,OACRqI,UAAW,sBACX+F,gBAAiB,UACjB9C,SAAU,QACV3K,SAAU,YAEZ0N,KAAM,CACJhO,IAAK,OACLL,OAAQ,oBACRqL,SAAU,QAEZiD,QAAS,CACPpN,UAAW,SACXD,UAAW,SACXmN,gBAAiB,kBACjB/N,IAAK,OACLL,OAAQ,oBACRY,KAAM,OACN2N,MAAO,QAKIC,EAjEgB,SAAAjR,GAMzB,IALJyQ,EAKIzQ,EALJyQ,OACAnN,EAIItD,EAJJsD,SACA4N,EAGIlR,EAHJkR,SACAC,EAEInR,EAFJmR,aACAlR,EACID,EADJC,SAEA,OACEmR,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO4N,cACjBY,EAAApQ,EAAAC,cAAA,OAAK2J,GAAG,SAASjI,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAOiE,EAAO6N,OAAd,CAAsBnN,SAAUA,GAAY,MAC/DmN,GASHW,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOkO,MAAO7Q,GAC1BmR,EAAApQ,EAAAC,cAAA,OAAKqQ,UAAS,YAAAzG,OAAcsG,EAAa,OAAO,SAC9CxO,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAOmO,UACbG,8BCnBTjS,EAAsB,GAEbsS,EAAqB1R,6BAAcC,GACnC0R,EAAyC,SAAAxR,GAAgB,IAAdC,EAAcD,EAAdC,SAEhDC,EAAUC,iBAAO,SAACC,EAAcC,GAChC,OAAQA,EAAOC,MACX,IAAK,MACD,OAAOD,EAAOG,OALwCC,EAQ1CC,qBAAWR,EAAQS,QAAS1B,GARc2B,EAAAjC,OAAA8S,EAAA,EAAA9S,CAAA8B,EAAA,GAQ7DL,EAR6DQ,EAAA,GAQtDE,EARsDF,EAAA,GASlE,OACIwQ,EAAApQ,EAAAC,cAACsQ,EAAmBrQ,SAApB,CAA6BC,MAAO,CAACf,EAAOU,IACvCb,IAIAyR,EAAsB,kBAAMrQ,qBAAWkQ,2DC0T9C3O,EAxHW,CACb+O,SAAU,CACNC,MAAO,OACPpP,MAAO,OAGXqP,IAAK,CACDC,YAAa,OAMjBzO,KAAM,CACFH,QAAS,OACTyN,WAAY,SACZlO,OAAQ,OACRoB,MAAO,UACPkO,UAAW,OACXC,WAAY,OACZ1O,SAAU,OACVS,WAAY,OACZD,OAAQ,UACRV,SAAU,WACVwO,MAAO,OACPpP,MAAO,QAEXwO,MAAO,CACH9N,QAAS,OACTyN,WAAY,SACZlO,OAAQ,OACRsP,UAAW,OACXhO,WAAY,OACZF,MAAO,UACPP,SAAU,OACVwO,YAAa,OACb1O,SAAU,WACVwO,MAAO,QACPpP,MAAO,OACPsB,OAAQ,WAGZmO,UAAW,CACPxP,OAAQ,QAEZ+B,OAAQ,CACJ1B,IAAK,OACLL,OAAQ,QAEZsO,QAAS,CACLlN,MAAO,QACPkK,SAAU,SAEdmE,WAAY,CACRhP,QAAS,OACTiP,eAAgB,SAChBxB,WAAY,SAEZyB,aAAc,oBACd3P,OAAQ,OACRoB,MAAO,UACPP,SAAU,OACVS,WAAY,OACZX,SAAU,WACVZ,MAAO,QAEX6P,kBAAmB,CACfjP,SAAU,WACVZ,MAAO,MACPC,OAAQ,OACR6P,WAAY,SACZ/O,UAAW,SACXO,OAAQ,WAEZyO,UAAW,CACPnP,SAAU,WACVN,IAAK,MACLO,KAAM,MACNb,MAAO,OACPC,OAAQ,OACRqB,OAAQ,UACRL,QAAS,MACT+O,QAAS,GAEbC,eAAgB,CACZhP,QAAS,SACTL,SAAU,WACV2O,UAAW,QAEfrK,KAAM,CACFpE,SAAU,OACVoP,OAAQ,WACRP,eAAgB,SAChBxB,WAAY,WACZzN,QAAS,OACTE,SAAU,WACVX,OAAQ,QAGZkQ,KAAM,CACFvP,SAAU,WACVZ,MAAO,OAEXoQ,OAAQ,CACJtP,SAAU,OACVb,OAAQ,OACRoQ,mBAAoB,aACpBC,iBAAkB,YAClBC,gBAAe,OAAAlI,OAASmI,IAAT,KACfnC,gBAAiB,wBACjBoC,YAAa,OACbC,OAAQ,oBACRC,aAAc,OACd/P,SAAU,WACVZ,MAAO,MACPe,UAAW,SACX6P,iBAAkB,SAOXC,EAzUkB,WAAM,IAAAzO,EAEbC,oBAAS,GAFIC,EAAAnG,OAAA8S,EAAA,EAAA9S,CAAAiG,EAAA,GAE9B0O,EAF8BxO,EAAA,GAExByO,EAFwBzO,EAAA,GAAAO,EAICjE,cAJDoS,EAAA7U,OAAA8S,EAAA,EAAA9S,CAAA0G,EAAA,GAI9BC,EAJ8BkO,EAAA,GAIjBC,EAJiBD,EAAA,GAAAE,EAKChC,IALDiC,EAAAhV,OAAA8S,EAAA,EAAA9S,CAAA+U,EAAA,GAK9BE,EAL8BD,EAAA,GAKjBE,EALiBF,EAAA,GAAApO,EAMV5D,cANUsD,GAAAtG,OAAA8S,EAAA,EAAA9S,CAAA4G,EAAA,MAQqBV,oBAAS,IAR9BK,EAAAvG,OAAA8S,EAAA,EAAA9S,CAAAsG,EAAA,GAQ9B6O,EAR8B5O,EAAA,GAQP6O,EARO7O,EAAA,GAgBnCW,oBAAU,WACN,GAAIyN,EAEA,OADAS,GAAyB,GAClB,aAEP,IAAIC,EAAUC,WAAW,WACrBF,GAAyB,IAC1B,KACH,OAAO,WACHG,aAAaF,KAGtB,CAACV,IAEJzN,oBAAU,WACNlH,OAAAwV,EAAA,EAAAxV,CAAAyV,EAAApT,EAAAqT,KAAC,SAAAC,IAAA,IAAA1J,EAAA2J,EAAA9S,EAAA,OAAA2S,EAAApT,EAAAwT,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEG,QAAuB7U,IAAnB8T,EAAYhJ,GACZ,IAEQA,EAAKgK,aAAaC,QAAQ,gBAC1BN,EAAYO,KAAK1O,MAAMwO,aAAaC,QAAQ,iBAAkBE,OAAO,SAAC7N,GAAD,OAAYA,EAAE0D,KAAOA,IAAI,GAAG2J,UACjG9S,EAAOqT,KAAK1O,MAAMwO,aAAaC,QAAQjK,IAC3CiJ,EAAe,CAACvT,KAAM,MAAOE,IAAK,CAACoK,KAAI2J,YAAW9S,UACpD,MAAOyM,GACLvI,QAAQC,IAAIsI,GACZE,YAAS,MAXpB,wBAAAqG,EAAAO,SAAAV,KAAD3V,IAeD,CAACiV,EAAYhJ,GAAIiJ,IAEpB,IA+BIoB,EAAW7D,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOmO,SAC9BK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOsP,YACfd,EAAApQ,EAAAC,cAAA,OAAKmB,MAAM,kBAAkBO,MAAOC,EAAOyP,kBAAmBpP,QAAS,YAvB9D,WACb,IAAIiS,EAAO,IAAIC,KAAK,CAACL,KAAKM,UAAU9P,EAAa,KAAM,IAAK,CAAChF,KAAM,eACnE+U,iBAAOH,EAAM,qBAqBqEI,KAA9E,UAGAlE,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOyP,mBAAnB,SAEIjB,EAAApQ,EAAAC,cAAA,SAAO0B,MAAOC,EAAO2P,UAAWjS,KAAK,OAAO8B,MAAM,kBAAkBmT,OAAO,SAASC,SAAU,SAACtH,IAxB1F,SAACA,GACd,IACI,IAAIuH,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUzH,GACtB,IACI,IAAI0H,EAASd,KAAK1O,MAAO8H,EAAE2H,OAAeC,QAC1CrC,EAAe,CAACnT,KAAM,MAAOE,IAAKoV,IACpC,MAAO1H,GACLvI,QAAQlB,MAAMyJ,KAGtBuH,EAAOM,WAAY7H,EAAE2H,OAAeG,MAAM,IAC5C,MAAO9H,GACLvI,QAAQlB,MAAMyJ,GAElBA,EAAE2H,OAAO1U,MAAQ,GAS6F8U,CAAW/H,OAErHkD,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOyP,kBAAmBpP,QAAS,WAAOsQ,GAAQ,KAA9D,YAIJnC,EAAApQ,EAAAC,cAAA,QAAMiV,SAAU,WAAO3C,GAAQ,KAC3BnC,EAAApQ,EAAAC,cAAA,aACImQ,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO6P,gBACfrB,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,uBACAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAYpG,kBAAmBsW,SAChE,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACtB,kBAAmBgP,EAAE2H,OAAO1U,WACxEzC,IAAuBuI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAExDkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,qBACAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAYnG,gBAAiBqW,SAC9D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACrB,gBAAiB+O,EAAE2H,OAAO1U,WACtEzC,IAAuBuI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAGxDkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,eAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAYlG,WAAYoW,SACzD,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACpB,WAAY8O,EAAE2H,OAAO1U,WACjEtC,IAAuBoI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAGxDkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,sBAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAYjG,kBAAmBmW,SAChE,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACnB,kBAAmB6O,EAAE2H,OAAO1U,WACxErC,IAAyBmI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAG1DkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,oBAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAYhG,gBAAiBkW,SAC9D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAAClB,gBAAiB4O,EAAE2H,OAAO1U,WACtErC,IAAyBmI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAI1DkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,cAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAY/F,UAAWiW,SACxD,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACjB,UAAW2O,EAAE2H,OAAO1U,WAChEtC,IAAuBoI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAGxDkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,sBAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAY9F,iBAAkBgW,SAC/D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAAChB,iBAAkB0O,EAAE2H,OAAO1U,WACvEpC,IAA0BkI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAG3DkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,oBAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAY7F,eAAgB+V,SAC7D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACf,eAAgByO,EAAE2H,OAAO1U,WACrEpC,IAA0BkI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAG3DkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,mBAEAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAY5F,cAAe8V,SAC5D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACd,cAAewO,EAAE2H,OAAO1U,WACpEpC,IAA0BkI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,OAG3DkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8E,MACf0J,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+P,MAAnB,oBACAvB,EAAApQ,EAAAC,cAAA,UAAQ0B,MAAOC,EAAOgQ,OAAQzR,MAAOmE,EAAY3F,eAAgB6V,SAC7D,SAACtH,GAAOuF,EAAe,CAACnT,KAAM,MAAOE,IAAK,CAACb,eAAgBuO,EAAE2H,OAAO1U,WACrEnC,IAAsBiI,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAAA,UAAQ2I,IAAK1C,GAAIA,WAOvE,OACIkK,EAAApQ,EAAAC,cAACkV,EAAD,CAAO1F,OAAO,QAAQU,aAAcmC,EAAMpC,SAAU+D,GAChD7D,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOqP,WAEfb,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOS,KAAMJ,QAAS,WAAOmL,YAAS,OAC9CgD,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOiP,IAAKuE,MAAM,6BAA6B5T,MAAM,KAAKC,OAAO,KAAKkL,QAAQ,YAAY3D,KAAK,OAAO6C,OAAO,eAAe/C,YAAY,MAAMuM,cAAc,QAAQC,eAAe,SAAQlF,EAAApQ,EAAAC,cAAA,QAAMY,EAAE,mDAAwDuP,EAAApQ,EAAAC,cAAA,YAAUsL,OAAO,2BAD5R,QAIA6E,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOS,KAAMJ,QAAS,YAxIhC,WACV,IACKgD,OAAesQ,MAAQA,IACxB,IAAIC,EAAM,IAAIC,IAAM,IAAK,KAAM,UAC9BD,EAAYE,cAAcC,SAASC,eAAe,UAAWC,UAAW,EAAG,EAAG,IAAM,KACrFL,EAAIM,KAAJ,GAAAjM,OAAY+I,EAAYW,WAAa,UAArC,SACF,MAAOrG,GACLvI,QAAQlB,MAAMyJ,IAiI+B6I,KACrC3F,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOiP,IAAKuE,MAAM,6BAA6BY,gBAAc,MAAMxU,MAAM,KAAKC,OAAO,KAAKkL,QAAQ,YAAY3D,KAAK,OAAO6C,OAAO,eAAe/C,YAAY,MAAMuM,cAAc,QAAQC,eAAe,SAAQlF,EAAApQ,EAAAC,cAAA,QAAMY,EAAE,+DAAoEuP,EAAApQ,EAAAC,cAAA,YAAUsL,OAAO,oBAD5T,eAKA6E,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOoO,MAAO/N,QAAS,WAAOsQ,GAAQ,KAE5CO,EAAgC1C,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,KAAEyF,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOiP,IAAKuE,MAAM,6BAA6B5T,MAAM,KAAKC,OAAO,KAAKkL,QAAQ,YAAY3D,KAAK,OAAO6C,OAAO,eAAe/C,YAAY,MAAMuM,cAAc,QAAQC,eAAe,SAAQlF,EAAApQ,EAAAC,cAAA,UAAQyL,GAAG,KAAKC,GAAG,KAAKC,EAAE,MAAawE,EAAApQ,EAAAC,cAAA,QAAMY,EAAE,ouBAAxP,eAARuP,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,QAKlCyF,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO4B,aACO1E,IAArB8T,EAAYnS,KAAqB,KAAO2P,EAAApQ,EAAAC,cAACuD,EAAA,EAAD,CAAQE,IAAKkP,EAAYnS,UCjM5EmB,EATW,CACbP,KAAM,CACFS,IAAK,MACLL,OAAQ,OACRqI,UAAW,uBACXvH,UAAW,SACXD,SAAU,SAKH2T,EAnBmB,WAC9B,OACI7F,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOP,MAAnB,iCCMO6U,EAR2B,SAAAlX,GAAgB,IAAdC,EAAcD,EAAdC,SAMxC,MAJqB,CAACuB,IAAqBgQ,EAA0BzR,KACtDgI,QAAQ,SAAAb,GACnBjH,EAAWiH,EAAE,CAACjH,eAEXmR,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,KAAG1L,ICyFR2C,EAlDW,CACbuU,GAAI,CACA/T,SAAU,QACVyN,gBAAiB,aAErBuG,MAAO,CACHlE,OAAQ,iBACRpF,SAAU,SACVhD,UAAW,uBACXqI,aAAc,QAElB1C,OAAQ,CACJhO,OAAQ,OACRoO,gBAAiB,OACjBwG,WAAY,OACZ9T,UAAW,SACXyK,WAAY,OACZoE,aAAc,kBAElBkF,YAAa,CACTjU,KAAM,OACN2N,MAAO,OACPxO,MAAO,OACPc,SAAU,QAEdjB,KAAM,CACFS,IAAK,OACL+N,gBAAiB,OACjBpO,OAAQ,qBAEZqO,KAAM,CACFhO,IAAK,mBACLO,KAAM,MACNZ,OAAQ,OACRD,MAAO,MACP+U,UAAW,qBACXhU,UAAW,SACXD,SAAU,OACVwH,UAAW,wBACXnH,UAAW,QAEf6T,QAAS,CACL1U,IAAK,OACLC,OAAQ,OACRM,KAAM,MACNb,MAAO,QACPC,OAAQ,OACRqI,UAAW,yBAKJqD,EAhGiB,WAAM,IAAA5I,EAElB5D,cAAX8V,EAF6B9Y,OAAA8S,EAAA,EAAA9S,CAAA4G,EAAA,MAG9B9D,EAAOgW,EAAOhW,KAHgBmD,EAKZC,mBAAS,CAAC6S,QAAQ,EAAOC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAGC,OAAQ,EAAG5Q,EAAG,EAAGgC,EAAG,IALlEpE,EAAAnG,OAAA8S,EAAA,EAAA9S,CAAAiG,EAAA,GAK7BmT,EAL6BjT,EAAA,GAKvBkT,EALuBlT,EAAA,GAalC,OANAe,oBAAU,WACQ,IAAXkS,EAAK7Q,GAAsB,IAAX6Q,EAAK7O,GAAYuO,EAAOnW,OACvC0W,EAAQrZ,OAAA0S,EAAA,EAAA1S,CAAA,GAAIoZ,EAAL,CAAW7Q,EAAG,EAAGgC,EAAG,MAEjC,CAAC6O,EAAKN,EAAOnW,QAGVmW,EAAOnW,MAAW8P,EAAApQ,EAAAC,cAAA,OACf0B,MAAOC,EAAOuU,GACdc,YAAa,SAAC/J,GAAK8J,EAAQrZ,OAAA0S,EAAA,EAAA1S,CAAA,GAAIoZ,EAAL,CAAWF,OAAQ3J,EAAEgK,QAASJ,OAAQ5J,EAAEiK,SAAaJ,EAAKL,OAAO,CAACxQ,EAAG6Q,EAAKF,OAAOE,EAAKJ,OAAQzO,EAAG6O,EAAKD,OAAOC,EAAKH,QAAQ,MACpJQ,UAAW,WAAKJ,EAAQrZ,OAAA0S,EAAA,EAAA1S,CAAA,GAAIoZ,EAAL,CAAWL,QAAQ,MAC1CW,aAAc,WAAKL,EAAQrZ,OAAA0S,EAAA,EAAA1S,CAAA,GAAIoZ,EAAL,CAAWL,QAAQ,OAE7CtG,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GACHiE,EAAOwU,MADJ,CAENtU,IAAG,cAAA+H,OAAgBkN,EAAK7O,EAArB,OACH7F,KAAI,cAAAwH,OAAgBkN,EAAK7Q,EAArB,OACJ1E,MAAK,GAAAqI,OAAKpJ,EAAKe,MAAV,MACLC,OAAM,GAAAoI,OAAKpJ,EAAKgB,OAAV,SAEN2O,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO6N,OAAb,CAAqBnN,SAAU,KACrCgV,YAAa,WAAKN,EAAQrZ,OAAA0S,EAAA,EAAA1S,CAAA,GAAIoZ,EAAL,CAAWL,QAAQ,EAAMC,OAAQI,EAAKF,OAAOE,EAAK7Q,EAAG0Q,OAAQG,EAAKD,OAAOC,EAAK7O,OAEtGzH,EAAKW,MACNgP,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO0U,aACD,KAGtBlG,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOP,MACdZ,EAAKiB,YAtBJ,MCTP6V,EARc,SAAAvY,GAAgB,IAAdC,EAAcD,EAAdC,SAEvBuY,EAAa,CAACrK,GAIlB,OAHAqK,EAAWzQ,QAAQ,SAAAb,GACfjH,EAAWiH,EAAE,CAACjH,eAEXmR,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,KAAG6M,EAAWvR,IAAI,SAACwR,EAAEpU,GAAH,OAAO+M,EAAApQ,EAAAC,cAACwX,EAAD,CAAG7O,IAAKvF,0CC0OtCzB,EAvFW,CACb8V,UAAW,CACPxV,QAAS,OACTC,cAAe,SACf2K,SAAU,UAEd6K,KAAM,CACFvV,SAAU,UACVN,IAAK,OACLO,KAAM,OACNZ,OAAQ,OACRuP,WAAY,MACZxP,MAAO,MACPsI,UAAW,sBACXvH,UAAW,SACXD,SAAU,OACVE,KAAM,YAEV+O,UAAW,CACPnP,SAAU,WACVN,IAAK,MACLO,KAAM,oBACNb,MAAO,QACPC,OAAQ,OACRqB,OAAQ,UACR0O,QAAS,GAEboG,YAAa,CACT/U,MAAO,UACPgV,SAAU,QACVpW,OAAQ,QACR0Q,aAAc,OACdD,OAAQ,oBACRzP,QAAS,MACTqK,SAAU,UAEdgL,iBAAkB,CACd1V,SAAU,WACV6P,YAAa,OACb8F,aAAc,OACdrV,UAAW,SACXC,UAAW,QAEfqV,gBAAiB,CACb9V,QAAS,OACTV,MAAO,oBACPuP,UAAW,OACXC,WAAY,MACZF,YAAa,MACbuF,WAAY,OACZ/T,SAAU,OACVF,SAAU,WACVX,OAAQ,OACR6P,WAAY,SACZxE,SAAU,SACVmL,aAAc,WACdnV,OAAQ,WAEZoV,qBAAsB,CAClB9V,SAAU,WACVX,OAAQ,MACRoO,gBAAiB,UACjBsC,aAAc,QAElBgG,qBAAsB,CAClB/V,SAAU,UACVZ,MAAO,OACPgB,KAAM,WACN8O,WAAY,SACZxE,SAAU,SACVmL,aAAc,YAElBjW,KAAM,CACFa,MAAO,UACPC,OAAQ,UACRR,SAAU,OACVS,WAAY,QAEhBqV,KAAM,CACF3W,OAAQ,MACRD,MAAO,MACPY,SAAU,WACVF,QAAS,cACTJ,IAAK,SACLgP,YAAa,UAKNuH,EA1Oe,WAAM,IAAAzU,EAOIC,wBAAuB/E,GAP3BgF,EAAAnG,OAAA8S,EAAA,EAAA9S,CAAAiG,EAAA,GAO3BgU,EAP2B9T,EAAA,GAOdwU,EAPcxU,EAAA,GAAAS,EASP5D,cAAlB+D,EATyB/G,OAAA8S,EAAA,EAAA9S,CAAA4G,EAAA,MAAAmO,EAUPhC,IAAlBmC,EAVyBlV,OAAA8S,EAAA,EAAA9S,CAAA+U,EAAA,MAkBhC7N,oBAAU,WACN,IAAI0T,EAAuB,KAC3B,IACIA,EAASzE,KAAK1O,MAAMwO,aAAaC,QAAQ,iBAC3C,MAAO3G,IACM,OAAXqL,IACAA,EAAS,IAEbD,EAAeC,IAChB,IAEH,IAAMC,EAAW,SAACtS,GACd,IACI,IAAI0O,EAASd,KAAK1O,MAAMwO,aAAaC,QAAQ3N,EAAE0D,KAG/CiJ,EAAe,CAACvT,KAAM,MAAOE,IAAK,CAACoK,GAAI1D,EAAE0D,GAAI2J,UAAWrN,EAAEqN,UAAW9S,KAAMmU,KAE3E,IAEIhB,aAAa6E,QAAQ,eAAgBvS,EAAE0D,IACzC,MAAMsD,GAEJvI,QAAQlB,MAAMyJ,GAGlBE,YAAS,WACX,MAAOF,GAjCIzJ,EAkCC,iEAjCdiB,EAAeyI,IAAmB,oBAAoB1J,EAAM,QAAQ,WAChEiB,EAAeyI,UAiCfxI,QAAQlB,MAAMyJ,GAnCN,IAACzJ,GAoFjB,OACI2M,EAAApQ,EAAAC,cAACkV,EAAD,CAAO1F,OAAO,cACO3Q,IAAhB8Y,EAA4B,KAAOxH,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO8V,WACnDtH,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,eACnC4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBE,SAAU,WAAvC,+IAIwB,IAAvBD,EAAY7P,OAAeqI,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,KACxByF,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,gBACnC4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+V,MAAnB,uCAGAvH,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,kBACjC4N,EAAApQ,EAAAC,cAAAmQ,EAAApQ,EAAA2K,SAAA,KACEyF,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,iBACnC4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBrV,SAAU,OAAQS,WAAY,YAA3D,gBACAqN,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,iBACnC4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAS/V,EAAOgW,cACnCxH,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAOkW,mBAClBF,EAAY3R,IAAI,SAAAC,GAAC,OAAIkK,EAAApQ,EAAAC,cAACyY,EAAA,SAAD,CAAU9P,IAAK1C,EAAE0D,IACnCwG,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOoW,gBAAiB/V,QAAS,WAAOuW,EAAStS,KACzDkK,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAOuW,qBAAb,CAAmC3V,KAAM,WAAYO,WAAY,UACtEmD,EAAEqN,WAEPnD,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAOuW,qBAAb,CAAmC3W,MAAO,OAAQgB,KAAM,eAClE4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAOuW,qBAAb,CAAmC3V,KAAM,gBAAiBF,SAAU,WACxEzB,EAA8D,IAAI8X,KAAKzS,EAAE0S,MAAxE,GAAA/O,OAAOhJ,EAAEgY,WAAa,EAAtB,KAAAhP,OAA2BhJ,EAAEiY,UAA7B,KAAAjP,OAA0ChJ,EAAEkY,kBAGvD3I,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAOsW,wBAHT,IAAArX,MAOtBuP,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,kBAE3C4N,EAAApQ,EAAAC,cAAA,OAAK0B,MAAOC,EAAO+V,MACfvH,EAAApQ,EAAAC,cAAA,QAAM0B,MAAOC,EAAOI,KAAMC,QAAS,cAC/BmO,EAAApQ,EAAAC,cAAA,OAAK+Y,IAAKnI,IAAKlP,MAAOC,EAAOwW,KAAMa,IAAI,KAD3C,uBAGI7I,EAAApQ,EAAAC,cAAA,SAAO0B,MAAOC,EAAO2P,UAAWjS,KAAK,OAAO8B,MAAM,kBAAkBmT,OAAO,YAAYC,SAAU,SAACtH,IArFnG,SAACA,GAChB,IAAIgM,EAAYhM,EAAE2H,OAAeG,MAAM,GAAGrD,KAAKwH,QAAQ,gBAAiB,IACxE,IACI,IAAI1E,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUzH,GACtB,IACI,IAAI0H,EAASwE,IAASC,WAAYnM,EAAE2H,OAAeC,QAEnD,IACI,IAAIlL,EAAE,QAAAC,OAAW0E,MAAM+K,KAAK,CAACvR,OAAQ,IAAK,kBAAMpB,KAAKC,MAAsB,GAAhBD,KAAK4S,UAAeC,SAAS,MAAKC,KAAK,KAGlG5G,EAAe,CAACvT,KAAM,MAAOE,IAAK,CAACoK,KAAI2J,UAAW2F,EAAUzY,KAAMmU,KAGlEhB,aAAa6E,QAAQ7O,EAAIkK,KAAKM,UAAUQ,IACxChB,aAAa6E,QAAQ,eAAgB7O,GAKrC,IAFA,IAAI8P,EAAiB9B,EAAY3R,IAAI,SAAAC,GAAC,OAAIA,IAEjC7C,EAAI,EAAGA,EAAIqW,EAAe3R,OAAQ1E,IACnCqW,EAAerW,GAAf,YAAmC6V,GACnCQ,EAAeC,OAAOtW,EAAG,GAIjCqW,EAAeE,QAAQ,CAACrG,UAAW2F,EAAUN,MAAM,IAAID,MAAOkB,UAAWjQ,OACzEgK,aAAa6E,QAAQ,eAAgB3E,KAAKM,UAAUsF,IAEtD,MAAOxM,GACLvI,QAAQlB,MAAMyJ,GAGlBE,YAAS,WACX,MAAOF,GACLvI,QAAQlB,MAAMyJ,KAGtBuH,EAAOM,WAAY7H,EAAE2H,OAAeG,MAAM,IAC5C,MAAO9H,GACLvI,QAAQlB,MAAMyJ,IA4CuG4M,CAAW5M,QAG5HkD,EAAApQ,EAAAC,cAAA,OAAK0B,MAAKhE,OAAA0S,EAAA,EAAA1S,CAAA,GAAMiE,EAAO+V,KAAb,CAAmBnV,KAAM,kBCjIpCuX,EAbU,WACrB,OACI3J,EAAApQ,EAAAC,cAAC+Z,EAAD,KACI5J,EAAApQ,EAAAC,cAACga,EAAA,EAAD,KACI7J,EAAApQ,EAAAC,cAACia,EAAD,CAAMC,KAAK,MACX/J,EAAApQ,EAAAC,cAACma,EAAD,CAASD,KAAK,aACd/J,EAAApQ,EAAAC,cAACoa,EAAD,CAAUF,KAAK,QAEnB/J,EAAApQ,EAAAC,cAACqa,EAAD,QCJQC,QACW,cAA7BtV,OAAOuV,SAASC,UAEe,UAA7BxV,OAAOuV,SAASC,UAEhBxV,OAAOuV,SAASC,SAASC,MACvB,iECZNC,IAASC,OAAOxK,EAAApQ,EAAAC,cAAC4a,EAAD,MAAYlF,SAASC,eAAe,SDmI9C,kBAAmBkF,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.786344f4.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = [1, 2, 3, 4] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"▲\", \"▼\", \"●\", \"○\", \"⨂\",\"◼\",\"□\"] as const;\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6, 7] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    measuresPerRow: measuresPerRowOption;\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 2,\n    verticalSpacing: 2,\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    measuresPerRow: 4,\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n}\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n}\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","/**\n * This file contains types shared across all parsers.\n */\n\nexport enum Tie {\n    Start = \"START\", \n    Stop = \"STOP\",\n}\n\nexport type basicNote = {\n    time: number,\n    duration: number,\n    midi: number,\n    attributes: {\n        ties: Tie[], // TODO: consider making this optional\n        // other attributes like slurs and dynamics can go here\n    }\n};\n\nexport type measure = basicNote[];\n\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Tracks = {\n    measures: measure[],\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[]\n}[]\n\nexport type Score = {\n    tracks: Tracks,\n}\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {basicNote, Score, Tie} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    options?: {},\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n}\n\nconst SNView: React.FC<Props> = ({xml, /* options, children */}) => {\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string)=>{\n        setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n            navigate('/');\n            setImmediate(()=>setDialogState(Dialog.close()));\n        }));\n    }\n\n    console.log(score);\n    useEffect(() => {\n        let width: number = undefined!;\n        let callback = () => {\n            let newWidth = ref.current!.getBoundingClientRect().width;\n            if (width !== newWidth) {\n                width = newWidth;\n                setWidth(newWidth);\n            }\n        };\n        window.addEventListener(\"resize\", callback);\n        // let interval = setInterval(callback, 20);\n        callback();\n        return () => {\n            window.removeEventListener(\"resize\", callback);\n            // clearInterval(interval);\n        }\n    }, []);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        setScore(parse(xml));\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        console.log('a');\n        let devMode = false;\n        //let maxStaffNumber = 2;\n\n        //general spacing\n        let noteSymbolSize = 20; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = 30; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        //horizontal spacing\n        let horizontalPadding = 20; //left/right padding\n        let staffLabelSpace = 25; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / preferences.measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        // let staffLabels = ['𝒯','𝐵'];\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n            line += getNoteAccidental(note) < 0 ? 1 : 0; // if note is flat, we need to bring it a line higher.\n            return line;\n        };\n        //calculate lowest and highest note\n        let minNote = 128, maxNote = -1;\n        score.tracks.forEach(track => track.measures.forEach(measure =>\n            measure.forEach(note => {\n                minNote = Math.min(minNote, note.midi);\n                maxNote = Math.max(maxNote, note.midi);\n            })\n        ));\n\n        //if there was an issue, abort\n        if (minNote >= 128 || minNote < 0 || maxNote >= 128 || maxNote < 0) {\n            console.log(minNote, maxNote);\n            throw new Error('An issue was detected while analyzing this work\\'s note range');\n        }\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine = getNoteLine(minNote);\n        let maxLine = getNoteLine(maxNote);\n\n        // find the closest colored line for minNote and minLine\n        while (minLine % 7 !== 0 && minLine % 7 !== 3) minLine--;\n        while (maxLine % 7 !== 0 && maxLine % 7 !== 3) maxLine++;\n\n        // widen staff range if it is too small\n        if (Math.abs(maxLine - minLine) <= 1) {\n            maxLine += (maxLine % 7 === 0) ? 3 : 4;\n            minLine -= (minLine % 7 === 0) ? 4 : 3;\n        }\n\n        let rowHeight = (maxLine - minLine) * noteSymbolSize / 2; //not including measure labels\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        let measuresPerRow = Math.floor(availableMeasureSpace / measureWidth);\n        if (measuresPerRow <= 0) {\n            throw new Error('Could not place a measure in the allowed space');\n        }\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        //let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\n        // let beatsPerRow = beatsPerMeasure * measuresPerRow;\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        //calculate required height (vert padding + row height + row padding)\n        // let height = verticalPadding * 2 + rowNumber * (rowHeight + measureLabelSpace) + (rowNumber - 1) * rowPadding;\n\n        let getCurrentSignatures = (measureNumber: number) => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            const currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber)!;\n            const currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            return {currentTime, currentKey};\n        }\n\n        let measure = (x: number, y: number, measureNumber: number) => {\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / preferences.measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let key = 0;\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={rowHeight + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine; j <= maxLine; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + rowHeight - (j - minLine) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                track.measures[measureNumber].forEach(note => {\n                    noteHeadSVG.push(noteHead(note, key++));\n                    noteTailSVG.push(noteTail(note, key++));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        }\n\n        let row = (i: number): JSX.Element => {\n            let height = (rowHeight + measureLabelSpace) + noteSymbolSize / 2;\n            return (\n                <svg id={`row${i}`} key={i} viewBox={`0 0 ${width} ${height}`} style={{paddingBottom: `${rowPadding}`}}>\n                    <g id={`row${i}`} key={i} transform={`translate(${horizontalPadding}, 0)`}>\n                        {devMode ? <rect y={measureLabelSpace} width={staffLabelSpace} height={rowHeight} fill=\"#ffdddd\" /> : null}\n                        {devMode ? <rect x={staffLabelSpace} y={measureLabelSpace} width={octaveLabelSpace} height={rowHeight} fill=\"#ffddff\" /> : null}\n                        <text x={staffLabelSpace} y={measureLabelSpace + rowHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">𝒯</text>\n                        <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={rowHeight + strokeWidth} fill=\"#000000\" />\n\n                        {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                            measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j)\n                        )}\n                    </g>\n                </svg>\n            );\n        }\n\n        let noteTimeToPos = (noteTime: number) => ({\n            x: beatWidth * noteTime,\n            y: rowHeight + measureLabelSpace\n        })\n\n        // let beatsToPos = (beat: number) => {\n        //     let row = Math.floor(beat / beatsPerRow);\n        //     let measure = (beat - row * beatsPerRow) / beatsPerMeasure;\n        //     return {\n        //         row, measure,\n        //         ...rowMeasureToPos(row, measure)\n        //     };\n        // }\n        // let rowMeasureToPos = (row: number, measure: number) => ({\n        //     x: horizontalPadding + staffLabelSpace + octaveLabelSpace + measure * measureWidth,\n        //     y: verticalPadding + row * (rowHeight + measureLabelSpace + rowPadding) + rowHeight + measureLabelSpace\n        // });\n\n        let noteTail = (note: basicNote, i: number) => {\n            let key = 0;\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine;\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration);\n\n            let pushBox = (x1: number, x2: number, y: number) => {\n                boxes.push(<rect key={key++} x={x1} y={y - (line + 1) * noteSymbolSize / 2} width={x2 - x1} height={noteSymbolSize} fill={colorPreferenceStyles[preferences.noteDurationColor]} fillOpacity={.5} />);\n            }\n            // while (rowStart < rowEnd) {\n            //     //only executes rarely so it is faster to compute this value in the loop\n            //     pushBox(xStart, horizontalPadding + staffLabelSpace + octaveLabelSpace + measuresPerRow * measureWidth, yStart);\n            //     rowStart++;\n            //     measureStart = 0;\n            //     let {x, y} = rowMeasureToPos(rowStart, measureStart);\n            //     xStart = x;\n            //     yStart = y;\n            // }\n            pushBox(xStart, xEnd, yStart);\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        }\n\n        let noteHead = (note: basicNote, i: number) => {\n            if (note.attributes.ties.includes(Tie.Stop))\n                return;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine;\n\n            let {x, y} = noteTimeToPos(note.time);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = 3;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let triangleUp = <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n            let triangleDown = <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n            let hollowCircle = <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} fill='none' />;\n            let circle = <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n\n            let crossCircle = <g key={i}>\n                <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={2} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} fill='none' />;\n                <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={2} />\n                <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={2} />\n            </g>\n\n            let square = <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />\n            let hollowSquare = <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n\n            let noteShapes = {\n                '▲': triangleUp,\n                '▼': triangleDown,\n                '○': hollowCircle,\n                '●': circle,\n                '◼': square,\n                '□': hollowSquare,\n                '⨂': crossCircle,\n            } as any;\n            return accidental === 0 ? noteShapes[preferences.naturalNoteShape] : (accidental > 0 ? noteShapes[preferences.sharpNoteShape] : noteShapes[preferences.flatNoteShape]);\n        }\n\n        // let devSvg = devMode ? (\n        //     <g id=\"devMode\">\n        //         {<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\" />}\n        //         {<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<rect x={horizontalPadding} y={verticalPadding} width={width - horizontalPadding * 2} height={height - verticalPadding * 2} fill=\"#ddffdd\" />}\n        //     </g>\n        // ) : null;\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => row(i));\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                {/*devSvg*/}\n                {svgRows}\n            </div>\n        );\n    } catch(e){\n        if(!dialogState.shown){\n            showError('An issue was encountered while processing this document.');\n        }\n        //console.error(e);\n        console.log('x');\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","import MusicXML from 'musicxml-interfaces';\nimport {basicNote, TimeSignature, KeySignature, Tracks, Score, Tie, measure} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let currentBeatType = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: measure[],\n        }\n    } = {};\n    xml.measures.forEach((measure, measureNumber) => {\n        Object.keys(measure.parts).forEach(partName => {\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length)\n                };\n            }\n            let part = parts[partName];\n            let notes: basicNote[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n                            if (entry.pitch !== undefined) {\n                                const entryTies = entry.ties as {type: number}[];\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : []\n                                    }\n                                });\n                            }\n                            part.measures[measureNumber] = notes;\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(x => ({\n        measures: parts[x].measures,\n        timeSignatures: parts[x].timeSignatures,\n        keySignatures: parts[x].keySignatures\n    }));\n    return {tracks}\n};","module.exports = __webpack_public_path__ + \"static/media/dropDown.2ec80983.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";","import React, { CSSProperties } from \"react\";\n\ntype Props = {\n  header: string;\n  fontSize?: number;\n  sideMenu?: React.ReactNode;\n  showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n  header,\n  fontSize,\n  sideMenu,\n  showSideMenu,\n  children\n}) => {\n  return (\n    <div style={styles.appContainer}>\n      <div id=\"header\" style={{ ...styles.header, fontSize: fontSize || 45 }}>\n        {header}\n        {/* <div style={styles.headerLeft}>\n                    {headerLeft}\n                </div>\n                <div style={styles.headerRight}>\n                    {headerRight}\n                </div> */}\n      </div>\n\n      <div style={styles.page}>{children}</div>\n      <div className={`animated ${showSideMenu?'open':'close'}`}\n        style={{...styles.sideBar}}>\n            {sideMenu}\n      </div>\n    </div>\n  );\n};\n\nconst styleMap = {\n  appContainer: {\n    overflow: \"hidden\"\n  },\n  header: {\n    paddingTop: \"8px\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"42px\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    letterSpacing: \"0.15em\",\n    left: \"50%\",\n    top: \"0px\",\n    height: \"80px\",\n    transform: \"translate(-50%,0px)\",\n    backgroundColor: \"#31B7D6\",\n    minWidth: \"600px\",\n    position: \"absolute\"\n  },\n  page: {\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    overflow: \"auto\"\n  },\n  sideBar: {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    left: \"auto\",\n    right: \"0px\"\n  }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport {saveAs} from 'file-saver';\nimport dropDown from '../images/dropDown.svg'\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions, \n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    let showError = (error: string)=>{\n        setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n            (window as any).canvg = canvg;\n            let pdf = new jsPDF('p', 'px', 'letter');\n            (pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp');\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (<div style={styles.sideBar}>\n        <div style={styles.sideBarTop}>\n            <div title=\"Click to export\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                Export\n            </div>\n            <div style={styles.sideBarTopOptions}>\n                Import\n                <input style={styles.fileInput} type=\"file\" title=\"Click to import\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n            </div>\n            <div style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                Close X\n            </div>\n        </div>\n        <form onSubmit={() => {setShow(false);}} >\n            <label>\n                <div style={styles.sideBarContent}>\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Duration Color</div>\n                        <select style={styles.select} value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Symbol Color</div>\n                        <select style={styles.select} value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Staff Scale</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.staffScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Horizontal Spacing</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.horizontalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Vertical Spacing</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.verticalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Scale</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Measures per Row</div>\n                        <select style={styles.select} value={preferences.measuresPerRow} onChange={\n                            (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                        }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                </div>\n            </label>\n        </form>\n    </div>)\n\n    return (\n        <Frame header=\"SNapp\" showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        borderBottom: '1px solid #BBBBBB',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        position: 'relative',\n        width: 'auto',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        padding: '0 20px',\n        position: 'relative',\n        marginTop: '40px',\n    },\n    line: {\n        fontSize: '17px',\n        margin: '30px 0px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n\n    },\n    name: {\n        position: 'relative',\n        width: '60%',\n    },\n    select: {\n        fontSize: '17px',\n        height: '40px',\n        backgroundPosition: '95% center',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(${dropDown})`,\n        backgroundColor: 'rgba(255,255,255,0.6)',\n        paddingLeft: '20px',\n        border: '1px solid #6F6F6F',\n        borderRadius: '10px',\n        position: 'relative',\n        width: '40%',\n        textAlign: 'center',\n        WebkitAppearance: 'none',\n    },\n\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n    \n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, {CSSProperties, useState, useEffect, Fragment} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML from 'musicxml-interfaces';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string)=>{\n        setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) {}\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({type: 'set', val: {id: x.id, file_name: x.file_name, data: parsed}});\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n            } catch(e){\n                // Local storage may be disabled\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.musicxml$/ig, '');\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = MusicXML.parseScore((e.target as any).result);\n\n                    try {\n                        let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n                        // Set this song as the current work in the global context\n                        setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n                        // Set this song as the current work in localStorage\n                        localStorage.setItem(id, JSON.stringify(parsed));\n                        localStorage.setItem('current_file', id);\n\n                        // Add this song to the recent songs list\n                        let newRecentFiles = recentFiles.map(x => x);\n\n                        for (let i = 0; i < newRecentFiles.length; i++) {\n                            if (newRecentFiles[i]['file_name'] === fileName) {\n                                newRecentFiles.splice(i, 1);\n                            }\n                        }\n\n                        newRecentFiles.unshift({file_name: fileName, date: new Date().getTime(), id});\n                        localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n\n                    } catch (e) {\n                        console.error(e);\n                    }\n\n                    navigate('convert');\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    return (\n        <Frame header=\"SNapp\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n                <div style={{...styles.item, maxWidth: '720px'}}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{...styles.item, flex: '.2 0 auto'}} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{...styles.item, flex: '.35 0 auto'}} />\n                </> : <>\n                        <div style={{...styles.item, flex: '.36 0 auto'}} />\n                        <div style={{...styles.item, fontSize: '28px', fontWeight: 'bolder'}}>Recent Files</div>\n                        <div style={{...styles.item, flex: '.08 0 auto'}} />\n                        <div style={{...styles.item, ...styles.recentFiles}}>\n                            <div style={{...styles.recentFilesInner}}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div style={styles.recentFilesItem} onClick={() => {loadFile(x);}}>\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 1 auto', fontWeight: 'bold'}}>\n                                            {x.file_name}\n                                        </div>\n                                        <div style={{...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto'}} />\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 100000 auto', fontSize: '22px'}}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date))}\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                            </div>\n                        </div>\n                        <div style={{...styles.item, flex: '.24 0 auto'}} />\n                    </>}\n                <div style={styles.item}>\n                    <span style={styles.link} onClick={() => {}}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Upload MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml\" onChange={(e) => {uploadFile(e);}}></input>\n                    </span>\n                </div>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '600px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}