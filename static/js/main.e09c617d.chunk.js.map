{"version":3,"sources":["images/dropDown.svg","images/upload.svg","parser/Types.tsx","util/Util.tsx","parser/MusicXML.tsx","components/SNView.tsx","contexts/Preferences.tsx","components/Frame.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Dialog.tsx","contexts/Global.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Tie","range","min","max","res","i","push","Accidental","pitchToMidi","pitch","step","c","d","e","f","g","a","b","toLowerCase","octave","undefined","alter","Math","round","colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","colorPreferenceOptions","Object","keys","scalePreferenceOptions","spacingPreferenceOptions","noteHeadPreferenceOptions","measuresPerRowOptions","initialState","noteDurationColor","noteSymbolColor","staffScale","horizontalSpacing","verticalSpacing","noteScale","naturalNoteShape","sharpNoteShape","flatNoteShape","measuresPerRow","PreferencesContext","createContext","PreferencesStateProvider","_ref","children","reducer","useRef","state","action","type","objectSpread","val","_useReducer","useReducer","current","_useReducer2","slicedToArray","dispatch","react_default","createElement","Provider","value","usePreferencesState","useContext","SNView","xml","ref","_useState","useState","_useState2","width","setWidth","_useState3","_useState4","score","setScore","_usePreferencesState","preferences","console","log","useEffect","callback","newWidth","getBoundingClientRect","window","addEventListener","removeEventListener","currentBeatType","parts","measures","forEach","measure","measureNumber","partName","divisions","progress","timeSignatures","keySignatures","Array","length","part","notes","divisionsToNoteLength","error","entry","_class","duration","time","chord","rest","entryTies","ties","midi","attributes","map","tie","Start","Stop","times","beats","parseInt","beatTypes","fifths","concat","tracks","x","parse","horizontalPadding","scoreWidth","beatWidth","keyFifths","octaveLines","color","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","line","floor","minNote","maxNote","track","Error","minLine","maxLine","abs","rowHeight","beatsPerMeasure","measureWidth","availableMeasureSpace","reduce","accum","rowNumber","ceil","y","_getCurrentSignatures","toConsumableArray","reverse","currentTime","find","timeSignature","currentKey","keySignature","getCurrentSignatures","key","measureSVG","strokeWidth","measureLabelSpace","height","fill","j","octaveLine","lineY","fontSize","textAnchor","dominantBaseline","tickX","tickSize","noteHeadSVG","noteTailSVG","noteHead","noteTail","id","transform","noteTimeToPos","noteTime","x1","x2","boxes","_noteTimeToPos","xStart","yStart","xEnd","fillOpacity","Fragment","includes","accidental","_noteTimeToPos3","noteSymbolSize","triHeight","sqrt","crossCircleWidth","triangleUp","points","triangleDown","hollowCircle","cx","cy","r","stroke","circle","crossCircle","y1","y2","noteShapes","▲","▼","○","●","◼","□","⨂","svgRows","viewBox","style","paddingBottom","staffLabelSpace","row","overflow","minWidth","userSelect","paddingTop","styles","appContainer","header","fontStyle","fontWeight","alignItems","textAlign","letterSpacing","left","top","backgroundColor","position","page","sideBar","overflowY","overflowX","right","Frame","sideMenu","showSideMenu","className","CurrentFileContext","CurrentFileStateProvider","useCurrentFileState","leftSide","float","svg","marginRight","display","marginTop","marginLeft","cursor","subHeader","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","padding","opacity","sideBarContent","margin","name","select","backgroundPosition","backgroundRepeat","backgroundImage","dropDown","paddingLeft","border","borderRadius","WebkitAppearance","Convert","show","setShow","_usePreferencesState2","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","showPreferencesButton","setShowPreferencesButton","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","data","wrap","_context","prev","next","localStorage","getItem","JSON","filter","navigate","stop","sidebar","title","onClick","file","Blob","stringify","saveAs","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","readAsText","files","importFile","onSubmit","components_Frame","xmlns","strokeLinecap","strokeLinejoin","canvg","pdf","jsPDF","addSvgAsImage","document","getElementById","innerHTML","save","openPDF","padding-right","components_SNView","body","NotFound","shown","DialogContext","DialogStateProvider","GlobalStateProvider","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingRight","recentFilesItem","lineHeight","textOverflow","recentFilesSeparator","recentFilesItemInner","link","icon","Menu","setRecentFiles","recent","react","setItem","loadFile","Date","date","getMonth","getDate","getFullYear","src","alt","fileName","replace","MusicXML","parseScore","from","random","toString","join","newRecentFiles","splice","unshift","getTime","uploadFile","Router","contexts_Global","global_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","Boolean","location","hostname","match","ReactDOM","render","src_Router","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e09c617d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dropDown.2ec80983.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";","/**\n * This file contains types shared across all parsers.\n */\n\nexport enum Tie {\n    Start = \"START\", \n    Stop = \"STOP\",\n}\n\nexport type basicNote = {\n    time: number,\n    duration: number,\n    midi: number,\n    attributes: {\n        ties: Tie[], // TODO: consider making this optional\n        // other attributes like slurs and dynamics can go here\n    }\n};\n\nexport type measure = basicNote[];\n\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Tracks = {\n    measures: measure[],\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[]\n}[]\n\nexport type Score = {\n    tracks: Tracks,\n}\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import MusicXML from 'musicxml-interfaces';\nimport {basicNote, TimeSignature, KeySignature, Tracks, Score, Tie, measure} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let currentBeatType = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: measure[],\n        }\n    } = {};\n    xml.measures.forEach((measure, measureNumber) => {\n        Object.keys(measure.parts).forEach(partName => {\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length)\n                };\n            }\n            let part = parts[partName];\n            let notes: basicNote[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n                            if (entry.pitch !== undefined) {\n                                const entryTies = entry.ties as {type: number}[];\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : []\n                                    }\n                                });\n                            }\n                            part.measures[measureNumber] = notes;\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(x => ({\n        measures: parts[x].measures,\n        timeSignatures: parts[x].timeSignatures,\n        keySignatures: parts[x].keySignatures\n    }));\n    return {tracks}\n};","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {basicNote, Score, Tie} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState} from '../contexts/Preferences';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    options?: {},\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n}\n\nconst SNView: React.FC<Props> = ({xml, /* options, children */}) => {\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    console.log(score);\n    useEffect(() => {\n        let width: number = undefined!;\n        let callback = () => {\n            let newWidth = ref.current!.getBoundingClientRect().width;\n            if (width !== newWidth) {\n                width = newWidth;\n                setWidth(newWidth);\n            }\n        };\n        window.addEventListener(\"resize\", callback);\n        // let interval = setInterval(callback, 20);\n        callback();\n        return () => {\n            window.removeEventListener(\"resize\", callback);\n            // clearInterval(interval);\n        }\n    }, []);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        setScore(parse(xml));\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    let devMode = false;\n    //let maxStaffNumber = 2;\n\n    //general spacing\n    let noteSymbolSize = 20; //width/height of note symbols\n    let strokeWidth = 2;\n    let tickSize = 7;\n\n    //vertical spacing\n    let verticalPadding = 30; //top/bottom padding\n    let rowPadding = 30; //space between rows\n    let measureLabelSpace = 15; //space for measure labels\n\n    //horizontal spacing\n    let horizontalPadding = 20; //left/right padding\n    let staffLabelSpace = 25; //space for staff labels\n    let octaveLabelSpace = measureLabelSpace; //space for octave labels\n    // let tieExtensionSpace = measureLabelSpace;\n\n    // composite horizontal spacing\n    let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n    let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / preferences.measuresPerRow;\n\n    // get key signature\n    let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n    // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n    // let staffLabels = ['𝒯','𝐵'];\n    let octaveLines = [\n        {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n        {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n    ];\n    let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n    let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n    let getNoteAccidental = (note: number): Accidental => {\n        return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n    };\n\n    // We map C0 (midi note 12) to line 0.\n    let getNoteLine = (note: number) => {\n        let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n        line += getNoteAccidental(note) < 0 ? 1 : 0; // if note is flat, we need to bring it a line higher.\n        return line;\n    };\n    //calculate lowest and highest note\n    let minNote = 128, maxNote = -1;\n    score.tracks.forEach(track => track.measures.forEach(measure =>\n        measure.forEach(note => {\n            minNote = Math.min(minNote, note.midi);\n            maxNote = Math.max(maxNote, note.midi);\n        })\n    ));\n\n    //if there was an issue, abort\n    if (minNote >= 128 || minNote < 0 || maxNote >= 128 || maxNote < 0) {\n        console.log(minNote, maxNote);\n        throw new Error('An issue was detected while analyzing this work\\'s note range');\n    }\n\n    //calculate the height of each row (based upon low/high notes and oct groups)\n    let minLine = getNoteLine(minNote);\n    let maxLine = getNoteLine(maxNote);\n\n    // find the closest colored line for minNote and minLine\n    while (minLine % 7 !== 0 && minLine % 7 !== 3) minLine--;\n    while (maxLine % 7 !== 0 && maxLine % 7 !== 3) maxLine++;\n\n    // widen staff range if it is too small\n    if (Math.abs(maxLine - minLine) <= 1) {\n        maxLine += (maxLine % 7 === 0) ? 3 : 4;\n        minLine -= (minLine % 7 === 0) ? 4 : 3;\n    }\n\n    let rowHeight = (maxLine - minLine) * noteSymbolSize / 2; //not including measure labels\n\n    //calculate the number of beats per measure\n    let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n    let measureWidth = beatWidth * beatsPerMeasure;\n\n    //calculate tne number of measures per row\n    let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n    let measuresPerRow = Math.floor(availableMeasureSpace / measureWidth);\n    if (measuresPerRow <= 0) {\n        throw new Error('Could not place a measure in the allowed space');\n    }\n    horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n    //calculate the number of rows\n    //let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\n    // let beatsPerRow = beatsPerMeasure * measuresPerRow;\n    let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n    if (measureNumber <= 0) {\n        throw new Error('Failed to identify number of measures');\n    }\n    let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n    //calculate required height (vert padding + row height + row padding)\n    // let height = verticalPadding * 2 + rowNumber * (rowHeight + measureLabelSpace) + (rowNumber - 1) * rowPadding;\n\n    let getCurrentSignatures = (measureNumber: number) => {\n        let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n        let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n        const currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber)!;\n        const currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n        return {currentTime, currentKey};\n    }\n\n    let measure = (x: number, y: number, measureNumber: number) => {\n        // Get time signature of current measure\n        let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n        beatWidth = scoreWidth / currentTime.beats / preferences.measuresPerRow;\n        beatsPerMeasure = currentTime.beats;\n        keyFifths = currentKey!.fifths;\n\n        // Draw measure\n        let key = 0;\n        let measureSVG: JSX.Element[] = [];\n        measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={rowHeight + strokeWidth} fill=\"#000000\" />);\n        for (let j = minLine; j <= maxLine; j++) {\n            let octaveLine = octaveLines[j % 7];\n            if (octaveLine !== undefined) {\n                let lineY = measureLabelSpace + rowHeight - (j - minLine) * noteSymbolSize / 2;\n                measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                    measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                }\n                if (j < maxLine) {\n                    for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                        let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                        measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                    }\n                }\n            }\n        }\n\n        // Add notes to the measure\n        const noteHeadSVG: JSX.Element[] = [];\n        const noteTailSVG: JSX.Element[] = [];\n        score!.tracks.forEach(track => {\n            track.measures[measureNumber].forEach(note => {\n                noteHeadSVG.push(noteHead(note, key++));\n                noteTailSVG.push(noteTail(note, key++));\n            });\n        });\n\n        return (\n            <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                <g id='frame'>\n                    {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                    <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                    {measureSVG}\n                </g>\n                <g id='notes'>\n                    {noteTailSVG}\n                    {noteHeadSVG}\n                </g>\n            </g>\n        );\n    }\n\n    let row = (i: number): JSX.Element => {\n        let height = (rowHeight + measureLabelSpace) + noteSymbolSize / 2;\n        return (\n            <svg id={`row${i}`} key={i} viewBox={`0 0 ${width} ${height}`} style={{paddingBottom: `${rowPadding}`}}>\n                <g id={`row${i}`} key={i} transform={`translate(${horizontalPadding}, 0)`}>\n                    {devMode ? <rect y={measureLabelSpace} width={staffLabelSpace} height={rowHeight} fill=\"#ffdddd\" /> : null}\n                    {devMode ? <rect x={staffLabelSpace} y={measureLabelSpace} width={octaveLabelSpace} height={rowHeight} fill=\"#ffddff\" /> : null}\n                    <text x={staffLabelSpace} y={measureLabelSpace + rowHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">𝒯</text>\n                    <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={rowHeight + strokeWidth} fill=\"#000000\" />\n\n                    {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                        measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j)\n                    )}\n                </g>\n            </svg>\n        );\n    }\n\n    let noteTimeToPos = (noteTime: number) => ({\n        x: beatWidth * noteTime,\n        y: rowHeight + measureLabelSpace\n    })\n\n    // let beatsToPos = (beat: number) => {\n    //     let row = Math.floor(beat / beatsPerRow);\n    //     let measure = (beat - row * beatsPerRow) / beatsPerMeasure;\n    //     return {\n    //         row, measure,\n    //         ...rowMeasureToPos(row, measure)\n    //     };\n    // }\n    // let rowMeasureToPos = (row: number, measure: number) => ({\n    //     x: horizontalPadding + staffLabelSpace + octaveLabelSpace + measure * measureWidth,\n    //     y: verticalPadding + row * (rowHeight + measureLabelSpace + rowPadding) + rowHeight + measureLabelSpace\n    // });\n\n    let noteTail = (note: basicNote, i: number) => {\n        let key = 0;\n        let boxes: JSX.Element[] = [];\n\n        let line = getNoteLine(note.midi) - minLine;\n        let {x: xStart, y: yStart} = noteTimeToPos(note.time);\n        let {x: xEnd} = noteTimeToPos(note.time + note.duration);\n\n        let pushBox = (x1: number, x2: number, y: number) => {\n            boxes.push(<rect key={key++} x={x1} y={y - (line + 1) * noteSymbolSize / 2} width={x2 - x1} height={noteSymbolSize} fill={colorPreferenceStyles[preferences.noteDurationColor]} fillOpacity={.5} />);\n        }\n        // while (rowStart < rowEnd) {\n        //     //only executes rarely so it is faster to compute this value in the loop\n        //     pushBox(xStart, horizontalPadding + staffLabelSpace + octaveLabelSpace + measuresPerRow * measureWidth, yStart);\n        //     rowStart++;\n        //     measureStart = 0;\n        //     let {x, y} = rowMeasureToPos(rowStart, measureStart);\n        //     xStart = x;\n        //     yStart = y;\n        // }\n        pushBox(xStart, xEnd, yStart);\n\n        return (\n            <React.Fragment key={i}>\n                {boxes}\n            </React.Fragment>\n        );\n    }\n\n    let noteHead = (note: basicNote, i: number) => {\n        if (note.attributes.ties.includes(Tie.Stop))\n            return;\n        let accidental: Accidental = getNoteAccidental(note.midi);\n        let line = getNoteLine(note.midi) - minLine;\n\n        let {x, y} = noteTimeToPos(note.time);\n\n        x += noteSymbolSize / 2;\n        y -= line * noteSymbolSize / 2;\n        let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n        let strokeWidth = 3;\n        let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n        let triangleUp = <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n        let triangleDown = <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n        let hollowCircle = <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} fill='none' />;\n        let circle = <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />;\n\n        let crossCircle = <g key={i}>\n            <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={2} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} fill='none' />;\n            <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={2} />\n            <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={2} />\n        </g>\n\n        let square = <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[preferences.noteSymbolColor]} />\n        let hollowSquare = <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[preferences.noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n\n        let noteShapes = {\n            '▲': triangleUp,\n            '▼': triangleDown,\n            '○': hollowCircle,\n            '●': circle,\n            '◼': square,\n            '□': hollowSquare,\n            '⨂': crossCircle,\n        } as any;\n        return accidental === 0 ? noteShapes[preferences.naturalNoteShape] : (accidental > 0 ? noteShapes[preferences.sharpNoteShape] : noteShapes[preferences.flatNoteShape]);\n    }\n\n    // let devSvg = devMode ? (\n    //     <g id=\"devMode\">\n    //         {<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\" />}\n    //         {<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n    //         {<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n    //         {<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n    //         {<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n    //         {<rect x={horizontalPadding} y={verticalPadding} width={width - horizontalPadding * 2} height={height - verticalPadding * 2} fill=\"#ddffdd\" />}\n    //     </g>\n    // ) : null;\n\n    let svgRows: JSX.Element[] = range(0, rowNumber).map(i => row(i));\n    return (\n        <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n            {/*devSvg*/}\n            {svgRows}\n        </div>\n    );\n};\n\nexport default SNView;\n","import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = [1, 2, 3, 4] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"▲\", \"▼\", \"●\", \"○\", \"⨂\",\"◼\",\"□\"] as const;\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6, 7] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    measuresPerRow: measuresPerRowOption;\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 2,\n    verticalSpacing: 2,\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    measuresPerRow: 4,\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, { CSSProperties } from \"react\";\n\ntype Props = {\n  header: string;\n  fontSize?: number;\n  sideMenu?: React.ReactNode;\n  showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n  header,\n  fontSize,\n  sideMenu,\n  showSideMenu,\n  children\n}) => {\n  return (\n    <div style={styles.appContainer}>\n      <div id=\"header\" style={{ ...styles.header, fontSize: fontSize || 45 }}>\n        {header}\n        {/* <div style={styles.headerLeft}>\n                    {headerLeft}\n                </div>\n                <div style={styles.headerRight}>\n                    {headerRight}\n                </div> */}\n      </div>\n\n      <div style={styles.page}>{children}</div>\n      <div className={`animated ${showSideMenu?'open':'close'}`}\n        style={{...styles.sideBar}}>\n            {sideMenu}\n      </div>\n    </div>\n  );\n};\n\nconst styleMap = {\n  appContainer: {\n    overflow: \"hidden\"\n  },\n  header: {\n    paddingTop: \"8px\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"42px\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    letterSpacing: \"0.15em\",\n    left: \"50%\",\n    top: \"0px\",\n    height: \"80px\",\n    transform: \"translate(-50%,0px)\",\n    backgroundColor: \"#31B7D6\",\n    minWidth: \"600px\",\n    position: \"absolute\"\n  },\n  page: {\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    overflow: \"auto\"\n  },\n  sideBar: {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    left: \"auto\",\n    right: \"0px\"\n  }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport {saveAs} from 'file-saver';\nimport dropDown from '../images/dropDown.svg'\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions, \n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n            (window as any).canvg = canvg;\n            let pdf = new jsPDF('p', 'px', 'letter');\n            (pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp');\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (<div style={styles.sideBar}>\n        <div style={styles.sideBarTop}>\n            <div title=\"Click to export\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                Export\n            </div>\n            <div style={styles.sideBarTopOptions}>\n                Import\n                <input style={styles.fileInput} type=\"file\" title=\"Click to import\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n            </div>\n            <div style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                Close X\n            </div>\n        </div>\n        <form onSubmit={() => {setShow(false);}} >\n            <label>\n                <div style={styles.sideBarContent}>\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Duration Color</div>\n                        <select style={styles.select} value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Symbol Color</div>\n                        <select style={styles.select} value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Staff Scale</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.staffScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Horizontal Spacing</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.horizontalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Vertical Spacing</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.verticalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Scale</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Note Shape</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Measures per Row</div>\n                        <select style={styles.select} value={preferences.measuresPerRow} onChange={\n                            (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                        }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                </div>\n            </label>\n        </form>\n    </div>)\n\n    return (\n        <Frame header=\"SNapp\" showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        borderBottom: '1px solid #BBBBBB',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        position: 'relative',\n        width: 'auto',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        padding: '0 20px',\n        position: 'relative',\n        marginTop: '40px',\n    },\n    line: {\n        fontSize: '17px',\n        margin: '30px 0px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n\n    },\n    name: {\n        position: 'relative',\n        width: '60%',\n    },\n    select: {\n        fontSize: '17px',\n        height: '40px',\n        backgroundPosition: '95% center',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(${dropDown})`,\n        backgroundColor: 'rgba(255,255,255,0.6)',\n        paddingLeft: '20px',\n        border: '1px solid #6F6F6F',\n        borderRadius: '10px',\n        position: 'relative',\n        width: '40%',\n        textAlign: 'center',\n        WebkitAppearance: 'none',\n    },\n\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        buttons: {\n            text: string,\n            action?: ()=>void\n        }[]\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React from 'react';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, {CSSProperties, useState, useEffect, Fragment} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML from 'musicxml-interfaces';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n\n    let [, setCurrentFile] = useCurrentFileState();\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) {}\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n\n\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({type: 'set', val: {id: x.id, file_name: x.file_name, data: parsed}});\n\n            // Set this song as the current work in localStorage\n            localStorage.setItem('current_file', x.id);\n\n            navigate('convert');\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.musicxml$/ig, '');\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = MusicXML.parseScore((e.target as any).result);\n\n                    try {\n                        let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n                        // Set this song as the current work in the global context\n                        setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n                        // Set this song as the current work in localStorage\n                        localStorage.setItem(id, JSON.stringify(parsed));\n                        localStorage.setItem('current_file', id);\n\n                        // Add this song to the recent songs list\n                        let newRecentFiles = recentFiles.map(x => x);\n\n                        for (let i = 0; i < newRecentFiles.length; i++) {\n                            if (newRecentFiles[i]['file_name'] === fileName) {\n                                newRecentFiles.splice(i, 1);\n                            }\n                        }\n\n                        newRecentFiles.unshift({file_name: fileName, date: new Date().getTime(), id});\n                        localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n\n                    } catch (e) {\n                        console.error(e);\n                    }\n\n                    navigate('convert');\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n\n    return (\n        <Frame header=\"SNapp\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n                <div style={{...styles.item, maxWidth: '720px'}}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{...styles.item, flex: '.2 0 auto'}} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{...styles.item, flex: '.35 0 auto'}} />\n                </> : <>\n                        <div style={{...styles.item, flex: '.36 0 auto'}} />\n                        <div style={{...styles.item, fontSize: '28px', fontWeight: 'bolder'}}>Recent Files</div>\n                        <div style={{...styles.item, flex: '.08 0 auto'}} />\n                        <div style={{...styles.item, ...styles.recentFiles}}>\n                            <div style={{...styles.recentFilesInner}}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div style={styles.recentFilesItem} onClick={() => {loadFile(x);}}>\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 1 auto', fontWeight: 'bold'}}>\n                                            {x.file_name}\n                                        </div>\n                                        <div style={{...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto'}} />\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 100000 auto', fontSize: '22px'}}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date))}\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                            </div>\n                        </div>\n                        <div style={{...styles.item, flex: '.24 0 auto'}} />\n                    </>}\n                <div style={styles.item}>\n                    <span style={styles.link} onClick={() => {}}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Upload MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml\" onChange={(e) => {uploadFile(e);}}></input>\n                    </span>\n                </div>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '600px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <Global />\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}