{"version":3,"sources":["util/Util.tsx","components/SNView.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Global.tsx","components/Frame.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx"],"names":["range","min","max","res","i","push","SNView","_ref","midi","ref","options","children","useRef","_useState","useState","undefined","_useState2","Object","slicedToArray","width","setWidth","useEffect","callback","current","getBoundingClientRect","window","addEventListener","removeEventListener","react_default","a","createElement","horizontalPadding","octaveGroups","octaveLines","color","number","sharpMap","map","x","noteMap","getNoteLine","note","Math","floor","minNote","tracks","reduce","track","notes","maxNote","Error","minLine","maxLine","rowHeight","beatsPerMeasure","header","timeSignatures","length","timeSignature","measureWidth","availableMeasureSpace","measuresPerRow","ticksPerMeasure","ppq","ticksPerRow","measureNumber","ceil","durationTicks","rowNumber","height","verticalPadding","row","y","Fragment","key","fill","fontSize","staffLabelSpace","textAnchor","dominantBaseline","strokeWidth","j","elements","octaveLine","lineY","tickX","tickSize","measureLabelSpace","measure","tickToPos","tick","objectSpread","rowMeasureToPos","noteHead","sharp","getNoteIsSharp","data","line","_tickToPos3","ticks","noteSymbolSize","triHeight","sqrt","points","concat","cx","cy","r","forEach","viewBox","stroke","boxes","_tickToPos","rowStart","xStart","yStart","_tickToPos2","rowEnd","xEnd","pushBox","x1","x2","fillOpacity","_rowMeasureToPos","noteTail","Menu","setMidi","canceled","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Midi","fromUrl","sent","console","log","stop","components_SNView","styles","body","top","transform","textAlign","NotFound","style","GlobalStateProvider","Global","components","X","appContainer","overflow","left","backgroundColor","lineHeight","minWidth","headerLeft","headerRight","right","page","Frame","centeredText","link","textDecoration","components_Frame","es","to","Router","contexts_Global","global_Global","pages_Menu","path","Convert","pages_NotFound","Boolean","location","hostname","match","ReactDOM","render","client_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6c04c4f.chunk.js","sourcesContent":["\r\nexport function range(min: number, max: number){\r\n    let res: number[] = [];\r\n    for(let i = min; i < max; i++){\r\n        res.push(i);\r\n    }\r\n    return res;\r\n}\r\n","import React, {useEffect, useState, useRef} from 'react';\r\nimport {Midi} from '@tonejs/midi';\r\nimport {range} from '../util/Util';\r\nimport {Note} from '@tonejs/midi/dist/Note';\r\n\r\ntype Props = {\r\n    midi: Midi,\r\n    options?: {},\r\n};\r\n\r\nconst SNView: React.FC<Props> = ({midi,options,children}) => {\r\n    const ref = useRef(null! as HTMLDivElement);\r\n    let [width,setWidth] = useState<number | undefined>(undefined);\r\n    useEffect(()=>{\r\n        let callback = ()=>{\r\n            setWidth(ref.current!.getBoundingClientRect().width);\r\n        }\r\n        window.addEventListener(\"resize\", callback);\r\n        callback();\r\n        return ()=>{\r\n            window.removeEventListener(\"resize\", callback);\r\n        }\r\n    },[]);\r\n\r\n    if(width === undefined){ //skip first render when width is unknown\r\n        return <div ref={ref} />;\r\n    }\r\n\r\n    let devMode = true;\r\n    //general spacing\r\n    let noteSymbolSize = 20; //width/height of note symbols\r\n    let strokeWidth = 2;\r\n    let tickSize = 7;\r\n\r\n    //vertical spacing\r\n    let verticalPadding = 30; //top/bottom padding\r\n    let rowPadding = 30; //space between rows\r\n    let measureLabelSpace = 15; //space for measure labels\r\n    \r\n    //horizontal spacing\r\n    let beatWidth = 40;\r\n    let horizontalPadding = 20; //left/right padding\r\n    let staffLabelSpace = 25; //space for staff labels\r\n    let octaveLabelSpace = measureLabelSpace; //space for octave labels\r\n\r\n    \r\n    \r\n    \r\n    let octaveGroups = [1,1,0,0,0,1,1]; //octaveGroups (C D E / F G A B)\r\n    let octaveLines = [undefined,undefined,{\r\n        color: 'red', number: true\r\n    },undefined,undefined,{\r\n        color: 'blue'\r\n    },undefined];\r\n    let sharpMap = [0,1,0,1,0,0,1,0,1,0,1,0].map(x=>x===1);\r\n    let noteMap = [0,0,1,1,2,3,3,4,4,5,5,6];\r\n\r\n    let getNoteIsSharp = (note: number)=>sharpMap[note%12];\r\n    let getNoteLine = (note: number)=>Math.floor(note/12)*7+noteMap[note%12];\r\n\r\n    //calculate lowest note per row\r\n    let minNote = midi.tracks.reduce((x,track)=>Math.min(x,track.notes.reduce((x,note)=>Math.min(x,note.midi),128)),128);\r\n    \r\n    //calculate highest note per row\r\n    let maxNote = midi.tracks.reduce((x,track)=>Math.max(x,track.notes.reduce((x,note)=>Math.max(x,note.midi),-1)),-1);\r\n\r\n    //if there was an issue, abort\r\n    if(minNote === 128 || maxNote === -1){\r\n        throw new Error('An issue was detected while analyzing this work\\'s note range');\r\n    }\r\n\r\n    //calculate the height of each row (based upon low/high notes and oct groups)\r\n    let minLine = getNoteLine(minNote);\r\n    while(octaveGroups[minLine%7] === octaveGroups[(minLine-1+7)%7]){\r\n        minLine--;\r\n    }\r\n    let maxLine = getNoteLine(maxNote);\r\n    while(octaveGroups[maxLine%7] === octaveGroups[(maxLine-1+7)%7]){\r\n        maxLine++;\r\n    }\r\n    let rowHeight = (maxLine-minLine)*noteSymbolSize/2; //not including measure labels\r\n\r\n    //calculate the number of beats per measure\r\n    let beatsPerMeasure = midi.header.timeSignatures.length>0?midi.header.timeSignatures[0].timeSignature[0]:4;\r\n    let measureWidth = beatWidth*beatsPerMeasure;\r\n\r\n    //calculate tne number of measures per row\r\n    let availableMeasureSpace = width-horizontalPadding*2-staffLabelSpace-octaveLabelSpace;\r\n    let measuresPerRow = Math.floor(availableMeasureSpace/measureWidth);\r\n    if(measuresPerRow <= 0){\r\n        throw new Error('Could not place a measure in the allowed space');\r\n    }\r\n    horizontalPadding += (availableMeasureSpace-measuresPerRow*measureWidth)/2; //update horizontal padding to center rows\r\n    \r\n    //calculate the number of rows\r\n    let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\r\n    let ticksPerRow = ticksPerMeasure*measuresPerRow;\r\n    let measureNumber = Math.ceil(midi.durationTicks/ticksPerMeasure);\r\n    if(measureNumber <= 0){\r\n        throw new Error('Failed to identify number of measures');\r\n    }\r\n    let rowNumber = Math.ceil(measureNumber/measuresPerRow);\r\n\r\n    //calculate required height (vert padding + row height + row padding)\r\n    let height = verticalPadding*2+rowNumber*(rowHeight+measureLabelSpace)+(rowNumber-1)*rowPadding;\r\n    \r\n    let measure = (x: number, y: number, i: number)=>{\r\n        let key = 0;\r\n        let elements: JSX.Element[] = [];\r\n        elements.push(<rect key={key++} x={x+measureWidth-strokeWidth/2} y={y+measureLabelSpace-strokeWidth/2} width={strokeWidth} height={rowHeight+strokeWidth} fill=\"#000000\"/>);\r\n        \r\n        for(let j = minLine; j <= maxLine; j++){\r\n            let octaveLine = octaveLines[j%7];\r\n            if(octaveLine !== undefined){\r\n                let lineY = y+measureLabelSpace+rowHeight-(j-minLine)*noteSymbolSize/2;\r\n                elements.push(<rect key={key++} x={x+strokeWidth/2} y={lineY-strokeWidth/2} width={measureWidth-strokeWidth} height={strokeWidth} fill={octaveLine.color}/>);\r\n                if(i%measuresPerRow===0 && octaveLine.number === true){\r\n                    elements.push(<text x={x-strokeWidth} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j/7)+2}</text>);\r\n                }\r\n                if(j < maxLine){\r\n                    for(let i = 1; i < beatsPerMeasure; i++){\r\n                        let tickX = x+measureWidth/beatsPerMeasure*i;\r\n                        elements.push(<rect key={key++} x={tickX-strokeWidth/2} y={lineY-tickSize} width={strokeWidth} height={tickSize-strokeWidth/2} fill=\"#000000\"/>);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <React.Fragment key={i}>\r\n                {devMode?<rect x={x} y={y} width={measureWidth} height={measureLabelSpace-strokeWidth/2} fill=\"#ffdddd\"/>:null}\r\n                <text x={x+strokeWidth} y={y+measureLabelSpace-strokeWidth} fontSize={measureLabelSpace}>{i+1}</text>\r\n                {elements}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    let row = (i: number)=>{\r\n        let y = verticalPadding+i*(rowHeight+measureLabelSpace+rowPadding)\r\n        return (\r\n            <React.Fragment key={i}>\r\n                {devMode?<rect x={horizontalPadding} y={y+measureLabelSpace} width={staffLabelSpace} height={rowHeight} fill=\"#ffdddd\"/>:null}\r\n                {devMode?<rect x={horizontalPadding+staffLabelSpace} y={y+measureLabelSpace} width={octaveLabelSpace} height={rowHeight} fill=\"#ffddff\"/>:null}\r\n                \r\n                <text x={horizontalPadding+staffLabelSpace} y={y+measureLabelSpace+rowHeight/2} fontSize={staffLabelSpace*1.5} textAnchor=\"end\" dominantBaseline=\"middle\">𝒯</text>\r\n\r\n                <rect x={horizontalPadding+staffLabelSpace+octaveLabelSpace-strokeWidth/2} y={y+measureLabelSpace-strokeWidth/2} width={strokeWidth} height={rowHeight+strokeWidth} fill=\"#000000\"/>\r\n                {range(0,i<rowNumber-1?measuresPerRow:measureNumber-(rowNumber-1)*measuresPerRow).map(j=>\r\n                    measure(horizontalPadding+staffLabelSpace+octaveLabelSpace+j*measureWidth,y,i*measuresPerRow+j)\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    let tickToPos = (tick: number)=>{\r\n        let row = Math.floor(tick/ticksPerRow);\r\n        let measure = (tick-row*ticksPerRow)/ticksPerMeasure;\r\n        return {\r\n            row, measure,\r\n            ...rowMeasureToPos(row,measure)\r\n        };\r\n    }\r\n    let rowMeasureToPos = (row: number, measure: number)=>({\r\n        x: horizontalPadding+staffLabelSpace+octaveLabelSpace+measure*measureWidth,\r\n        y: verticalPadding+row*(rowHeight+measureLabelSpace+rowPadding)+rowHeight+measureLabelSpace\r\n    });\r\n\r\n    let noteTail = (note: note, i: number)=>{\r\n        let key = 0;\r\n        let boxes: JSX.Element[] = [];\r\n        \r\n        let line = getNoteLine(note.data.midi)-minLine;\r\n        \r\n        let {row: rowStart, measure: measureStart, x: xStart, y: yStart} = tickToPos(note.data.ticks);\r\n        let {row: rowEnd, x: xEnd} = tickToPos(note.data.ticks+note.data.durationTicks);\r\n        \r\n        let pushBox = (x1: number, x2: number, y: number)=>{\r\n            boxes.push(<rect key={key++} x={x1} y={y-(line+1)*noteSymbolSize/2} width={x2-x1} height={noteSymbolSize} fill=\"#777777\" fillOpacity={.5}/>);\r\n        }\r\n        while(rowStart < rowEnd){\r\n            //only executes rarely so it is faster to compute this value in the loop\r\n            pushBox(xStart,horizontalPadding+staffLabelSpace+octaveLabelSpace+measuresPerRow*measureWidth,yStart);\r\n            rowStart++;\r\n            measureStart = 0;\r\n            let {x,y} = rowMeasureToPos(rowStart,measureStart);\r\n            xStart = x;\r\n            yStart = y;\r\n        }\r\n        pushBox(xStart,xEnd,yStart);\r\n        \r\n        return (\r\n            <React.Fragment key={i}>\r\n                {boxes}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    let noteHead = (note: note, i: number)=>{\r\n        let sharp = getNoteIsSharp(note.data.midi);\r\n        let line = getNoteLine(note.data.midi)-minLine;\r\n        let {x, y} = tickToPos(note.data.ticks);\r\n        x += noteSymbolSize/2;\r\n        y -= line*noteSymbolSize/2;\r\n        let triHeight = noteSymbolSize*Math.sqrt(3)/2;\r\n        return (\r\n            sharp?<polygon key={i} points={`${x},${y-triHeight/2} ${x+noteSymbolSize/2},${y+triHeight/2} ${x-noteSymbolSize/2},${y+triHeight/2}`} fill=\"#000000\"/>\r\n                :<circle key={i} cx={x} cy={y} r={noteSymbolSize/2} fill=\"#000000\"/>\r\n        );\r\n    }\r\n\r\n    type note = {\r\n        track: number,\r\n        data: Note\r\n    };\r\n    let notes: note[] = [];\r\n    midi.tracks.forEach((track,i)=>{\r\n        track.notes.forEach(note=>{\r\n            notes.push({track: i, data: note});\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <svg viewBox={`0 0 ${width} ${height}`} width={`${width}`} height={`${height}`}>\r\n                {devMode?<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\"/>:null}\r\n                {devMode?<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />:null}\r\n                {devMode?<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />:null}\r\n                {devMode?<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />:null}\r\n                {devMode?<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />:null}\r\n\r\n                {devMode?<rect x={horizontalPadding} y={verticalPadding} width={width-horizontalPadding*2} height={height-verticalPadding*2} fill=\"#ddffdd\"/>:null}\r\n                {range(0,rowNumber).map(i=>row(i))}\r\n                {notes.map((x,i)=>noteTail(x,i))}\r\n                {notes.map((x,i)=>noteHead(x,i))}\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SNView;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {RouteComponentProps} from \"@reach/router\";\r\nimport SNView from '../components/SNView';\r\nimport {Midi} from '@tonejs/midi';\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nconst Menu: React.FC<Props> = () => {\r\n    let [midi,setMidi] = useState<undefined | Midi>(undefined);\r\n    useEffect(()=>{\r\n        let canceled = false;\r\n        (async ()=>{\r\n            //let res = await Midi.fromUrl('black_sheep_1h.mid');\r\n            let res = await Midi.fromUrl('black_sheep.mid');\r\n            //let res = await Midi.fromUrl('bor_ps5.mid');\r\n            if(!canceled){\r\n                console.log(res);\r\n                setMidi(res);\r\n            }\r\n        })();\r\n        return ()=>{canceled = true;}\r\n    },[]);\r\n    return (\r\n        <>\r\n            {midi===undefined?null:<SNView midi={midi} />}\r\n        </>\r\n    );\r\n};\r\n\r\n// const styleMap = {\r\n//     boxes: {\r\n//         top: '200px',\r\n//         height: '200px',\r\n//         display: 'flex',\r\n//         flexWrap: 'nowrap',\r\n//         justifyContent: 'space-evenly',\r\n//     },\r\n// } as const;\r\n// const styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\r\n\r\nexport default Menu;\r\n","import React, {CSSProperties} from 'react';\r\nimport {RouteComponentProps} from \"@reach/router\";\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nconst NotFound: React.FC<Props> = () => {\r\n    return (\r\n        <div style={styles.body}>\r\n            That page could not be found\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styleMap = {\r\n    body: {\r\n        top: '50%',\r\n        height: 'auto',\r\n        transform: 'translate(0px,-50px)',\r\n        textAlign: 'center',\r\n        fontSize: '22px',\r\n    },\r\n} as const;\r\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\r\n    //we need to use a ref here to ensure that the same reducer is always used\r\n    let stateProviders = [] as React.FunctionComponent[];\r\n    stateProviders.forEach(x=>{\r\n        children = x({children});\r\n    });\r\n    return <>{children}</>;\r\n};\r\nexport default GlobalStateProvider;\r\n","import React from 'react';\r\n\r\nconst Global: React.FC<{}> = ({children}) => {\r\n    //we need to use a ref here to ensure that the same reducer is always used\r\n    let components = [] as React.FunctionComponent[];\r\n    components.forEach(x=>{\r\n        children = x({children});\r\n    });\r\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\r\n};\r\nexport default Global;\r\n","import React, {CSSProperties} from 'react';\r\n\r\ntype Props = {\r\n    header: string,\r\n    fontSize?: number,\r\n    headerLeft?: React.ReactNode,\r\n    headerRight?: React.ReactNode,\r\n};\r\n\r\nconst Frame: React.FC<Props> = ({header,fontSize,headerLeft,headerRight,children}) => {\r\n    \r\n    return (\r\n        <div style={styles.appContainer}>\r\n            <div style={{...styles.header, fontSize: fontSize || 45}}>\r\n                <div style={styles.headerLeft}>\r\n                    {headerLeft}\r\n                </div>\r\n                {header}\r\n                <div style={styles.headerRight}>\r\n                    {headerRight}\r\n                </div>\r\n            </div>\r\n            <div style={styles.page}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styleMap = {\r\n    appContainer: {\r\n        overflow: 'hidden',\r\n    },\r\n    header: {\r\n        left: '50%',\r\n        height: '100px',\r\n        transform: 'translate(-50%,0px)',\r\n        backgroundColor: '#ddd',\r\n        lineHeight: '100px',\r\n        minWidth: '600px',\r\n        textAlign: 'center',\r\n    },\r\n    headerLeft: {\r\n        left: '20px',\r\n        width: 'auto',\r\n    },\r\n    headerRight: {\r\n        left: 'auto',\r\n        right: '20px',\r\n        width: 'auto',\r\n    },\r\n    page: {\r\n        top: '100px',\r\n        height: 'calc(100% - 100px)',\r\n    },\r\n} as const;\r\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\r\n\r\nexport default Frame;\r\n","import React, {CSSProperties} from 'react';\r\nimport {RouteComponentProps, Link} from \"@reach/router\";\r\nimport Frame from '../components/Frame';\r\n\r\ntype Props = {} & RouteComponentProps;\r\n\r\nconst Menu: React.FC<Props> = () => {\r\n    return (\r\n        <Frame header=\"SNapp\" fontSize={55}>\r\n            <div style={styles.centeredText}>\r\n                This is an example of a page with a header... <br />\r\n                <Link style={styles.link} to=\"convert\">This is a link to the convert page...</Link>\r\n            </div>\r\n        </Frame>\r\n    );\r\n};\r\n\r\nconst styleMap = {\r\n    centeredText: {\r\n        top: '200px',\r\n        height: 'auto',\r\n        textAlign: 'center',\r\n    },\r\n    link: {\r\n        color: 'blue',\r\n        textDecoration: 'underline',\r\n    }\r\n} as const;\r\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport {Router as ReachRouter} from '@reach/router';\r\nimport Convert from './pages/Convert';\r\nimport NotFound from './pages/NotFound';\r\nimport GlobalStateProvider from './contexts/Global';\r\nimport Global from './components/global/Global';\r\nimport Menu from './pages/Menu';\r\n\r\nconst Router: React.FC = () => {\r\n    return (\r\n        <GlobalStateProvider>\r\n            <Global />\r\n            <ReachRouter>\r\n                <Menu path=\"/\" />\r\n                <Convert path=\"/convert\" />\r\n                <NotFound path=\"/*\" />\r\n            </ReachRouter>\r\n        </GlobalStateProvider>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}