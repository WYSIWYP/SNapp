{"version":3,"sources":["contexts/Dialog.tsx","components/Frame.tsx","components/Expandable.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx","contexts/Preferences.tsx","util/Util.tsx","components/SNView.tsx","util/Dialog.tsx","images/upload.svg","parser/Types.tsx","parser/MusicXML.tsx"],"names":["initialState","shown","DialogContext","createContext","undefined","DialogStateProvider","children","reducer","useRef","state","action","type","data","val","useReducer","current","dispatch","Provider","value","useDialogState","useContext","styles","appContainer","overflow","header","fontStyle","fontWeight","fontSize","textAlign","letterSpacing","left","height","lineHeight","transform","backgroundColor","minWidth","position","page","top","sideBar","right","Frame","sideMenu","showSideMenu","style","id","className","group","paddingLeft","title","marginTop","alignItems","display","width","marginBottom","childrenWrapper","useState","expanded","setExpanded","ref","downArrow","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","rightArrow","onClick","s","Math","ceil","clientHeight","CurrentFileContext","CurrentFileStateProvider","useCurrentFileState","leftSide","float","svg","marginRight","color","marginLeft","cursor","subHeader","SNView","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","padding","opacity","sideBarContent","line","name","hidden","Convert","show","setShow","usePreferencesState","preferences","setPreferences","currentFile","setCurrentFile","showPreferencesButton","setShowPreferencesButton","useEffect","timeout","setTimeout","clearTimeout","a","localStorage","getItem","file_name","JSON","parse","filter","x","e","console","error","navigate","sidebar","file","Blob","stringify","saveAs","autoBom","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","readAsText","files","importFile","Expandable","measuresPerRow","measuresPerRowOptions","map","key","clefSymbols","clefPreferenceOptions","staffScale","scalePreferenceOptions","horizontalSpacing","spacingPreferenceOptions","verticalSpacing","accidentalType","accidentalTypeOptions","noteScale","naturalNoteShape","noteHeadPreferenceOptions","sharpNoteShape","flatNoteShape","noteSymbolColor","colorPreferenceOptions","noteDurationColor","d","margin","document","getElementById","canvas","getElementsByClassName","pdf","jsPDF","rows","nextRowY","range","length","forEach","i","row","lines","Array","from","getElementsByTagName","getAttribute","split","parseFloat","w","h","canvasHeight","pdfHeight","html","innerHTML","log","rowHeight","reduce","b","addPage","ctx","getContext","fillStyle","fillRect","canvg","ignoreClear","addImage","save","openPDF","padding-right","cx","cy","r","xml","forcedWidth","body","NotFound","GlobalStateProvider","PreferencesStateProvider","bg","frame","border","borderRadius","userSelect","headerRight","maxHeight","overflowY","buttons","bottom","Dialog","dialog","active","startX","startY","mouseX","mouseY","y","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","contents","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingRight","overflowX","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","link","deleteAll","icon","Menu","setRecentFiles","installHandle","setInstallHandle","window","addEventListener","preventDefault","setDialogState","showError","recent","loadFile","setItem","date_opened","Date","getTime","deleteFile","newRecentFiles","removeItem","deleteSinglePrompt","deleteAllFiles","onUpload","fileName","floor","random","toString","join","date_created","date","getMonth","getDate","getFullYear","paddingTop","x1","y1","x2","y2","src","alt","replace","failedReads","fail","reader1","Error","JSZip","loadAsync","zip","async","details","parser","DOMParser","detailsDOM","parseFromString","nodes","musicXMLPath","musicXMLData","MusicXML","parseScore","measures","readAsArrayBuffer","reader2","uploadFile","prompt","userChoice","then","outcome","Router","path","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","Object","keys","PreferencesContext","min","max","res","push","Accidental","setWidth","score","setScore","dialogState","setImmediate","showErrorRef","callback","newWidth","getBoundingClientRect","removeEventListener","noteSymbolSize","small","medium","large","rowPadding","narrow","moderate","wide","horizontalPadding","staffLabelSpace","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","staffLabels","octaveLines","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","movementTitle","work","workTitle","author","identification","creators","creator","credits","creditWords","credit","words","abs","findAuthor","minNote","treble","bass","maxNote","instrumentTrack","track","trackTypes","includes","measure","staff","midi","staffTypes","bassClefIsEmpty","minLine","maxLine","staffHeights","beatsPerMeasure","measureWidth","measureNumber","accum","currentWedge","rowNumber","staffHeight","svgHeight","staffName","bassStaffOnly","textAnchor","dominantBaseline","measureLabelSpace","j","measureNumberToPos","drawWedge","endTime","startMeasure","startTime","noteTimeToPos","endX","staffBreak","textSize","lyricsSpace","dynamicsSpace","directionsAtRow","directions","slice","dynamicsAreEmpty","every","direction","dynamics","wedge","lyrics","lyricsTrack","find","notesAtRow","lyricsAreEmpty","directionsAtMeasure","time","fontFamily","notesAtMeasure","attributes","contentSVG","pedal","pedals","directionsAreEmpty","pedalText","reverse","currentTime","timeSignature","currentKey","keySignature","getCurrentSignatures","measureSVG","octaveLine","lineY","tickX","tickSize","noteHeadSVG","noteTailSVG","_idx","noteHead","tieStart","tie","tieStop","isLastMeasure","isLastNote","duration","noteSpansRow","noteTail","noteTime","boxes","xStart","yStart","xEnd","roundingSpace","radiusStart","radiusEnd","pointedEnd","fillOpacity","Fragment","accidental","triHeight","sqrt","crossCircleWidth","autoNoteShape","svgRows","grandStaff","paddingBottom","alignmentBaseline","titleRowHeight","tempo","close","showMessage","buttonText","buttonAction","space","showPrompt","buttonText1","buttonAction1","buttonText2","buttonAction2","module","exports","dynamicsArray","pitchToMidi","pitch","step","c","f","g","toLowerCase","octave","alter","round","lyricsPartId","some","parts","partName","partContainsLyrics","entry","getLyricsPartID","pianoPartId","pianoPart","partList","part","_class","isScorePart","getPianoPartID","currentBeatType","currentBeats","trackIDsToParse","instrumentId","divisions","progress","notes","divisionsToNoteLength","measureEnd","chord","rest","entrySlur","lyricsText","entryTies","ties","staffNumber","notations","notation","slurs","slur","lyricParts","times","parseInt","beatTypes","hasOwnProperty","sound","directionTypes","str","dynamic","offset","partId","trackHasBassStaff","clefs","clef","sign","trackHasOneStaff","trackHasBassStaffOnly","newMeasures","_","index","start","idx","currentMeasureLength","lastNote","measureLength"],"mappings":"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","file":"static/js/main.c4a06496.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","import React, {CSSProperties} from \"react\";\n\ntype Props = {\n    header?: string;\n    fontSize?: number;\n    sideMenu?: React.ReactNode;\n    showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n    header,\n    fontSize,\n    sideMenu,\n    showSideMenu,\n    children\n}) => {\n    return (\n        <div style={styles.appContainer}>\n\n            {header === undefined ? null : <div id=\"header\" style={{...styles.header, fontSize: fontSize || 40}}>\n                {header}\n            </div>}\n\n            <div style={{...styles.page, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>{children}</div>\n            <div className={`animated ${showSideMenu ? 'open' : 'close'}`}\n                style={{...styles.sideBar, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>\n                {sideMenu}\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    appContainer: {\n        overflow: \"hidden\",\n    },\n    header: {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fontSize: \"42px\",\n        textAlign: \"center\",\n        letterSpacing: \"0.05em\",\n        left: \"50%\",\n        height: \"80px\",\n        lineHeight: \"80px\",\n        transform: \"translate(-50%,0px)\",\n        backgroundColor: \"#31B7D6\",\n        minWidth: \"600px\",\n        position: \"absolute\",\n        overflow: 'hidden',\n    },\n    page: {\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        overflow: \"auto\",\n    },\n    sideBar: {\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        left: \"auto\",\n        right: \"0px\",\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {CSSProperties, useState, useRef} from \"react\";\n\ntype Props = {\n    title: string;\n};\n\nconst Frame: React.FC<Props> = ({\n    title,\n    children\n}) => {\n    let [expanded, setExpanded] = useState(false);\n    let ref = useRef(undefined! as HTMLDivElement);\n    let downArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>;\n    let rightArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>;\n    return (\n        <div style={styles.group}>\n            <div style={styles.title} onClick={() => {setExpanded(s => !s);}}>\n                {expanded ? downArrow : rightArrow} {title}\n            </div>\n            <div className={`animated-height`} style={{...styles.children, height: `${expanded ? Math.ceil(ref === undefined ? 0 : ref.current.clientHeight + 30) : 0}px`}}>\n                <div ref={ref} style={styles.childrenWrapper}>\n                    {children}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst styleMap = {\n    group: {\n        paddingLeft: '10px',\n        height: 'auto',\n        position: 'relative',\n    },\n    title: {\n        position: 'relative',\n        height: '40px',\n        marginTop: '30px',\n        alignItems: 'baseline',\n        display: 'flex',\n        width: '100%',\n        lineHeight: '40px',\n        fontSize: '23px',\n    },\n    children: {\n        position: 'relative',\n        paddingLeft: '15px',\n        marginBottom: '30px',\n        overflow: 'hidden',\n    },\n    childrenWrapper: {\n        position: 'relative',\n        height: 'auto',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport Expandable from '../components/Expandable';\nimport {saveAs} from 'file-saver';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions,\n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions, accidentalTypeOptions, clefPreferenceOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\nimport {range} from '../util/Util';\n// import {useDialogState} from '../contexts/Dialog';\n// import * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    // let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    // let showError = (error: string)=>{\n    //     setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n    //         setDialogState(Dialog.close());\n    //     }));\n    // }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            };\n        }\n    }, [show]);\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.error(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n\n            // should change with preferences - as percent of page width\n            let margin = 5;\n            let padding = 0; //between lines within each row\n            let paddingBetweenRows = 5; //between rows\n\n            let hidden = document.getElementById('hidden-pdf-generation') as HTMLDivElement;\n            let canvas = document.getElementsByClassName('canvas')[0] as HTMLCanvasElement;\n\n            let pdf = new jsPDF(); //210 x 297 mm (A4 paper dimensions)\n            let width = 210;\n            let height = 297;\n\n            margin = width * margin / 100;\n            padding = width * padding / 100;\n\n            let rows = hidden.getElementsByClassName('snview-row');\n\n            let nextRowY = margin;\n            range(0, rows.length).forEach(i => {\n                let row = rows[i];\n\n                let lines = Array.from(row.getElementsByTagName('div')).map(line=>{\n                    let svg = line.getElementsByTagName('svg')[0];\n                    let [, , w, h] = svg.getAttribute('viewBox')!.split(' ').map(x => Math.ceil(parseFloat(x)));\n\n\n\n                    //canvas is 1000 px wide, this determine the height required to render the row\n                    let canvasHeight = Math.ceil(1000 * h / w);\n\n                    //determines the row's height on the pdf in mm based upon the row's width\n                    let pdfHeight = Math.ceil((width - margin * 2) * h / w);\n\n                    return {\n                        w,\n                        h,\n                        canvasHeight,\n                        pdfHeight,\n                        html: line.innerHTML,\n                    };\n                });\n\n                console.log('Row');\n\n                // if the row is small enough to fit on one page but not small enough to fit on the current page, add a new page\n                let rowHeight = lines.reduce((a,b)=>a+b.pdfHeight+padding,-padding);\n                if (rowHeight < height - margin*2 && nextRowY + rowHeight > height - margin) {\n                    console.log('Fits on one page but not this page');\n                    pdf.addPage();\n                    nextRowY = margin;\n                } else {\n                    //console.log('Fits on this page or does not fit on any page')\n                }\n\n                // add each line to the page, overflowing if needed\n                lines.forEach(line=>{\n                    if (nextRowY + line.pdfHeight > height - margin) {\n                        pdf.addPage();\n                        nextRowY = margin;\n                    }\n\n                    canvas.height = line.canvasHeight;\n                    let ctx = canvas.getContext(\"2d\")!;\n                    ctx.fillStyle = \"white\";\n                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                    ctx.fillStyle = \"black\";\n                    canvg(canvas, line.html, {ignoreClear: true});\n                    try {\n                        pdf.addImage(canvas, 'JPEG', margin, nextRowY, width - margin * 2, line.pdfHeight);\n                    } catch(e){\n                        console.error(e);\n                    }\n\n                    nextRowY += line.pdfHeight + padding;\n                });\n\n                // add additional padding between each row\n                nextRowY += paddingBetweenRows - padding;\n            });\n\n            // pdf.rect(0,0,200,287,'F');\n            // pdf.addPage();\n            // pdf.rect(0,10,200,287,'F');\n\n            //(pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        let file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp', {\n            autoBom: false,\n        });\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (\n        <div style={styles.sideBar}>\n            <div style={styles.sideBarTop}>\n                <div id=\"export\" title=\"Click to save your preferences\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                    Save\n                </div>\n                <div id=\"import\" style={styles.sideBarTopOptions}>\n                    Open\n                <input style={styles.fileInput} type=\"file\" title=\"Click to load your preferences\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n                </div>\n                <div id=\"close\" style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                    Close ✕\n                </div>\n            </div>\n\n            <div style={styles.sideBarContent}>\n\n            <Expandable title=\"Staff Appearance\">\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Measures per Row</div>\n                    <select value={preferences.measuresPerRow} onChange={\n                        (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                    }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Symbols</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.clefSymbols} onChange={\n                        (e) => {setPreferences({type: 'set', val: {clefSymbols: e.target.value as any}});}\n                    }>{clefPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.staffScale} onChange={\n                        (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                    }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Margin Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.horizontalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Staff Spacing Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.verticalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                </Expandable>\n\n                <Expandable title=\"Note Appearance\">\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Accidental Type</div>\n                        <select value={preferences.accidentalType} onChange={\n                            (e) => {setPreferences({type: 'set', val: {accidentalType: e.target.value as any}});}\n                        }>{accidentalTypeOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Size</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Notehead Color</div>\n                        <select value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Duration Color</div>\n                        <select value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                </Expandable>\n\n            </div>\n\n        </div>);\n\n    return (\n        <Frame showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div id=\"home\" style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    SNapp Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div id=\"preference\" style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView} onClick={() => {setShow(false);}}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n\n            <div id=\"hidden-pdf-generation\" style={styles.hidden}>\n                <canvas className=\"canvas\" width={1000} height={1000} />\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} forcedWidth={1000} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottom: 'solid 1px #bbb',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        position: 'absolute',\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    line: {\n        marginTop: '30px',\n        marginBottom: '30px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n        width: '100%'\n    },\n    name: {\n        position: 'relative',\n        width: '50%',\n        display: 'inline-block'\n    },\n    hidden: {\n        width: '0px',\n        height: '0px',\n        overflow: 'hidden',\n        opacity: .01,\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n\n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, { CSSProperties, useState, useEffect, Fragment } from 'react';\nimport { RouteComponentProps, navigate } from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML, { ScoreTimewise } from 'musicxml-interfaces';\nimport { useCurrentFileState } from '../contexts/CurrentFile';\nimport { useDialogState } from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport JSZip from 'jszip';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date_created: number,\n        date_opened: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n    let [installHandle, setInstallHandle] = useState<{\n        prompt: ()=>void,\n        userChoice: Promise<{outcome: 'accepted'|'rejected'}>\n    } | undefined>(undefined);\n    useEffect(()=>{\n        window.addEventListener('beforeinstallprompt', (e) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            setInstallHandle(e as any);\n        });\n    },[]);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            setDialogState(Dialog.close());\n        }));\n     };\n\n    let deleteAllPrompt = () => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete all files?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            recentFiles.forEach(x=>{\n                localStorage.removeItem(x.id);\n            });\n            setRecentFiles([]);\n            localStorage.setItem('recent_files', JSON.stringify([]));\n            setDialogState(Dialog.close());\n        }));\n    };\n    let deleteSinglePrompt = (x: recentFile) => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete this file?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            setRecentFiles(newRecentFiles);\n            localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n            localStorage.removeItem(x.id);\n            setDialogState(Dialog.close());\n        }));\n    };\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) { }\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({ type: 'set', val: { id: x.id, file_name: x.file_name, data: parsed } });\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n\n                // Update the accessed date for this song and move it to the top of the list\n                localStorage.setItem('recent_files', JSON.stringify([\n                    { ...x, date_opened: new Date().getTime() } as recentFile,\n                    ...recentFiles.filter(y => y.id !== x.id)\n                ]));\n            } catch (e) {\n                // Writing to local storage may be disabled currently\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteFile = (x: recentFile) => {\n        try {\n            deleteSinglePrompt(x);\n            // let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            // setRecentFiles(newRecentFiles);\n            // localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n        } catch (e) {\n            showError('An issue was encountered while deleting this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteAllFiles = () => {\n        try {\n            deleteAllPrompt();\n        } catch (e) {\n            showError('An issue was encountered while deleting all file(s).');\n            console.error(e);\n        }\n    };\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.(?:musicxml|mxl|xml)$/i, '');\n        let failedReads = 0;\n        let fail = () => {\n            failedReads++;\n            if (failedReads === 2) { //both reads failed\n                showError('An issue was encountered while reading the selected file.');\n            }\n        };\n        try {\n            let reader1 = new FileReader();\n            reader1.onload = function () {\n                try {\n                    let data = reader1.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as compressed\n\n                    (async () => {\n                        try {\n                            let zip = await JSZip.loadAsync(data);\n                            let details = await zip.file('META-INF/container.xml').async(\"text\");\n                            let parser = new DOMParser();\n                            let detailsDOM = parser.parseFromString(details, \"application/xml\");\n                            let nodes = detailsDOM.getElementsByTagName('rootfile');\n                            let musicXMLPath = nodes[0].getAttribute('full-path')!;\n                            for (let i = nodes.length - 1; i >= 0; i--) {\n                                if (nodes[i].getAttribute('media-type') === 'application/vnd.recordare.musicxml+xml') {\n                                    musicXMLPath = nodes[i].getAttribute('full-path')!;\n                                }\n                            }\n                            let musicXMLData = await zip.file(musicXMLPath).async(\"text\");\n                            let parsed = MusicXML.parseScore(musicXMLData);\n                            if (parsed.measures === undefined) {\n                                throw new Error('Invalid MusicXML format');\n                            }\n                            onUpload(fileName, parsed);\n                        } catch (e) {\n                            fail();\n                            console.error(e);\n                        }\n                    })();\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader1.readAsArrayBuffer((e.target as any).files[0]);\n            let reader2 = new FileReader();\n            reader2.onload = function () {\n                try {\n                    let data = reader2.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as uncompressed\n                    let parsed = MusicXML.parseScore(data as string);\n\n                    if (parsed.measures === undefined) {\n                        throw new Error('Invalid MusicXML format');\n                    }\n                    console.log(parsed);\n\n                    onUpload(fileName, parsed);\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader2.readAsText((e.target as any).files[0]);\n\n\n\n\n\n            // let reader = new FileReader();\n            // reader.onload = function () {\n            //     try {\n            //         let data = reader.result;\n            //         let parsed: ScoreTimewise;\n            //         if(data === null){\n            //             throw new Error('Failed to read file - null');\n            //         }\n            //         try {\n            //             //try to interpret this file as uncompressed\n            //             parsed = MusicXML.parseScore(data.toString());\n            //             console.log(data.toString());\n            //             console.log(parsed);\n            //         } catch(e){\n\n            //             throw new Error('...');\n            //         }\n\n            //         let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n            //         // Set this song as the current work in the global context\n            //         setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n            //         // Fail silently if localStorage is disabled\n            //         try {\n\n            //             // Set this song as the current work in localStorage\n            //             localStorage.setItem(id, JSON.stringify(parsed));\n            //             localStorage.setItem('current_file', id);\n\n            //             // Add this song to the recent songs list\n            //             let newRecentFiles = recentFiles.map(x => x);\n\n            //             for (let i = 0; i < newRecentFiles.length; i++) {\n            //                 if (newRecentFiles[i]['file_name'] === fileName) {\n            //                     newRecentFiles.splice(i, 1);\n            //                 }\n            //             }\n\n            //             newRecentFiles.unshift({file_name: fileName, date: new Date().getTime(), id});\n            //             localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n\n            //         } catch (e) {\n            //             console.error(e);\n            //         }\n\n            //         navigate('convert');\n            //     } catch (e) {\n            //         showError('An issue was encountered while reading the selected file.');\n            //         console.error(e);\n            //     }\n            // };\n            // reader.readAsArrayBuffer((e.target as any).files[0]);\n        } catch (e) {\n            showError('An issue was encountered while reading the selected file.');\n            console.error(e);\n        }\n    };\n\n    const onUpload = (fileName: string, parsed: ScoreTimewise) => {\n        let id = `file_${Array.from({ length: 16 }, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n        // Set this song as the current work in the global context\n        setCurrentFile({ type: 'set', val: { id, file_name: fileName, data: parsed } });\n\n        // Fail silently if localStorage is disabled\n        try {\n\n            // Set this song as the current work in localStorage\n            localStorage.setItem(id, JSON.stringify(parsed));\n            localStorage.setItem('current_file', id);\n\n            // Add this song to the recent songs list\n            localStorage.setItem('recent_files', JSON.stringify([\n                { file_name: fileName, date_created: new Date().getTime(), date_opened: new Date().getTime(), id } as recentFile,\n                ...recentFiles.filter(x => x.file_name !== fileName)\n            ]));\n\n        } catch (e) {\n            console.error(e);\n        }\n\n        navigate('convert');\n    };\n\n    return (\n        <Frame header=\"SNapp -&nbsp;Simplified&nbsp;Notation&nbsp;App&nbsp;for&nbsp;Sheet&nbsp;Music\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n                <div style={{ ...styles.item, maxWidth: '750px' }}>\n                    SNapp implements a simple and intuitive music notation known as What You See Is What You Play,\n                    or WYSIWYP. With it, musicians can spend less time learning to read music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{ ...styles.item, flex: '.2 0 auto' }} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{ ...styles.item, flex: '.35 0 auto' }} />\n                </> : <>\n                        <div style={{ ...styles.item, flex: '.36 0 auto' }} />\n                        <div style={{ ...styles.item, fontSize: '28px', fontWeight: 'bolder' }}>Recent Files</div>\n                        <div style={{ ...styles.item, flex: '.08 0 auto' }} />\n                        <div style={{ ...styles.item, ...styles.recentFiles }}>\n                            <div style={{ ...styles.recentFilesInner }}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div className=\"button-recent-file\" style={styles.recentFilesItem}>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 1 auto', fontWeight: 'bold' }}>\n                                            {x.file_name}\n                                        </div>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto' }} />\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 100000 auto', fontSize: '22px' }}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date_created || (x as any).date /*migrate from x.date to x.date_created*/))}\n                                        </div>\n                                        <div onClick={() => { deleteFile(x); }} style={{ ...styles.recentFilesItemInner, color: 'gray', width: '35px' }} >\n                                            <svg style={{ paddingTop: '9px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                                <div onClick={() => { deleteAllFiles(); }} style={styles.deleteAll}>Delete All Files</div>\n                            </div>\n                        </div>\n                        <div style={{ ...styles.item, flex: '.24 0 auto' }} />\n                    </>}\n                <div style={styles.item}>\n                    <span id=\"button-upload\" style={styles.link}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Open MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml,.mxl,.xml\" onChange={(e) => { uploadFile(e); }}></input>\n                    </span>\n                </div>\n                {installHandle===undefined?null:<>\n                    <div style={{ ...styles.item, flex: '.5 0 auto' }} />\n                    <div style={{ ...styles.item, maxWidth: '720px' }}>\n                        Click the button below to add SNapp to your device's home screen.\n                    </div>\n                    <div style={{ ...styles.item, flex: '.07 0 auto' }} />\n                    <div style={styles.item}>\n                        <span id=\"button-upload\" style={styles.link} onClick={() => {\n                            installHandle!.prompt();\n                            installHandle!.userChoice.then(result=>{\n                                if (result.outcome === 'accepted') {\n                                    setInstallHandle(undefined);\n                                }\n                            });\n                        }}>\n                            Add to Home Screen\n                        </span>\n                    </div>\n                </>}\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '750px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    deleteAll: {\n        position: 'relative',\n        height: '40px',\n        width: '200px',\n        fontSize: '22px',\n        lineHeight: '40px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'pointer',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n};\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = ['narrow', 'moderate', 'wide'] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"●\", \"◼\", \"▲\", \"▼\", \"○\", \"☐\", \"△\", \"▽\", \"⊗\", \"⊠\"] as const; // Previous symbols: ⨂, □\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const clefPreferenceOptions = [\"WYSIWYP\",\"Traditional\"] as const;\nexport type clefPreferenceOptions = (typeof clefPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport const accidentalTypeOptions = ['auto', 'sharp', 'flat'] as const;\nexport type accidentalTypeOption = (typeof accidentalTypeOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    clefSymbols: clefPreferenceOptions;\n    measuresPerRow: measuresPerRowOption;\n    accidentalType: accidentalTypeOption\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 'moderate',\n    verticalSpacing: 'moderate',\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    clefSymbols: 'WYSIWYP',\n    measuresPerRow: 4,\n    accidentalType: 'auto'\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML';\nimport {Note, Score, TimeSignature, KeySignature, StaffType} from '../parser/Types';\nimport {colorPreferenceStyles, usePreferencesState, spacingPreferenceOption, scalePreferenceOption} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    forcedWidth?: number,\n};\n\ntype Wedge = {\n    startMeasure: number,\n    startTime: number,\n    type: 'crescendo' | 'diminuendo'\n} | undefined;\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n}\n\nconst SNView: React.FC<Props> = ({xml, forcedWidth}) => {\n    console.log(xml);\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            navigate('/');\n            setImmediate(() => setDialogState(Dialog.close()));\n        }));\n    };\n    let showErrorRef = useRef(showError);\n\n    console.log('Score:', score);\n    useEffect(() => {\n        if (forcedWidth === undefined) {\n            let width: number = undefined!;\n            let callback = () => {\n                let newWidth = ref.current!.getBoundingClientRect().width;\n                if (width !== newWidth) {\n                    width = newWidth;\n                    setWidth(newWidth);\n                }\n            };\n            window.addEventListener(\"resize\", callback);\n            // let interval = setInterval(callback, 20);\n            callback();\n            return () => {\n                window.removeEventListener(\"resize\", callback);\n                // clearInterval(interval);\n            };\n        } else {\n            setWidth(forcedWidth);\n        }\n    }, [setWidth, forcedWidth]);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        try {\n            setScore(parse(xml));\n        } catch (e) {\n            showErrorRef.current('An issue was encountered while processing this file.');\n            console.error(e);\n        }\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        let devMode = false;\n\n        // fetch preference values\n        let {\n            noteDurationColor,\n            noteSymbolColor,\n            staffScale,\n            horizontalSpacing,\n            verticalSpacing,\n            noteScale,\n            naturalNoteShape,\n            sharpNoteShape,\n            flatNoteShape,\n            measuresPerRow,\n            accidentalType\n        } = preferences;\n\n        // Map preference strings to numeric values\n        let noteScaleMap: Record<scalePreferenceOption, number> = {\n            small: 15,\n            medium: 20,\n            large: 25\n        };\n        let staffScaleMap: Record<scalePreferenceOption, number> = {\n            small: 18,\n            medium: 25,\n            large: 32\n        };\n        let verticalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 10,\n            moderate: 30,\n            wide: 50\n        };\n        let horizontalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 20,\n            moderate: 40,\n            wide: 60\n        };\n\n        //general spacing\n        let noteSymbolSize = noteScaleMap[noteScale]; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = verticalSpacingMap[verticalSpacing]; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        //horizontal spacing\n        let horizontalPadding = horizontalSpacingMap[horizontalSpacing]; //left/right padding\n        let staffLabelSpace = staffScaleMap[staffScale]; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        let staffLabels = preferences.clefSymbols === 'WYSIWYP' ? ['𝒯', 'ℬ'] : ['𝄞', '𝄢']; //𝄢\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n\n            // if note is flat, we need to bring it a line higher.\n            if (accidentalType === 'auto' && getNoteAccidental(note) < 0) line++;\n            else if (accidentalType === 'flat' && getNoteAccidental(note) !== 0) line++; // handle user override\n\n            return line;\n        };\n\n        //find the title and author\n        let title = '';\n        try {\n            title = xml.movementTitle;\n            title = xml.work.workTitle;\n        } catch (e) {}\n\n        let findAuthor = (): string => {\n            // 1. check identification\n            if (xml.identification !== undefined && xml.identification.creators !== undefined) {\n                for (let creator of xml.identification.creators) {\n                    if (creator.type === 'composer') {\n                        return creator.creator;\n                    }\n                }\n            }\n\n            // 2. check credits\n            let author = '';\n            if (xml.credits !== undefined) {\n                let credits = xml.credits.filter(x => x.creditWords !== undefined && x.creditWords.length > 0).map(x => x.creditWords);\n                credits.forEach(credit => {\n                    credit.forEach(words => {\n                        if (Math.abs(words.words.length - 20) < Math.abs(author.length - 20)) {\n                            author = words.words;\n                        }\n                    });\n                });\n            }\n            return author;\n        };\n\n        let author = findAuthor();\n\n        let minNote: Record<StaffType, number> = {\n            treble: 128,\n            bass: 128\n        };\n\n        let maxNote: Record<StaffType, number> = {\n            treble: -1,\n            bass: -1\n        };\n\n        //calculate lowest and highest note\n        let instrumentTrack = score.tracks.filter(track => track.trackTypes.includes('Instrument'))[0];\n        instrumentTrack.measures.forEach(measure => {\n            measure.forEach(note => {\n                minNote[note.staff] = Math.min(minNote[note.staff], note.midi);\n                maxNote[note.staff] = Math.max(maxNote[note.staff], note.midi);\n            });\n        });\n\n        let staffTypes: StaffType[] = ['treble', 'bass'];\n\n        // if bass clef is empty, then we create an empty clef\n        let bassClefIsEmpty = false;\n        if (minNote.bass === 128 && maxNote.bass === -1) {\n            bassClefIsEmpty = true;\n            minNote.bass = 48;\n            maxNote.bass = 60;\n        }\n\n        staffTypes.forEach(staff => {\n            if (minNote[staff] >= 128 || minNote[staff] < 0 || maxNote[staff] >= 128 || maxNote[staff] < 0) {\n                console.log(minNote[staff], maxNote[staff]);\n                throw new Error('An issue was detected while analyzing this work\\'s note range');\n            }\n        });\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine: Record<StaffType, number> = {\n            treble: getNoteLine(minNote.treble),\n            bass: getNoteLine(minNote.bass)\n        };\n        let maxLine: Record<StaffType, number> = {\n            treble: getNoteLine(maxNote.treble),\n            bass: getNoteLine(maxNote.bass)\n        };\n\n        staffTypes.forEach(staff => {\n            // find the closest note line\n            while (minLine[staff] % 7 !== 0 && minLine[staff] % 7 !== 3) minLine[staff]--;\n            while (maxLine[staff] % 7 !== 0 && maxLine[staff] % 7 !== 3) maxLine[staff]++;\n\n            // widen staff range if it is too small\n            if (Math.abs(maxLine[staff] - minLine[staff]) <= 1) {\n                maxLine[staff] += (maxLine[staff] % 7 === 0) ? 3 : 4;\n                minLine[staff] -= (minLine[staff] % 7 === 0) ? 4 : 3;\n            }\n        });\n        let staffHeights: Record<StaffType, number> = {\n            treble: (maxLine.treble - minLine.treble) * noteSymbolSize / 2,\n            bass: (maxLine.bass - minLine.bass) * noteSymbolSize / 2\n        };\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        // set up wedge (crescendo / diminuendo) tracking\n        let currentWedge: Wedge;\n        let key = 0; // keys for JSX elements\n\n        let getCurrentSignatures = (measureNumber: number): {currentTime: TimeSignature, currentKey: KeySignature} => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            let currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber);\n            let currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            // sometimes, signatures are defined on the second measure. Below lines handle such cases.\n            if (!currentTime) currentTime = score!.tracks[0].timeSignatures[0];\n            if (!currentKey) currentKey = score!.tracks[0].keySignatures[0];\n            return {currentTime, currentKey};\n        };\n\n        let grandStaff = (i: number): JSX.Element => {\n            return (\n                <div className={`snview-row snview-row-${i + 1}`} key={i} style={{position: 'relative', height: 'auto', paddingTop: `${rowPadding}px`}}>\n                    {staff(i, 'treble')}\n                    {staffBreak(i)} {/* information that goes between two staffs */}\n                    {staff(i, 'bass')}\n                    {pedal(i)}\n                </div>\n            );\n        };\n\n        let staff = (i: number, staff: StaffType): JSX.Element | null => {\n            if (bassClefIsEmpty && staff === 'bass') return null;\n            let staffHeight = staffHeights[staff];\n            let svgHeight = staffHeight + measureLabelSpace + noteSymbolSize / 2;\n            let staffName = (staff === 'treble' && !instrumentTrack.bassStaffOnly) ? staffLabels[0] : staffLabels[1];\n\n            return <div style={{position: 'relative', height: 'auto'}}>\n                <svg viewBox={`0 0 ${width} ${svgHeight}`}>\n                    <g transform={`translate(${horizontalPadding}, 0)`}>\n                        <text x={staffLabelSpace} y={measureLabelSpace + staffHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">{staffName}</text>\n                        <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />\n\n                        {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                            measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j, staff)\n                        )}\n                    </g>\n                </svg>\n            </div>;\n        };\n\n        let measureNumberToPos = (measureNumber: number): number => {\n            return strokeWidth + horizontalPadding + staffLabelSpace + octaveLabelSpace + measureNumber * measureWidth;\n        };\n\n        let drawWedge = (height: number, endTime: number, measureNumber: number): JSX.Element[] => {\n            let {startMeasure, startTime, type} = currentWedge!;\n            let startX = measureNumberToPos(startMeasure) + noteTimeToPos(startTime, 'treble').x;\n            let endX = measureNumberToPos(measureNumber) + noteTimeToPos(endTime, 'treble').x;\n            if (startX === endX) endX += noteSymbolSize;\n\n            return [\n                <line key={key++}\n                    x1={startX + strokeWidth} x2={endX - strokeWidth}\n                    y1={type === 'crescendo' ? height / 2 : strokeWidth} y2={type === 'crescendo' ? strokeWidth : height / 2}\n                    strokeWidth={strokeWidth} stroke='black'\n                />,\n                <line key={key++}\n                    x1={startX + strokeWidth} x2={endX - strokeWidth}\n                    y1={type === 'crescendo' ? height / 2 : height - strokeWidth} y2={type === 'crescendo' ? height - strokeWidth : height / 2}\n                    strokeWidth={strokeWidth} stroke='black'\n                />\n            ];\n        };\n\n        let staffBreak = (i: number): JSX.Element | null => {\n            // general spacing\n            let textSize = noteSymbolSize * 6 / 7;\n\n            // vertical spacing\n            let lyricsSpace = noteSymbolSize * 1.5;\n            let dynamicsSpace = noteSymbolSize * 1;\n            let margin = 10;\n\n            // get respective directions and notes\n            let directionsAtRow = instrumentTrack.directions.slice(i * measuresPerRow, (i + 1) * measuresPerRow);\n            let dynamicsAreEmpty = currentWedge === undefined && directionsAtRow.every(directions =>\n                directions.length === 0 || directions.every(direction => direction.dynamics === undefined && direction.wedge === undefined)\n            );\n\n            let lyrics: JSX.Element[] = [];\n            let lyricsTrack = score!.tracks.find(track => track.trackTypes.includes('Lyrics'));\n            if (lyricsTrack === undefined) return null;\n\n            let notesAtRow = lyricsTrack.measures.slice(i * measuresPerRow, (i + 1) * measuresPerRow);\n            let lyricsAreEmpty = notesAtRow.every(measure => measure.length === 0);\n\n            // 1. render dynamics\n            let dynamics: JSX.Element[] = [];\n\n            directionsAtRow.forEach((directionsAtMeasure, measureNumber) => {\n                directionsAtMeasure.forEach(direction => {\n                    if (direction.dynamics === undefined) return;\n                    let x = measureNumberToPos(measureNumber) + noteTimeToPos(direction.time, 'treble').x;\n                    let y = dynamicsSpace * 6 / 7;\n                    dynamics.push(\n                        <text x={x} y={y} fontWeight='bold' fontFamily='monospace' fontStyle='italic' key={key++} fontSize={textSize}>\n                            {direction.dynamics}\n                        </text>\n                    );\n                });\n            });\n\n            // 2. render wedges\n            directionsAtRow.forEach((directionsAtMeasure, measureNumber) => {\n                directionsAtMeasure.forEach(direction => {\n                    if (direction.wedge === undefined) return;\n                    if (direction.wedge === 'crescendo' || direction.wedge === 'diminuendo') {\n                        currentWedge = {\n                            startMeasure: /* i * measuresPerRow */ + measureNumber,\n                            startTime: direction.time,\n                            type: direction.wedge,\n                        };\n                    } else if (direction.wedge === 'stop') {\n                        // draw wedge\n                        dynamics.push(...drawWedge(dynamicsSpace, direction.time, measureNumber));\n                        currentWedge = undefined; // finish this wedge\n                    }\n                });\n            });\n\n            // check if current wedge spans then next row\n            if (currentWedge !== undefined) {\n                // draw wedge for this row (ending at the last measure)\n                dynamics.push(...drawWedge(dynamicsSpace, beatsPerMeasure, measuresPerRow - 1));\n                // split off the remaining wedge\n                currentWedge.startMeasure = currentWedge.startTime = 0;\n            }\n\n\n            // 3. render lyrics\n            notesAtRow.forEach((notesAtMeasure, measureNumber) => {\n                notesAtMeasure.forEach(note => {\n                    if (!note.attributes.lyrics) return;\n                    let x = measureNumberToPos(measureNumber) + noteTimeToPos(note.time, 'treble').x;\n\n                    let y = lyricsSpace * 6 / 7; // multiply by 6 / 7 so that text render in the middle and not the bottom\n                    if (!dynamicsAreEmpty) y += margin + dynamicsSpace; // if there are dynamics, then we render lyrics below dynamics\n\n                    lyrics.push(\n                        <text x={x} y={y} key={key++} fontSize={textSize}>\n                            {note.attributes.lyrics}\n                        </text>\n                    );\n                });\n            });\n\n            let svgHeight = 0;\n            // shrink height if dynamics or lyrics do not exist\n            if (!dynamicsAreEmpty) svgHeight += dynamicsSpace;\n            if (!lyricsAreEmpty) svgHeight += lyricsSpace;\n            if (!lyricsAreEmpty && !dynamicsAreEmpty) svgHeight += margin;\n\n            let contentSVG = dynamicsAreEmpty && lyricsAreEmpty ? null : (\n                <svg viewBox={`0 0 ${width} ${svgHeight}`}>\n                    {dynamics}\n                    {lyrics}\n                </svg>\n            ); // don't render svg if it is empty\n\n            return (\n                <div style={{position: 'relative', height: 'auto', marginBottom: '10px'}}>\n                    {contentSVG}\n                </div>\n            );\n        };\n\n        let pedal = (i: number) => {\n            let pedals: JSX.Element[] = [];\n            let instrumentTrack = score!.tracks.find(track => track.trackTypes.includes('Instrument'));\n            if (!instrumentTrack) return null;\n\n            let directionsAtRow = instrumentTrack.directions.slice(i * measuresPerRow, (i + 1) * measuresPerRow);\n            let directionsAreEmpty = directionsAtRow.every(directions => directions.length === 0);\n            if (bassClefIsEmpty && directionsAreEmpty) return null;\n\n            directionsAtRow.forEach((directionsAtMeasure, measureNumber) => {\n                directionsAtMeasure.forEach(direction => {\n                    if (!direction.pedal) return;\n                    let pedalText = direction.pedal === 'start' ? '𝒫𝑒𝒹.' : '✻';\n                    let x = measureNumberToPos(measureNumber) + noteTimeToPos(direction.time, 'treble').x;\n                    pedals.push(\n                        <text x={`${x}`} y={noteSymbolSize} key={key++} fontSize={noteSymbolSize} fontWeight='bold'>\n                            {pedalText}\n                        </text>\n                    );\n                });\n            });\n\n            return (\n                <div style={{position: 'relative', height: 'auto'}}>\n                    <svg viewBox={`0 0 ${width} ${2 * noteSymbolSize}`}>\n                        {pedals}\n                    </svg>\n                </div>\n            );\n        };\n\n        let measure = (x: number, y: number, measureNumber: number, staff: StaffType) => {\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeights[staff] + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine[staff]; j <= maxLine[staff]; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + staffHeights[staff] - (j - minLine[staff]) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine[staff]) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                if (!track.trackTypes.includes('Instrument')) return; // we do not render notes for lyrics only track.\n                let notes = track.measures[measureNumber].filter(note => note.staff === staff);\n                notes.forEach((note, _idx) => {\n                    noteHeadSVG.push(noteHead(note, key++, staff));\n                    let tieStart = note.attributes.tie !== undefined && note.attributes.tie === 'start';\n                    let tieStop = note.attributes.tie !== undefined && note.attributes.tie === 'end';\n\n                    let isLastMeasure = ((measureNumber + 1) % measuresPerRow === 0); // whether current measure is the last measure of the row\n                    let isLastNote = note.time + note.duration >= currentTime.beats; // whether the note reaches the end of the measure\n                    let noteSpansRow = tieStart && isLastMeasure && isLastNote; // whether tied note spans next row\n\n                    noteTailSVG.push(noteTail(note, key++, tieStart, tieStop, noteSpansRow, staff));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        };\n\n        let noteTimeToPos = (noteTime: number, staff: StaffType) => ({\n            x: beatWidth * noteTime,\n            y: staffHeights[staff] + measureLabelSpace\n        });\n\n        let noteTail = (note: Note, i: number, tieStart: boolean, tieStop: boolean, noteSpansRow: boolean, staff: StaffType) => {\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine[staff];\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time, staff);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration, staff);\n\n            let roundingSpace = Math.max(Math.min(noteSymbolSize, xEnd - xStart), 0);\n            let radiusStart = tieStop ? 0 : roundingSpace / 4;\n            let radiusEnd = tieStart ? 0 : roundingSpace / 2;\n            let pointedEnd = noteSpansRow;\n\n            boxes.push(\n                <path\n                    key={key++}\n                    d={`\n                        M${xStart + radiusStart} ${yStart - (line + 1) * noteSymbolSize / 2}\n                        H${xEnd - radiusEnd}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${radiusEnd} ${radiusEnd}\n                        ${pointedEnd ? `\n                            l${noteSymbolSize / 2 - radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                            l${-noteSymbolSize / 2 + radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                        `: `v${noteSymbolSize - 2 * radiusEnd}`}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${-radiusEnd} ${radiusEnd}\n                        H${xStart + radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${-radiusStart} ${-radiusStart}\n                        v${-noteSymbolSize + 2 * radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${radiusStart} ${-radiusStart}\n                        z\n                    `}\n                    fill={colorPreferenceStyles[noteDurationColor]}\n                    fillOpacity={0.5}\n                />\n            );\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        };\n\n        let noteHead = (note: Note, i: number, staff: StaffType) => {\n            if (note.attributes.tie !== undefined && note.attributes.tie === 'end')\n                return null!;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine[staff];\n\n            let {x, y} = noteTimeToPos(note.time, staff);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = noteSymbolSize / 8;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let autoNoteShape = accidentalType === 'sharp' ? sharpNoteShape : flatNoteShape;\n            let shape = {\n                [Accidental.Natural]: naturalNoteShape,\n                [Accidental.Flat]: accidentalType === 'auto' ? flatNoteShape : autoNoteShape,\n                [Accidental.Sharp]: accidentalType === 'auto' ? sharpNoteShape : autoNoteShape,\n            }[accidental];\n\n            switch (shape) {\n                case '●':\n                    return <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '◼':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▲':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▼':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '○':\n                    return <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                case '☐':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '△':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2 + strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '▽':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2 - strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '⊗':\n                    return (<g key={i}>\n                        <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                        <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n                case '⊠':\n                    return (<g key={i}>\n                        <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y - noteSymbolSize / 2 + strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y + noteSymbolSize / 2 - strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y + noteSymbolSize / 2 - strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y - noteSymbolSize / 2 + strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n            }\n        };\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => grandStaff(i));\n        let titleRowHeight = 130;\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                <div className={`snview-row snview-row-0`} style={{position: 'relative', height: 'auto'}}>\n                    <div style={{position: 'relative', height: 'auto'}}>\n                        <svg viewBox={`0 0 ${width} ${titleRowHeight}`}>\n                            <text x={width / 2} y={10} fontSize={40} textAnchor=\"middle\" alignmentBaseline=\"hanging\">{title}</text>\n                            <text x={70} y={titleRowHeight - 10} fontSize={25} textAnchor=\"start\">{score.tempo ? `${score.tempo} bpm` : null}</text>\n                            <text x={width - 70} y={titleRowHeight - 10} fontSize={25} textAnchor=\"end\">{author}</text>\n                        </svg>\n                    </div>\n                </div>\n                {svgRows}\n            </div>\n        );\n    } catch (e) {\n        console.error(e);\n        if (!dialogState.shown) {\n            showError('An issue was encountered while generating WYSIWYP output for the selected file.');\n        }\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n};\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n};\n\nexport const showPrompt = (title: string, body: any, buttonText1: string, buttonAction1: () => void, buttonText2: string, buttonAction2: () => void): DialogAction => {\n    return {\n        type: 'open', val: {\n            title, width: 400, height: 275, contents: <div style={styles.body}>\n                <div style={styles.space} />\n                <div style={styles.top}>\n                    {body}\n                </div>\n                <div style={styles.space} />\n                <div style={styles.bottom}>\n                    <span style={styles.link} onClick={buttonAction1}>\n                        {buttonText1}\n                    </span>\n                    <span style={{...styles.link,color:'indianred'}} onClick={buttonAction2}>\n                        {buttonText2}\n                    </span>\n                </div>\n            </div>}};\n};\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n        padding:'0 30px',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";","/**\n * This file contains types shared across all parsers.\n */\n\n// Track and staff types\nexport type TrackType = 'Instrument' | 'Lyrics'; // part types that app currently handles\nexport type StaffType = 'treble' | 'bass';\n\n// Directions\nconst dynamicsArray = ['f', 'ff', 'fff', 'ffff', 'ffff', 'ffffff', 'fp', 'fz', 'mf', 'mp', 'p', 'pp', 'ppp', 'pppp', 'ppppp', 'pppppp', 'rf', 'rfz', 'sf', 'sffz', 'sfp', 'sfpp', 'sfz'] as const;\nexport type Dynamics = (typeof dynamicsArray)[number];\nexport let isDynamics = ((str: string): str is Dynamics => dynamicsArray.some(dynamic => dynamic === str));\n\nexport type Pedal = 'start' | 'end';\n\nexport type Wedge = 'crescendo' | 'diminuendo' | 'stop';\n\nexport type Direction = {\n    dynamics?: Dynamics,\n    pedal?: Pedal,\n    wedge?: Wedge,\n    time: number\n}; // Directions are used for expression marks that are not clearly tied to a particular note.\n\nexport type Directions = Direction[];\n\n// Note attributes\nexport type Tie = 'start' | 'end';\n\nexport type Slur = 'start' | 'end';\n\n// Notes\nexport type Note = {\n    time: number,\n    duration: number,\n    midi: number,\n    staff: StaffType,\n    attributes: {\n        tie?: Tie,\n        slur?: Slur,\n        lyrics?: string\n    }\n};\nexport type Notes = Note[]; // note: each part should have 1 staff or 2 staves (for piano)\n\n// Signatures\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n};\n\nexport type Track = {\n    measures: Notes[],\n    directions: Directions[]\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[],\n    trackTypes: TrackType[], // we use an array here because a track might contain both lyrics and piano part.\n    bassStaffOnly?: boolean // whether the piece only has a bass staff\n};\n\nexport type Tracks = Track[];\n\nexport type Score = {\n    tracks: Tracks,\n    tempo?: number\n};\n","import MusicXML from 'musicxml-interfaces';\nimport {Note, TimeSignature, KeySignature, Tracks, Score, Notes, Track, TrackType, isDynamics, Direction, Directions, Slur} from './Types';\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nconst isScorePart = (part: MusicXML.PartGroup | MusicXML.ScorePart): part is MusicXML.ScorePart => {\n    return part && part._class === 'ScorePart';\n};\n\n// get piano part name from xml\nconst getPianoPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    const pianoPart = xml.partList.find(part => isScorePart(part) && part.partName.partName.toLowerCase() === 'piano');\n    return pianoPart ? (pianoPart as MusicXML.ScorePart).id : undefined;\n};\n\nconst getLyricsPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    let lyricsPartId: string | undefined;\n    // loop until we find a part with some lyrics defined.\n    xml.measures.some(measure => {\n        return Object.keys(measure.parts).some(partName => {\n            let part = measure.parts[partName];\n            let partContainsLyrics = part.some(entry => entry.lyrics !== undefined);\n            lyricsPartId = partContainsLyrics ? partName : undefined;\n            return lyricsPartId !== undefined;\n        });\n    });\n    return lyricsPartId;\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let lyricsPartId = getLyricsPartID(xml);\n    let pianoPartId = getPianoPartID(xml);\n\n    // currently, SNApp renders piano and lyric parts. We store the ids of the tracks we have to parse below.\n    let tempo: number | undefined;\n\n    let currentBeatType = 4;\n    let currentBeats = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: Notes[],\n            directions: Directions[]\n        }\n    } = {};\n\n    /**\n     * Multitrack Handling Logic\n     *\n     * We parse:\n     *      1) just the instrument part from a two part work for instrument and vocal\n     *      2) just the piano part from a work with multiple instrument parts\n     *      3) just one instrument part from a work with multiple instruments and none of them are piano\n     */\n\n    // parts that we want to parse. We may add more ids here if we decide to render more instruments parts.\n    let trackIDsToParse: string[] = [];\n\n    let instrumentId = pianoPartId !== undefined ? pianoPartId : 'P1';\n    trackIDsToParse.push(instrumentId);\n    if (lyricsPartId !== undefined && !trackIDsToParse.includes(lyricsPartId)) {\n        trackIDsToParse.push(lyricsPartId);\n    }\n\n    xml.measures.forEach((measure, measureNumber) => {\n        trackIDsToParse.forEach(partName => {\n            if (measure.parts[partName] === undefined) return; // if part has not started yet, skip this measure.\n\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length).fill([]),\n                    directions: Array(xml.measures.length).fill([])\n                };\n            }\n            let part = parts[partName];\n            let notes: Note[] = [];\n            let directions: Direction[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            };\n            part.progress = 0;\n            let measureEnd = 0;\n\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n\n                            measureEnd = Math.max(measureEnd, time + divisionsToNoteLength(entry.duration));\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n\n                            if (entry.pitch !== undefined) {\n                                let entryTies = entry.ties as {type: number}[];\n                                let staffNumber = entry.staff ? entry.staff : 1;\n                                let entrySlur: Slur | undefined;\n                                let lyricsText: string | undefined;\n\n                                if (entry.notations && entry.notations.length > 0) {\n                                    entry.notations.forEach((notation: any) => {\n                                        if (notation.slurs) {\n                                            notation.slurs.forEach((slur: any) => {\n                                                if (slur.type === 0) entrySlur = 'start';\n                                                if (slur.type === 1) entrySlur = 'end';\n                                            });\n                                        }\n                                    });\n                                }\n                                if (entry.lyrics) {\n                                    let lyrics = entry.lyrics[0].lyricParts.find((lyrics: any) => lyrics._class === 'Text');\n                                    if (lyrics) lyricsText = lyrics.data;\n                                }\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    staff: staffNumber === 1 ? 'treble' : 'bass',\n                                    attributes: {\n                                        tie: entryTies ? (entryTies.some(tie => tie.type === 0) ? 'start' : 'end') : undefined,\n                                        slur: entrySlur,\n                                        lyrics: lyricsText\n                                    }\n                                });\n                            }\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                    currentBeats = entry.times[0].beats[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        // parse tempo\n                        if (entry.hasOwnProperty('sound') && entry.sound.tempo !== undefined) {\n                            if (!tempo && entry.sound.tempo) tempo = parseInt(entry.sound.tempo); // take the first defined tempo\n                        }\n                        if (!entry.directionTypes || entry.directionTypes === 0) break;\n\n                        // parse other directions\n                        entry.directionTypes.forEach((direction: any) => {\n                            // parse dynamics\n                            if (direction.hasOwnProperty('dynamics')) {\n                                Object.keys(direction.dynamics).forEach(key => {\n                                    if (isDynamics(key)) directions.push({time: part.progress, dynamics: key});\n                                });\n                            }\n\n                            // parse wedge (crescendo / diminuendo)\n                            if (direction.hasOwnProperty('wedge')) {\n                                if (direction.wedge.type === 0) directions.push({time: part.progress, wedge: 'crescendo'});\n                                else if (direction.wedge.type === 1) directions.push({time: part.progress, wedge: 'diminuendo'});\n                                else if (direction.wedge.type === 2) directions.push({time: part.progress, wedge: 'stop'});\n                            }\n\n                            // parse pedal\n                            if (direction.hasOwnProperty('pedal')) {\n                                if (direction.pedal.type === 0) directions.push({time: part.progress, pedal: 'start'});\n                                else if (direction.pedal.type === 1) directions.push({time: part.progress, pedal: 'end'});\n                                // we disregard other pedal types\n                            }\n                        });\n                        break;\n                    case 'Sound':\n                        if (!tempo && entry.tempo) tempo = parseInt(entry.tempo); // take the first defined tempo\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n            part.measures[measureNumber] = notes;\n            part.directions[measureNumber] = directions;\n\n            // check pick up measure\n            if (measureNumber === 0 && measureEnd < currentBeats) {\n                let offset = currentBeats - measureEnd;\n                part.measures[0].forEach(note => note.time += offset);\n                part.directions[0].forEach(direction => direction.time += offset);\n            }\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(partId => {\n        let trackTypes: TrackType[] = [];\n        if (partId === lyricsPartId) trackTypes.push('Lyrics');\n        if (partId === instrumentId) trackTypes.push('Instrument');\n\n        let trackHasBassStaffOnly = (xml: MusicXML.ScoreTimewise, partId: string) => {\n            // TODO: optiomize this\n            let trackHasBassStaff = xml.measures.some(measure => {\n                return measure.parts[partId].some(entry => {\n                    return entry.clefs && entry.clefs.some((clef: any) => {\n                        return clef.sign === 'F' && clef.line === 4;\n                    });\n                });\n            });\n            let trackHasOneStaff = xml.measures.every(measure => {\n                return measure.parts[partId].every(entry => {\n                    return entry.staff === undefined;\n                });\n            });\n            return trackHasBassStaff && trackHasOneStaff;\n        };\n\n        return {\n            measures: parts[partId].measures,\n            directions: parts[partId].directions,\n            timeSignatures: parts[partId].timeSignatures,\n            keySignatures: parts[partId].keySignatures,\n            trackTypes,\n            bassStaffOnly: trackHasBassStaffOnly(xml, partId)\n        } as Track;\n    });\n\n    // handle unprovided signatures\n    tracks.forEach(track => {\n        // add default values for key signatures if it is not provided.\n        if (track.keySignatures.length === 0) track.keySignatures.push({measure: 0, fifths: 0});\n\n        if (track.timeSignatures.length === 0) {\n            if (track.measures.length === 1) {\n                // case 1: all notes grouped into a single measure\n                let measure = track.measures[0];\n                let newMeasures: Note[][] = Array(Math.ceil(measure.length / 4)).fill([]).map((_, index) => index * 4).map(start => measure.slice(start, start + 4)); // divide notes into chunks of four\n                newMeasures.forEach((measure, idx) => measure.forEach(note => note.time -= 4 * idx)); // shift note start time appropriately\n                track.timeSignatures.push({measure: newMeasures.length, beats: 4, beatTypes: 4});\n                track.measures = newMeasures;\n            } else {\n                // case 2: time signature is not provided at all\n                let currentMeasureLength = 4; // start with assuming 4/4 time signature.\n                track.measures.forEach((measure, measureNumber) => {\n                    let lastNote = measure[measure.length - 1];\n                    let measureLength = Math.max(lastNote.time + lastNote.duration);\n                    if (currentMeasureLength !== measureLength) {\n                        track.timeSignatures.push({measure: measureNumber, beats: measureLength, beatTypes: 4});\n                        currentMeasureLength = measureLength;\n                    }\n                });\n            }\n        }\n    });\n    return {tracks, tempo};\n};"],"sourceRoot":""}