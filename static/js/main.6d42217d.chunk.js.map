{"version":3,"sources":["contexts/Preferences.tsx","contexts/Dialog.tsx","parser/Types.tsx","components/Frame.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx","util/Dialog.tsx","components/SNView.tsx","util/Util.tsx","parser/MusicXML.tsx","images/dropDown.svg","images/upload.svg"],"names":["colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","colorPreferenceOptions","Object","keys","scalePreferenceOptions","spacingPreferenceOptions","noteHeadPreferenceOptions","measuresPerRowOptions","accidentalTypeOptions","initialState","noteDurationColor","noteSymbolColor","staffScale","horizontalSpacing","verticalSpacing","noteScale","naturalNoteShape","sharpNoteShape","flatNoteShape","measuresPerRow","accidentalType","PreferencesContext","createContext","undefined","PreferencesStateProvider","_ref","children","reducer","useRef","state","action","type","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","val","_useReducer","useReducer","current","_useReducer2","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Provider","value","usePreferencesState","useContext","shown","DialogContext","DialogStateProvider","data","react__WEBPACK_IMPORTED_MODULE_1___default","useDialogState","Tie","__webpack_require__","d","__webpack_exports__","styles","appContainer","overflow","header","paddingTop","fontStyle","fontWeight","fontSize","alignItems","textAlign","letterSpacing","left","top","height","transform","backgroundColor","minWidth","position","page","sideBar","overflowY","overflowX","right","Frame","sideMenu","showSideMenu","react_default","style","id","objectSpread","className","concat","CurrentFileContext","CurrentFileStateProvider","slicedToArray","useCurrentFileState","leftSide","float","width","svg","marginRight","display","color","marginTop","marginLeft","cursor","subHeader","SNView","sideBarTop","justifyContent","borderBottom","opacity","zIndex","sideBarTopOptions","whiteSpace","fileInput","padding","sideBarContent","line","margin","name","select","backgroundPosition","backgroundRepeat","backgroundImage","dropDown","paddingLeft","border","borderRadius","WebkitAppearance","hidden","Convert","_useState","useState","_useState2","show","setShow","_usePreferencesState","_usePreferencesState2","preferences","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","_useState3","_useState4","showPreferencesButton","setShowPreferencesButton","useEffect","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","wrap","_context","prev","next","localStorage","getItem","JSON","parse","filter","x","e","console","log","navigate","stop","sidebar","title","onClick","file","Blob","stringify","saveAs","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","error","readAsText","files","importFile","onSubmit","map","key","components_Frame","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","document","getElementById","canvas","getElementsByClassName","pdf","jsPDF","rows","nextRowY","i","length","row","_split$map","getElementsByTagName","getAttribute","split","parseInt","_split$map2","w","h","canvasRowHeight","Math","ceil","pdfRowHeight","addPage","ctx","getContext","fillStyle","fillRect","canvg","innerHTML","ignoreClear","addImage","save","openPDF","padding-right","Fragment","cx","cy","r","xml","forcedWidth","body","NotFound","GlobalStateProvider","forEach","bg","frame","lineHeight","userSelect","headerRight","maxHeight","buttons","bottom","Dialog","_useDialogState","dialog","active","startX","startY","mouseX","mouseY","y","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","contents","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingRight","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","link","icon","Menu","setRecentFiles","setDialogState","showError","recent","onUpload","fileName","Array","from","floor","random","toString","join","setItem","date_created","Date","getTime","date_opened","toConsumableArray","react","loadFile","date","getMonth","getDate","getFullYear","src","alt","replace","failedReads","fail","reader1","Error","zip","details","parser","detailsDOM","nodes","musicXMLPath","musicXMLData","JSZip","loadAsync","sent","async","DOMParser","parseFromString","MusicXML","parseScore","measures","t0","readAsArrayBuffer","reader2","uploadFile","Router","contexts_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","global_Global","Boolean","window","location","hostname","match","ReactDOM","render","src_Router","navigator","serviceWorker","ready","then","registration","unregister","close","showMessage","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","buttonText","buttonAction","space","paddingBottom","Accidental","ref","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setWidth","score","setScore","_useDialogState2","dialogState","setImmediate","showErrorRef","callback","newWidth","getBoundingClientRect","addEventListener","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3___default","noteSymbolSize","small","medium","large","rowPadding","narrow","moderate","wide","horizontalPadding","staffLabelSpace","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","staffLabels","octaveLines","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","movementTitle","work","workTitle","author","credits","creditWords","credit","words","abs","minNote","maxNote","track","trackTypes","includes","measure","min","midi","max","minLine","maxLine","staffHeight","beatsPerMeasure","measureWidth","measureNumber","reduce","accum","rowNumber","_getCurrentSignatures","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","reverse","currentTime","find","timeSignature","currentKey","keySignature","getCurrentSignatures","measureSVG","push","measureLabelSpace","j","octaveLine","lineY","textAnchor","dominantBaseline","tickX","tickSize","noteHeadSVG","noteTailSVG","staff","_idx","noteHead","tieStart","attributes","ties","Start","tieStop","Stop","isLastMeasure","isLastNote","time","duration","noteSpansRow","noteTail","yOffset","fingeringSpace","dynamicsSpace","staffName","range","noteTimeToPos","noteTime","boxes","_noteTimeToPos","xStart","yStart","xEnd","roundingSpace","radiusStart","radiusEnd","pointedEnd","fillOpacity","_Accidental$Natural$A","accidental","_noteTimeToPos3","triHeight","sqrt","crossCircleWidth","autoNoteShape","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","x1","y1","x2","y2","svgRows","grandStaffHeight","grandStaff","alignmentBaseline","res","_Types__WEBPACK_IMPORTED_MODULE_0__","pitchToMidi","pitch","step","c","f","g","b","toLowerCase","octave","alter","round","lyricsPartId","some","parts","partName","partContainsLyrics","entry","lyrics","getLyricsPartID","pianoPartId","pianoPart","partList","part","_class","isScorePart","getPianoPartID","currentBeatType","trackIDsToParse","instrumentId","divisions","progress","notes","divisionsToNoteLength","chord","rest","entryTies","staffNumber","tie","times","beatTypes","partId","newMeasures","_","index","start","slice","idx","currentMeasureLength","lastNote","measureLength","module","exports","p"],"mappings":"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","file":"static/js/main.6d42217d.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = ['narrow', 'moderate', 'wide'] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"●\", \"◼\", \"▲\", \"▼\", \"○\", \"☐\", \"△\", \"▽\", \"⊗\", \"⊠\"] as const; // Previous symbols: ⨂, □\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport const accidentalTypeOptions = ['auto', 'sharp', 'flat'] as const;\nexport type accidentalTypeOption = (typeof accidentalTypeOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    measuresPerRow: measuresPerRowOption;\n    accidentalType: accidentalTypeOption\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 'moderate',\n    verticalSpacing: 'moderate',\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    measuresPerRow: 4,\n    accidentalType: 'auto'\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","/**\n * This file contains types shared across all parsers.\n */\n\nexport enum Tie {\n    Start = \"START\", \n    Stop = \"STOP\",\n}\n\nexport type TrackType = 'Instrument' | 'Lyrics'; // part types that app currently handles\n\nexport type Note = {\n    time: number,\n    duration: number,\n    midi: number,\n    staff: number,\n    attributes: {\n        ties: Tie[], // TODO: consider making this optional\n        // other attributes like slurs and dynamics can go here\n    }\n};\n\nexport type Measure = Note[]; // note: each part should have 1 staff or 2 staves (for piano)\n\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Track = {\n    measures: Measure[],\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[],\n    trackTypes: TrackType[] // we use an array here because a track might contain both lyrics and piano part.\n};\n\nexport type Tracks = Track[];\n\nexport type Score = {\n    tracks: Tracks,\n};\n","import React, { CSSProperties } from \"react\";\n\ntype Props = {\n  header: string;\n  fontSize?: number;\n  sideMenu?: React.ReactNode;\n  showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n  header,\n  fontSize,\n  sideMenu,\n  showSideMenu,\n  children\n}) => {\n  return (\n    <div style={styles.appContainer}>\n      <div id=\"header\" style={{ ...styles.header, fontSize: fontSize || 45 }}>\n        {header}\n        {/* <div style={styles.headerLeft}>\n                    {headerLeft}\n                </div>\n                <div style={styles.headerRight}>\n                    {headerRight}\n                </div> */}\n      </div>\n\n      <div style={styles.page}>{children}</div>\n      <div className={`animated ${showSideMenu?'open':'close'}`}\n        style={{...styles.sideBar}}>\n            {sideMenu}\n      </div>\n    </div>\n  );\n};\n\nconst styleMap = {\n  appContainer: {\n    overflow: \"hidden\"\n  },\n  header: {\n    paddingTop: \"8px\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"42px\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    letterSpacing: \"0.15em\",\n    left: \"50%\",\n    top: \"0px\",\n    height: \"80px\",\n    transform: \"translate(-50%,0px)\",\n    backgroundColor: \"#31B7D6\",\n    minWidth: \"600px\",\n    position: \"absolute\"\n  },\n  page: {\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    overflow: \"auto\"\n  },\n  sideBar: {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    left: \"auto\",\n    right: \"0px\"\n  }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport {saveAs} from 'file-saver';\nimport dropDown from '../images/dropDown.svg'\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions, \n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions, accidentalTypeOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\n// import {useDialogState} from '../contexts/Dialog';\n// import * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    // let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    // let showError = (error: string)=>{\n    //     setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n    //         setDialogState(Dialog.close());\n    //     }));\n    // }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n\n            let margin = 5;\n            let padding = 5;\n\n            let hidden = document.getElementById('hidden-pdf-generation') as HTMLDivElement;\n            let canvas = hidden.getElementsByClassName('canvas')[0] as HTMLCanvasElement;\n            \n            let pdf = new jsPDF(); //210 x 297 mm (A4 paper dimensions)\n            let width = 210;\n            let height = 297;\n\n            // should change with preferences\n            margin = width*margin/100;\n            padding = width*padding/100;\n\n\n            let rows = hidden.getElementsByClassName('snview-row');\n            \n            let nextRowY = margin;\n            for(let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n\n                let [,,w,h] = row.getElementsByTagName('svg')[0].getAttribute('viewBox')!.split(' ').map(x=>parseInt(x));\n                let canvasRowHeight = Math.ceil(1000*h/w);\n                let pdfRowHeight = Math.ceil((width-margin*2)*h/w);\n\n                if(nextRowY+pdfRowHeight > height-margin){\n                    pdf.addPage();\n                    nextRowY = margin;\n                }\n\n                canvas.height = canvasRowHeight;\n                let ctx = canvas.getContext(\"2d\")!;\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = \"black\";\n                canvg(canvas,row.innerHTML,{ignoreClear: true});\n                pdf.addImage(canvas, 'JPEG', margin, nextRowY, width-margin*2, pdfRowHeight);\n\n                nextRowY += pdfRowHeight+padding;\n            }\n            \n            \n            \n            // pdf.rect(0,0,200,287,'F');\n            // pdf.addPage();\n            // pdf.rect(0,10,200,287,'F');\n\n            //(pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp');\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (<div style={styles.sideBar}>\n        <div style={styles.sideBarTop}>\n            <div id=\"export\" title=\"Click to export\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                Export\n            </div>\n            <div id=\"import\" style={styles.sideBarTopOptions}>\n                Import\n                <input style={styles.fileInput} type=\"file\" title=\"Click to import\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n            </div>\n            <div id=\"close\" style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                Close X\n            </div>\n        </div>\n        <form onSubmit={() => {setShow(false);}} >\n            <label>\n                <div style={styles.sideBarContent}>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Measures per Row</div>\n                        <select style={styles.select} value={preferences.measuresPerRow} onChange={\n                            (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                        }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Accidental Type</div>\n                        <select style={styles.select} value={preferences.accidentalType} onChange={\n                            (e) => {setPreferences({type: 'set', val: {accidentalType: e.target.value as any}});}\n                        }>{accidentalTypeOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Size</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Clef Size</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.staffScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Margin Size</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.horizontalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Staff Spacing Size</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.verticalSpacing} onChange={\n                            (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                        }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select style={styles.select} value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Notehead Color</div>\n                        <select style={styles.select} value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Duration Color</div>\n                        <select style={styles.select} value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                </div>\n            </label>\n        </form>\n    </div>)\n\n    return (\n        <Frame header=\"SNapp\" showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div id=\"home\" style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div id=\"preference\" style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n            <div id=\"hidden-pdf-generation\" style={styles.hidden}>\n                <canvas className=\"canvas\" width={1000} height={1000}/>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} forcedWidth={1000} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        position: 'sticky',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        borderBottom: '1px solid #BBBBBB',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        width: 'auto',\n        backgroundColor: '#4c4c4c',\n        opacity: 1,\n        zIndex: 1,\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        zIndex: 0,\n        padding: '0 20px',\n        position: 'relative',\n        marginTop: '40px',\n    },\n    line: {\n        fontSize: '17px',\n        margin: '30px 0px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n\n    },\n    name: {\n        position: 'relative',\n        width: '60%',\n    },\n    select: {\n        fontSize: '17px',\n        height: '40px',\n        backgroundPosition: '95% center',\n        backgroundRepeat: 'no-repeat',\n        backgroundImage: `url(${dropDown})`,\n        backgroundColor: 'rgba(255,255,255,0.6)',\n        paddingLeft: '20px',\n        border: 'none',\n        borderRadius: '10px',\n        position: 'relative',\n        width: '40%',\n        textAlign: 'center',\n        WebkitAppearance: 'none',\n    },\n    hidden: {\n        width: '0px',\n        height: '0px',\n        overflow: 'hidden',\n        opacity: .01,\n    }\n\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n    \n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, {CSSProperties, useState, useEffect, Fragment} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML, {ScoreTimewise} from 'musicxml-interfaces';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport JSZip from 'jszip';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date_created: number,\n        date_opened: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string)=>{\n        setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) {}\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({type: 'set', val: {id: x.id, file_name: x.file_name, data: parsed}});\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n\n                // Update the accessed date for this song and move it to the top of the list\n                localStorage.setItem('recent_files', JSON.stringify([\n                    {...x, date_opened: new Date().getTime()} as recentFile,\n                    ...recentFiles.filter(y=>y.id!==x.id)\n                ]));\n            } catch(e){\n                // Writing to local storage may be disabled currently\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n    \n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.(?:musicxml|mxl)$/i, '');\n        let failedReads = 0;\n        let fail = ()=>{\n            failedReads++;\n            if(failedReads === 2){ //both reads failed\n                showError('An issue was encountered while reading the selected file.');\n            }\n        }\n        try {\n            let reader1 = new FileReader();\n            reader1.onload = function () {\n                try {\n                    let data = reader1.result;\n                    if(data === null){\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as compressed\n                    \n                    (async ()=>{\n                        try {\n                            let zip = await JSZip.loadAsync(data);\n                            let details = await zip.file('META-INF/container.xml').async(\"text\");\n                            let parser = new DOMParser();\n                            let detailsDOM = parser.parseFromString(details, \"application/xml\");\n                            let nodes = detailsDOM.getElementsByTagName('rootfile');\n                            let musicXMLPath = nodes[0].getAttribute('full-path')!;\n                            for(let i = nodes.length-1; i >= 0; i--){\n                                if(nodes[i].getAttribute('media-type') === 'application/vnd.recordare.musicxml+xml'){\n                                    musicXMLPath = nodes[i].getAttribute('full-path')!;\n                                }\n                            }\n                            let musicXMLData = await zip.file(musicXMLPath).async(\"text\");\n                            let parsed = MusicXML.parseScore(musicXMLData);\n                            if(parsed.measures === undefined){\n                                throw new Error('Invalid MusicXML format');\n                            }\n                            onUpload(fileName,parsed);\n                        } catch(e){\n                            fail();\n                            console.error(e);\n                        }\n                    })();\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader1.readAsArrayBuffer((e.target as any).files[0]);\n            let reader2 = new FileReader();\n            reader2.onload = function () {\n                try {\n                    let data = reader2.result;\n                    if(data === null){\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as uncompressed\n                    let parsed = MusicXML.parseScore(data as string);\n                    \n                    if(parsed.measures === undefined){\n                        throw new Error('Invalid MusicXML format');\n                    }\n                    console.log(parsed);\n                    \n                    onUpload(fileName,parsed);\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader2.readAsText((e.target as any).files[0]);\n\n        } catch (e) {\n            showError('An issue was encountered while reading the selected file.');\n            console.error(e);\n        }\n    };\n\n    const onUpload = (fileName: string, parsed: ScoreTimewise)=>{\n        let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n        // Set this song as the current work in the global context\n        setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n        // Fail silently if localStorage is disabled\n        try {\n            \n            // Set this song as the current work in localStorage\n            localStorage.setItem(id, JSON.stringify(parsed));\n            localStorage.setItem('current_file', id);\n\n            // Add this song to the recent songs list\n            localStorage.setItem('recent_files', JSON.stringify([\n                {file_name: fileName, date_created: new Date().getTime(), date_opened: new Date().getTime(), id} as recentFile,\n                ...recentFiles.filter(x=>x.file_name!==fileName)\n            ]));\n\n        } catch (e) {\n            console.error(e);\n        }\n\n        navigate('convert');\n    }\n\n    return (\n        <Frame header=\"SNapp\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n                <div style={{...styles.item, maxWidth: '720px'}}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{...styles.item, flex: '.2 0 auto'}} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{...styles.item, flex: '.35 0 auto'}} />\n                </> : <>\n                        <div style={{...styles.item, flex: '.36 0 auto'}} />\n                        <div style={{...styles.item, fontSize: '28px', fontWeight: 'bolder'}}>Recent Files</div>\n                        <div style={{...styles.item, flex: '.08 0 auto'}} />\n                        <div style={{...styles.item, ...styles.recentFiles}}>\n                            <div style={{...styles.recentFilesInner}}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div className=\"button-recent-file\" style={styles.recentFilesItem} onClick={() => {loadFile(x);}}>\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 100000 auto', fontWeight: 'bold'}}>\n                                            {x.file_name}\n                                        </div>\n                                        <div style={{...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto'}} />\n                                        <div style={{...styles.recentFilesItemInner, flex: '0 1 auto', fontSize: '22px'}}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date_created || (x as any).date /*migrate from x.date to x.date_created*/))}\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                            </div>\n                        </div>\n                        <div style={{...styles.item, flex: '.24 0 auto'}} />\n                    </>}\n                <div style={styles.item}>\n                    <span id=\"button-upload\" style={styles.link} onClick={() => {}}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Upload MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml,.mxl\" onChange={(e) => {uploadFile(e);}}></input>\n                    </span>\n                </div>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '750px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n}\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n}\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {Note, Score, Tie, TimeSignature, KeySignature} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState, spacingPreferenceOption, scalePreferenceOption} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    forcedWidth?: number,\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n}\n\nconst SNView: React.FC<Props> = ({xml, forcedWidth}) => {\n    console.log(xml)\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            navigate('/');\n            setImmediate(() => setDialogState(Dialog.close()));\n        }));\n    }\n    let showErrorRef = useRef(showError);\n\n    console.log('Score:', score);\n    useEffect(() => {\n        if (forcedWidth === undefined) {\n            let width: number = undefined!;\n            let callback = () => {\n                let newWidth = ref.current!.getBoundingClientRect().width;\n                if (width !== newWidth) {\n                    width = newWidth;\n                    setWidth(newWidth);\n                }\n            };\n            window.addEventListener(\"resize\", callback);\n            // let interval = setInterval(callback, 20);\n            callback();\n            return () => {\n                window.removeEventListener(\"resize\", callback);\n                // clearInterval(interval);\n            }\n        } else {\n            setWidth(forcedWidth);\n        }\n    }, [setWidth, forcedWidth]);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        try {\n            setScore(parse(xml));\n        } catch (e) {\n            showErrorRef.current('An issue was encountered while processing this file.');\n            console.error(e);\n        }\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        let devMode = false;\n\n        // fetch preference values\n        let {\n            noteDurationColor,\n            noteSymbolColor,\n            staffScale,\n            horizontalSpacing,\n            verticalSpacing,\n            noteScale,\n            naturalNoteShape,\n            sharpNoteShape,\n            flatNoteShape,\n            measuresPerRow,\n            accidentalType\n        } = preferences;\n\n        // Map preference strings to numeric values \n        let noteScaleMap: Record<scalePreferenceOption, number> = {\n            small: 15,\n            medium: 20,\n            large: 25\n        }\n        let staffScaleMap: Record<scalePreferenceOption, number> = {\n            small: 18,\n            medium: 25,\n            large: 32\n        };\n        let verticalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 10,\n            moderate: 30,\n            wide: 50\n        };\n        let horizontalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 20,\n            moderate: 40,\n            wide: 60\n        };\n\n        //general spacing\n        let noteSymbolSize = noteScaleMap[noteScale]; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = verticalSpacingMap[verticalSpacing]; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        // spacing between two clefs (aka grand staff distance)\n        let dynamicsSpace = 20;\n        let lyricsSpace = 20;\n        let staffPadding = 5;\n        let staffDistance = dynamicsSpace + lyricsSpace + 2 * staffPadding;\n\n        // annotation space for each clef\n        let fingeringSpace = 20;\n        let articulationSpace = 20;\n        let articulationPadding = 5;\n        let annotationSpace = fingeringSpace + articulationSpace + 2 * articulationPadding;\n\n        //horizontal spacing\n        let horizontalPadding = horizontalSpacingMap[horizontalSpacing]; //left/right padding\n        let staffLabelSpace = staffScaleMap[staffScale]; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        let staffLabels = ['𝒯', '𝄢'];\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n\n            // if note is flat, we need to bring it a line higher.\n            if (accidentalType === 'auto' && getNoteAccidental(note) < 0) line++;\n            else if (accidentalType === 'flat' && getNoteAccidental(note) !== 0) line++; // handle user override\n\n            return line;\n        };\n\n        //find the title and author\n        let title = '';\n        try {\n            title = xml.movementTitle;\n            title = xml.work.workTitle;\n        } catch (e) {}\n\n        let author = '';\n        try {\n            let credits = xml.credits.filter(x => x.creditWords !== undefined && x.creditWords.length > 0).map(x => x.creditWords);\n            credits.forEach(credit => {\n                credit.forEach(words => {\n                    if (Math.abs(words.words.length - 20) < Math.abs(author.length - 20)) {\n                        author = words.words;\n                    }\n                })\n            })\n        } catch (e) {}\n\n\n        //calculate lowest and highest note\n        let minNote = 128, maxNote = -1;\n        score.tracks.filter(track => track.trackTypes.includes('Instrument')).forEach(track => track.measures.forEach(measure =>\n            measure.forEach(note => {\n                minNote = Math.min(minNote, note.midi);\n                maxNote = Math.max(maxNote, note.midi);\n            })\n        ));\n        // TODO: get separate min and max notes for bass and treble clef.\n\n        //if there was an issue, abort\n        if (minNote >= 128 || minNote < 0 || maxNote >= 128 || maxNote < 0) {\n            console.log(minNote, maxNote);\n            throw new Error('An issue was detected while analyzing this work\\'s note range');\n        }\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine = getNoteLine(minNote);\n        let maxLine = getNoteLine(maxNote);\n\n        // find the closest colored line for minNote and minLine\n        while (minLine % 7 !== 0 && minLine % 7 !== 3) minLine--;\n        while (maxLine % 7 !== 0 && maxLine % 7 !== 3) maxLine++;\n\n        // widen staff range if it is too small\n        if (Math.abs(maxLine - minLine) <= 1) {\n            maxLine += (maxLine % 7 === 0) ? 3 : 4;\n            minLine -= (minLine % 7 === 0) ? 4 : 3;\n        }\n\n        let staffHeight = (maxLine - minLine) * noteSymbolSize / 2; //not including measure labels\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        // let measuresPerRow = Math.floor(availableMeasureSpace / measureWidth);\n        // if (measuresPerRow <= 0) {\n        //     throw new Error('Could not place a measure in the allowed space');\n        // }\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        //let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\n        // let beatsPerRow = beatsPerMeasure * measuresPerRow;\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        //calculate required height (vert padding + row height + row padding)\n        // let height = verticalPadding * 2 + rowNumber * (staffHeight + measureLabelSpace) + (rowNumber - 1) * rowPadding;\n\n        let getCurrentSignatures = (measureNumber: number): {currentTime: TimeSignature, currentKey: KeySignature} => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            let currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber);\n            let currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            // sometimes, signatures are defined on the second measure. Below lines handle such cases.\n            if (!currentTime) currentTime = score!.tracks[0].timeSignatures[0];\n            if (!currentKey) currentKey = score!.tracks[0].keySignatures[0];\n            return {currentTime, currentKey};\n        }\n\n        let measure = (x: number, y: number, measureNumber: number, type: 'treble' | 'bass') => {\n            // TODO: handle pick up measures\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let key = 0;\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine; j <= maxLine; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + staffHeight - (j - minLine) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                if (!track.trackTypes.includes('Instrument')) return; // we do not render notes for lyrics only track.\n                let notes = track.measures[measureNumber].filter(note => {\n                    // TODO: optimize this\n                    if (type === 'treble') return note.staff === 1; // staff 1 is treble\n                    else return note.staff !== 1; // other staffs are bass\n                });\n                notes.forEach((note, _idx) => {\n                    noteHeadSVG.push(noteHead(note, key++));\n                    let tieStart = note.attributes.ties.includes(Tie.Start);\n                    let tieStop = note.attributes.ties.includes(Tie.Stop);\n                    let isLastMeasure = ((measureNumber + 1) % measuresPerRow === 0); // whether current measure is the last measure of the row\n                    let isLastNote = note.time + note.duration >= currentTime.beats; // whether the note reaches the end of the measure\n                    let noteSpansRow = tieStart && isLastMeasure && isLastNote; // whether tied note spans next row\n                    noteTailSVG.push(noteTail(note, key++, tieStart, tieStop, noteSpansRow));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        }\n\n        let grandStaff = (i: number): JSX.Element => {\n            let staffSpaceHeight = (staffHeight + measureLabelSpace) + noteSymbolSize / 2 + annotationSpace;\n            let grandStaffHeight = staffSpaceHeight * 2 + staffDistance;\n\n            return (\n                <div className={`snview-row snview-row-${i + 1}`} key={i} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${grandStaffHeight}`}>\n                        {staff(i, 'treble')}\n                        {staff(i, 'bass')}\n                    </svg>\n                </div>\n            );\n        }\n\n        let staff = (i: number, type: 'treble' | 'bass'): JSX.Element => {\n            let staffSpaceHeight = (staffHeight + measureLabelSpace + annotationSpace) + noteSymbolSize / 2 ;\n            let yOffset = type === 'treble' ? 0 : staffSpaceHeight + staffDistance;\n            let staffName = type === 'treble' ? staffLabels[0] : staffLabels[1];\n            return <g id={`row${i}${type}`} key={type + i} transform={`translate(${horizontalPadding}, ${yOffset})`}>\n                {devMode ? <rect y={measureLabelSpace} width={staffLabelSpace} height={staffHeight} fill=\"#ffdddd\" /> : null}\n                {devMode ? <rect x={staffLabelSpace} y={measureLabelSpace} width={octaveLabelSpace} height={staffHeight} fill=\"#ffddff\" /> : null}\n                <text x={staffLabelSpace} y={measureLabelSpace + staffHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">{staffName}</text>\n                <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />\n\n                {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                    measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j, type)\n                )}\n            </g>\n        }\n\n\n        let noteTimeToPos = (noteTime: number) => ({\n            x: beatWidth * noteTime,\n            y: staffHeight + measureLabelSpace\n        });\n\n        // let beatsToPos = (beat: number) => {\n        //     let row = Math.floor(beat / beatsPerRow);\n        //     let measure = (beat - row * beatsPerRow) / beatsPerMeasure;\n        //     return {\n        //         row, measure,\n        //         ...rowMeasureToPos(row, measure)\n        //     };\n        // }\n        // let rowMeasureToPos = (row: number, measure: number) => ({\n        //     x: horizontalPadding + staffLabelSpace + octaveLabelSpace + measure * measureWidth,\n        //     y: verticalPadding + row * (staffHeight + measureLabelSpace + rowPadding) + staffHeight + measureLabelSpace\n        // });\n\n        let noteTail = (note: Note, i: number, tieStart: boolean, tieStop: boolean, noteSpansRow: boolean) => {\n            let key = 0;\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine;\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration);\n\n            // let pushBox = (x1: number, x2: number, y: number) => {\n            //     boxes.push(<rect key={key++} x={x1} y={y - (line + 1) * noteSymbolSize / 2} width={x2 - x1} height={noteSymbolSize} fill={colorPreferenceStyles[noteDurationColor]} fillOpacity={.5} />);\n            // }\n            // while (rowStart < rowEnd) {\n            //     //only executes rarely so it is faster to compute this value in the loop\n            //     pushBox(xStart, horizontalPadding + staffLabelSpace + octaveLabelSpace + measuresPerRow * measureWidth, yStart);\n            //     rowStart++;\n            //     measureStart = 0;\n            //     let {x, y} = rowMeasureToPos(rowStart, measureStart);\n            //     xStart = x;\n            //     yStart = y;\n            // }\n\n            let roundingSpace = Math.max(Math.min(noteSymbolSize, xEnd - xStart), 0);\n            let radiusStart = roundingSpace / 4;\n            let radiusEnd = roundingSpace / 2;\n            let pointedEnd = noteSpansRow;\n\n            if (tieStart) {\n                //if(!noteSpansRow){ //this check prevents pointed ends from extending past the end of the row\n                radiusEnd = 0;\n                //}\n            }\n            if (tieStop) {\n                radiusStart = 0;\n            }\n            boxes.push(\n                <path\n                    key={key++}\n                    d={`\n                        M${xStart + radiusStart} ${yStart - (line + 1) * noteSymbolSize / 2}\n                        H${xEnd - radiusEnd}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${radiusEnd} ${radiusEnd}\n                        ${pointedEnd ? `\n                            l${noteSymbolSize / 2 - radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                            l${-noteSymbolSize / 2 + radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                        `: `v${noteSymbolSize - 2 * radiusEnd}`}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${-radiusEnd} ${radiusEnd}\n                        H${xStart + radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${-radiusStart} ${-radiusStart}\n                        v${-noteSymbolSize + 2 * radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${radiusStart} ${-radiusStart}\n                        z\n                    `}\n                    fill={colorPreferenceStyles[noteDurationColor]}\n                    fillOpacity={0.5}\n                />\n            );\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        }\n\n        let noteHead = (note: Note, i: number) => {\n            if (note.attributes.ties.includes(Tie.Stop))\n                return null!;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine;\n\n            let {x, y} = noteTimeToPos(note.time);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = noteSymbolSize / 8;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let autoNoteShape = accidentalType === 'sharp' ? sharpNoteShape : flatNoteShape;\n            let shape = {\n                [Accidental.Natural]: naturalNoteShape,\n                [Accidental.Flat]: accidentalType === 'auto' ? flatNoteShape : autoNoteShape,\n                [Accidental.Sharp]: accidentalType === 'auto' ? sharpNoteShape : autoNoteShape,\n            }[accidental];\n\n            switch(shape){\n                case '●':\n                    return <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '◼':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▲':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▼':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '○':\n                    return <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                case '☐':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '△':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2 + strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3)*strokeWidth/2},${y + triHeight / 2 - strokeWidth/2} ${x - noteSymbolSize / 2 + Math.sqrt(3)*strokeWidth/2},${y + triHeight / 2 - strokeWidth/2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '▽':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2 - strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3)*strokeWidth/2},${y - triHeight / 2 + strokeWidth/2} ${x - noteSymbolSize / 2 + Math.sqrt(3)*strokeWidth/2},${y - triHeight / 2 + strokeWidth/2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '⊗':\n                    return (<g key={i}>\n                        <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                        <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n                case '⊠':\n                    return (<g key={i}>\n                        <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y - noteSymbolSize / 2 + strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y + noteSymbolSize / 2 - strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y + noteSymbolSize / 2 - strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y - noteSymbolSize / 2 + strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n            }\n\n\n            \n        }\n\n        // let devSvg = devMode ? (\n        //     <g id=\"devMode\">\n        //         {<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\" />}\n        //         {<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<rect x={horizontalPadding} y={verticalPadding} width={width - horizontalPadding * 2} height={height - verticalPadding * 2} fill=\"#ddffdd\" />}\n        //     </g>\n        // ) : null;\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => grandStaff(i));\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                {/*devSvg*/}\n                <div className={`snview-row snview-row-0`} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${180}`}>\n                        <text x={width / 2} y={50} fontSize={40} textAnchor=\"middle\" alignmentBaseline=\"hanging\">{title}</text>\n                        <text x={70} y={170} fontSize={25} textAnchor=\"start\">60 bpm</text>\n                        <text x={width - 70} y={170} fontSize={25} textAnchor=\"end\">{author}</text>\n                    </svg>\n                </div>\n                {svgRows}\n            </div>\n        );\n    } catch (e) {\n        console.error(e);\n        if (!dialogState.shown) {\n            showError('An issue was encountered while generating WYSIWYP output for the selected file.');\n        }\n        //console.error(e);\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import MusicXML from 'musicxml-interfaces';\nimport {Note, TimeSignature, KeySignature, Tracks, Score, Tie, Measure, Track, TrackType} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nconst isScorePart = (part: MusicXML.PartGroup | MusicXML.ScorePart): part is MusicXML.ScorePart => {\n    return part && part._class === 'ScorePart';\n};\n\n// get piano part name from xml\nconst getPianoPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    const pianoPart = xml.partList.find(part => isScorePart(part) && part.partName.partName.toLowerCase() === 'piano');\n    return pianoPart ? (pianoPart as MusicXML.ScorePart).id : undefined;\n    // if (!pianoPart) return undefined;\n    // const pianoPartId = (pianoPart as MusicXML.ScorePart).id;\n\n    // get the number of staves \n    // let numStaves: number | undefined;\n    // xml.measures.some(measure => measure.parts[pianoPartId].some(entry => numStaves = entry.staves)); // loop until entry.staves is defined\n    // if (numStaves === undefined) numStaves = 1; // default is 1\n    // return {pianoPartId, numStaves};\n};\n\nconst getLyricsPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    let lyricsPartId: string | undefined;\n    // loop until we find a part with some lyrics defined. \n    xml.measures.some(measure => {\n        return Object.keys(measure.parts).some(partName => {\n            let part = measure.parts[partName];\n            let partContainsLyrics = part.some(entry => entry.lyrics !== undefined);\n            lyricsPartId = partContainsLyrics ? partName : undefined;\n            return lyricsPartId !== undefined;\n        });\n    });\n    return lyricsPartId;\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let lyricsPartId = getLyricsPartID(xml);\n    let pianoPartId = getPianoPartID(xml);\n\n    // currently, SNApp renders piano and lyric parts. We store the ids of the tracks we have to parse below.\n    // let trackTypeMap: Partial<Record<string, TrackType>> = {\n    //     [pianoPartId]: 'Piano',\n    //     ...(lyricsPartId && {[lyricsPartId]: 'Lyrics'}) // conditionally assign lyrics part\n    // }\n\n    let currentBeatType = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: Measure[],\n        }\n    } = {};\n\n    /** \n     * Multitrack Handling Logic\n     * \n     * We parse:\n     *      1) just the instrument part from a two part work for instrument and vocal\n     *      2) just the piano part from a work with multiple instrument parts\n     *      3) just one instrument part from a work with multiple instruments and none of them are piano\n     */\n\n    // parts that we want to parse. We may add more ids here if we decide to render more instruments parts.\n    let trackIDsToParse: string[] = [];\n\n    let instrumentId = pianoPartId !== undefined ? pianoPartId : 'P1';\n    trackIDsToParse.push(instrumentId);\n    if (lyricsPartId !== undefined && !trackIDsToParse.includes(lyricsPartId)) {\n        trackIDsToParse.push(lyricsPartId) \n    }\n    // console.log(`lyrics partId: ${lyricsPartId}, instrument partId: ${instrumentId}`);\n\n    xml.measures.forEach((measure, measureNumber) => {\n        trackIDsToParse.forEach(partName => {\n            if (measure.parts[partName] === undefined) return; // if part has not started yet, skip this measure.\n\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length)\n                };\n            }\n            let part = parts[partName];\n            let notes: Note[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n                            if (entry.pitch !== undefined) {\n                                let entryTies = entry.ties as {type: number}[];\n                                let staffNumber = entry.staff ? entry.staff : 1;\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    staff: staffNumber,\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : []\n                                    }\n                                });\n                            }\n                            part.measures[measureNumber] = notes;\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        break;\n                    case 'Sound':\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(partId => {\n        let trackTypes: TrackType[] = []\n        if (partId === lyricsPartId) trackTypes.push('Lyrics');\n        if (partId === instrumentId) trackTypes.push('Instrument');\n\n        return {\n            measures: parts[partId].measures,\n            timeSignatures: parts[partId].timeSignatures,\n            keySignatures: parts[partId].keySignatures,\n            trackTypes: trackTypes\n        } as Track;\n    });\n\n    // TODO: handle grace note \n    // handle unprovided signatures\n    tracks.forEach(track => {\n        // add default values for key signatures if it is not provided.\n        if (track.keySignatures.length === 0) track.keySignatures.push({measure: 0, fifths: 0});\n\n        if (track.timeSignatures.length === 0) {\n            if (track.measures.length === 1) {\n                // case 1: all notes grouped into a single measure\n                let measure = track.measures[0];\n                let newMeasures: Note[][] = Array(Math.ceil(measure.length / 4)).fill([]).map((_, index) => index * 4).map(start => measure.slice(start, start + 4)); // divide notes into chunks of four\n                newMeasures.forEach((measure, idx) => measure.forEach(note => note.time -= 4 * idx)); // shift note start time appropriately\n                track.timeSignatures.push({measure: newMeasures.length, beats: 4, beatTypes: 4})\n                track.measures = newMeasures;\n            } else {\n                // case 2: time signature is not provided at all\n                let currentMeasureLength = 4; // start with assuming 4/4 time signature.\n                track.measures.forEach((measure, measureNumber) => {\n                    let lastNote = measure[measure.length - 1];\n                    let measureLength = Math.max(lastNote.time + lastNote.duration);\n                    if (currentMeasureLength !== measureLength) {\n                        track.timeSignatures.push({measure: measureNumber, beats: measureLength, beatTypes: 4});\n                        currentMeasureLength = measureLength;\n                    }\n                });\n            }\n        }\n    });\n    return {tracks}\n};","module.exports = __webpack_public_path__ + \"static/media/dropDown.2ec80983.svg\";","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";"],"sourceRoot":""}