{"version":3,"sources":["contexts/Dialog.tsx","parser/Types.tsx","components/Frame.tsx","components/Expandable.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx","contexts/Preferences.tsx","components/SNView.tsx","util/Util.tsx","util/Dialog.tsx","parser/MusicXML.tsx","images/upload.svg"],"names":["initialState","shown","DialogContext","createContext","undefined","DialogStateProvider","_ref","children","reducer","useRef","state","action","type","data","val","_useReducer","useReducer","current","_useReducer2","Object","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Provider","value","useDialogState","useContext","__webpack_require__","d","__webpack_exports__","isDynamics","Tie","dynamicsArray","str","some","dynamic","styles","appContainer","overflow","header","fontStyle","fontWeight","fontSize","textAlign","letterSpacing","left","height","lineHeight","transform","backgroundColor","minWidth","position","page","top","sideBar","right","Frame","sideMenu","showSideMenu","react_default","style","id","objectSpread","className","concat","group","paddingLeft","title","marginTop","alignItems","display","width","marginBottom","childrenWrapper","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","ref","downArrow","xmlns","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","points","rightArrow","onClick","s","Math","ceil","clientHeight","CurrentFileContext","CurrentFileStateProvider","useCurrentFileState","leftSide","float","svg","marginRight","color","marginLeft","cursor","subHeader","SNView","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","padding","opacity","sideBarContent","line","name","hidden","Convert","show","setShow","_usePreferencesState","usePreferencesState","_usePreferencesState2","preferences","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","_useState3","_useState4","showPreferencesButton","setShowPreferencesButton","useEffect","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","wrap","_context","prev","next","localStorage","getItem","JSON","parse","filter","x","e","console","log","navigate","stop","sidebar","file","Blob","stringify","saveAs","autoBom","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","error","readAsText","files","importFile","Expandable","measuresPerRow","measuresPerRowOptions","map","key","clefSymbols","clefPreferenceOptions","staffScale","scalePreferenceOptions","horizontalSpacing","spacingPreferenceOptions","verticalSpacing","accidentalType","accidentalTypeOptions","noteScale","naturalNoteShape","noteHeadPreferenceOptions","sharpNoteShape","flatNoteShape","noteSymbolColor","colorPreferenceOptions","noteDurationColor","components_Frame","strokeWidth","strokeLinecap","strokeLinejoin","margin","document","getElementById","canvas","getElementsByClassName","pdf","jsPDF","rows","nextRowY","i","length","row","_split$map","getElementsByTagName","getAttribute","split","parseInt","_split$map2","w","h","canvasRowHeight","pdfRowHeight","addPage","ctx","getContext","fillStyle","fillRect","canvg","innerHTML","ignoreClear","addImage","save","openPDF","padding-right","Fragment","cx","cy","r","xml","forcedWidth","body","NotFound","GlobalStateProvider","PreferencesStateProvider","forEach","bg","frame","border","borderRadius","userSelect","headerRight","maxHeight","overflowY","buttons","bottom","Dialog","_useDialogState","dialog","active","startX","startY","mouseX","mouseY","y","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","contents","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingRight","overflowX","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","link","deleteAll","icon","Menu","setRecentFiles","installHandle","setInstallHandle","window","addEventListener","preventDefault","setDialogState","showError","recent","loadFile","setItem","date_opened","Date","getTime","toConsumableArray","deleteFile","newRecentFiles","deleteSinglePrompt","deleteAllFiles","onUpload","fileName","Array","from","floor","random","toString","join","date_created","react","date","getMonth","getDate","getFullYear","paddingTop","x1","y1","x2","y2","src","alt","replace","failedReads","fail","reader1","Error","zip","details","parser","detailsDOM","nodes","musicXMLPath","musicXMLData","JSZip","loadAsync","sent","async","DOMParser","parseFromString","MusicXML","parseScore","measures","t0","readAsArrayBuffer","reader2","uploadFile","prompt","userChoice","then","outcome","Router","contexts_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","global_Global","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_Router","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","keys","PreferencesContext","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","Accidental","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setWidth","score","setScore","_useDialogState2","dialogState","setImmediate","showErrorRef","callback","newWidth","getBoundingClientRect","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3___default","noteSymbolSize","small","medium","large","rowPadding","narrow","moderate","wide","horizontalPadding","staffLabelSpace","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","staffLabels","octaveLines","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","movementTitle","work","workTitle","author","credits","creditWords","credit","words","abs","minNote","treble","bass","maxNote","track","trackTypes","includes","measure","staff","min","midi","max","staffTypes","bassClefIsEmpty","minLine","maxLine","staffHeights","beatsPerMeasure","measureWidth","measureNumber","reduce","accum","rowNumber","staffHeight","svgHeight","staffName","textAnchor","dominantBaseline","measureLabelSpace","range","j","measureNumberToPos","staffBreak","lyrics","lyricsTrack","find","notesAtRow","slice","rowIsEmpty","every","textSize","notesAtMeasure","attributes","noteTimeToPos","time","push","pedal","pedals","instrumentTrack","directionsAtRow","directions","directionsAreEmpty","directionsAtMeasure","direction","pedalText","_getCurrentSignatures","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","reverse","currentTime","timeSignature","currentKey","keySignature","getCurrentSignatures","measureSVG","octaveLine","lineY","tickX","tickSize","noteHeadSVG","noteTailSVG","_idx","noteHead","tieStart","ties","Start","tieStop","Stop","isLastMeasure","isLastNote","duration","noteSpansRow","noteTail","noteTime","boxes","_noteTimeToPos","xStart","yStart","xEnd","roundingSpace","radiusStart","radiusEnd","pointedEnd","fillOpacity","_Accidental$Natural$A","accidental","_noteTimeToPos3","triHeight","sqrt","crossCircleWidth","autoNoteShape","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","svgRows","grandStaff","paddingBottom","alignmentBaseline","tempo","res","close","showMessage","buttonText","buttonAction","space","showPrompt","buttonText1","buttonAction1","buttonText2","buttonAction2","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_Types__WEBPACK_IMPORTED_MODULE_0__","pitchToMidi","pitch","step","c","f","g","b","toLowerCase","octave","alter","round","lyricsPartId","parts","partName","partContainsLyrics","entry","getLyricsPartID","pianoPartId","pianoPart","partList","part","_class","isScorePart","getPianoPartID","currentBeatType","currentBeats","trackIDsToParse","instrumentId","divisions","progress","notes","divisionsToNoteLength","measureEnd","chord","rest","entrySlur","lyricsText","entryTies","staffNumber","notations","notation","slurs","slur","lyricParts","tie","times","beatTypes","hasOwnProperty","sound","directionTypes","dynamics","offset","partId","newMeasures","_","index","start","idx","currentMeasureLength","lastNote","measureLength","module","exports","p"],"mappings":"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","file":"static/js/main.2fd78fba.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","/**\n * This file contains types shared across all parsers.\n */\n\n// Track and staff types\nexport type TrackType = 'Instrument' | 'Lyrics'; // part types that app currently handles\nexport type StaffType = 'treble' | 'bass';\n\n// Directions \nconst dynamicsArray = ['f', 'ff', 'fff', 'ffff', 'ffff', 'ffffff', 'fp', 'fz', 'mf', 'mp', 'p', 'pp', 'ppp', 'pppp', 'ppppp', 'pppppp', 'rf', 'rfz', 'sf', 'sffz', 'sfp', 'sfpp', 'sfz'] as const;\nexport type Dynamics = (typeof dynamicsArray)[number];\nexport let isDynamics = ((str: string): str is Dynamics => dynamicsArray.some(dynamic => dynamic === str));\n\nexport type Pedal = 'pedalStart' | 'pedalEnd';\n\nexport type Direction = {\n    dynamics?: Dynamics,\n    pedal?: Pedal,\n    time: number\n}; // Directions are used for expression marks that are not clearly tied to a particular note.\nexport type Directions = Direction[];\n\n// Note attributes\nexport enum Tie {\n    Start = \"START\",\n    Stop = \"STOP\",\n};\n\nexport type Slur = 'start' | 'end';\n\n// Note\nexport type Note = {\n    time: number,\n    duration: number,\n    midi: number,\n    staff: StaffType,\n    attributes: {\n        ties: Tie[], \n        slur?: Slur,\n        lyrics?: string\n    }\n};\nexport type Notes = Note[]; // note: each part should have 1 staff or 2 staves (for piano)\n\n// Signatures\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Track = {\n    measures: Notes[],\n    directions: Directions[]\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[],\n    trackTypes: TrackType[] // we use an array here because a track might contain both lyrics and piano part.\n};\n\nexport type Tracks = Track[];\n\nexport type Score = {\n    tracks: Tracks,\n    tempo: number\n};\n","import React, {CSSProperties} from \"react\";\n\ntype Props = {\n    header?: string;\n    fontSize?: number;\n    sideMenu?: React.ReactNode;\n    showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n    header,\n    fontSize,\n    sideMenu,\n    showSideMenu,\n    children\n}) => {\n    return (\n        <div style={styles.appContainer}>\n\n            {header === undefined ? null : <div id=\"header\" style={{...styles.header, fontSize: fontSize || 40}}>\n                {header}\n            </div>}\n\n            <div style={{...styles.page, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>{children}</div>\n            <div className={`animated ${showSideMenu ? 'open' : 'close'}`}\n                style={{...styles.sideBar, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>\n                {sideMenu}\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    appContainer: {\n        overflow: \"hidden\",\n    },\n    header: {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fontSize: \"42px\",\n        textAlign: \"center\",\n        letterSpacing: \"0.05em\",\n        left: \"50%\",\n        height: \"80px\",\n        lineHeight: \"80px\",\n        transform: \"translate(-50%,0px)\",\n        backgroundColor: \"#31B7D6\",\n        minWidth: \"600px\",\n        position: \"absolute\",\n        overflow: 'hidden',\n    },\n    page: {\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        overflow: \"auto\",\n    },\n    sideBar: {\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        left: \"auto\",\n        right: \"0px\",\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {CSSProperties, useState, useRef} from \"react\";\n\ntype Props = {\n    title: string;\n};\n\nconst Frame: React.FC<Props> = ({\n    title,\n    children\n}) => {\n    let [expanded, setExpanded] = useState(false);\n    let ref = useRef(undefined! as HTMLDivElement);\n    let downArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>;\n    let rightArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>;\n    return (\n        <div style={styles.group}>\n            <div style={styles.title} onClick={() => {setExpanded(s => !s)}}>\n                {expanded ? downArrow : rightArrow} {title}\n            </div>\n            <div className={`animated-height`} style={{...styles.children, height: `${expanded ? Math.ceil(ref === undefined ? 0 : ref.current.clientHeight + 30) : 0}px`}}>\n                <div ref={ref} style={styles.childrenWrapper}>\n                    {children}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst styleMap = {\n    group: {\n        paddingLeft: '10px',\n        height: 'auto',\n        position: 'relative',\n    },\n    title: {\n        position: 'relative',\n        height: '40px',\n        marginTop: '30px',\n        alignItems: 'baseline',\n        display: 'flex',\n        width: '100%',\n        lineHeight: '40px',\n        fontSize: '23px',\n    },\n    children: {\n        position: 'relative',\n        paddingLeft: '15px',\n        marginBottom: '30px',\n        overflow: 'hidden',\n    },\n    childrenWrapper: {\n        position: 'relative',\n        height: 'auto',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport Expandable from '../components/Expandable';\nimport {saveAs} from 'file-saver';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions,\n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions, accidentalTypeOptions, clefPreferenceOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\n// import {useDialogState} from '../contexts/Dialog';\n// import * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    // let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    // let showError = (error: string)=>{\n    //     setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n    //         setDialogState(Dialog.close());\n    //     }));\n    // }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n\n            let margin = 5;\n            let padding = 5;\n\n            let hidden = document.getElementById('hidden-pdf-generation') as HTMLDivElement;\n            let canvas = hidden.getElementsByClassName('canvas')[0] as HTMLCanvasElement;\n\n            let pdf = new jsPDF(); //210 x 297 mm (A4 paper dimensions)\n            let width = 210;\n            let height = 297;\n\n            // should change with preferences\n            margin = width * margin / 100;\n            padding = width * padding / 100;\n\n\n            let rows = hidden.getElementsByClassName('snview-row');\n\n            let nextRowY = margin;\n            for (let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n\n                let [, , w, h] = row.getElementsByTagName('svg')[0].getAttribute('viewBox')!.split(' ').map(x => parseInt(x));\n                let canvasRowHeight = Math.ceil(1000 * h / w);\n                let pdfRowHeight = Math.ceil((width - margin * 2) * h / w);\n\n                if (nextRowY + pdfRowHeight > height - margin) {\n                    pdf.addPage();\n                    nextRowY = margin;\n                }\n\n                canvas.height = canvasRowHeight;\n                let ctx = canvas.getContext(\"2d\")!;\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = \"black\";\n                canvg(canvas, row.innerHTML, {ignoreClear: true});\n                pdf.addImage(canvas, 'JPEG', margin, nextRowY, width - margin * 2, pdfRowHeight);\n\n                nextRowY += pdfRowHeight + padding;\n            }\n\n\n\n            // pdf.rect(0,0,200,287,'F');\n            // pdf.addPage();\n            // pdf.rect(0,10,200,287,'F');\n\n            //(pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp', {\n            autoBom: false,\n        });\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (\n        <div style={styles.sideBar}>\n            <div style={styles.sideBarTop}>\n                <div id=\"export\" title=\"Click to save your preferences\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                    Save\n                </div>\n                <div id=\"import\" style={styles.sideBarTopOptions}>\n                    Open\n                <input style={styles.fileInput} type=\"file\" title=\"Click to load your preferences\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n                </div>\n                <div id=\"close\" style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                    Close ✕\n                </div>\n            </div>\n\n            <div style={styles.sideBarContent}>\n\n            <Expandable title=\"Staff Appearance\">\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Measures per Row</div>\n                    <select value={preferences.measuresPerRow} onChange={\n                        (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                    }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Symbols</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.clefSymbols} onChange={\n                        (e) => {setPreferences({type: 'set', val: {clefSymbols: e.target.value as any}});}\n                    }>{clefPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.staffScale} onChange={\n                        (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                    }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Margin Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.horizontalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Staff Spacing Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.verticalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                </Expandable>\n\n                <Expandable title=\"Note Appearance\">\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Accidental Type</div>\n                        <select value={preferences.accidentalType} onChange={\n                            (e) => {setPreferences({type: 'set', val: {accidentalType: e.target.value as any}});}\n                        }>{accidentalTypeOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Size</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    \n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Notehead Color</div>\n                        <select value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Duration Color</div>\n                        <select value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    \n                </Expandable>\n\n            </div>\n\n        </div>)\n\n    return (\n        <Frame showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div id=\"home\" style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    SNapp Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div id=\"preference\" style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView} onClick={() => {setShow(false);}}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n            <div id=\"hidden-pdf-generation\" style={styles.hidden}>\n                <canvas className=\"canvas\" width={1000} height={1000} />\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} forcedWidth={1000} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottom: 'solid 1px #bbb',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        position: 'absolute',\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    line: {\n        marginTop: '30px',\n        marginBottom: '30px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n        width: '100%'\n    },\n    name: {\n        position: 'relative',\n        width: '50%',\n        display: 'inline-block'\n    },\n    hidden: {\n        width: '0px',\n        height: '0px',\n        overflow: 'hidden',\n        opacity: .01,\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n    \n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, { CSSProperties, useState, useEffect, Fragment } from 'react';\nimport { RouteComponentProps, navigate } from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML, { ScoreTimewise } from 'musicxml-interfaces';\nimport { useCurrentFileState } from '../contexts/CurrentFile';\nimport { useDialogState } from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport JSZip from 'jszip';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date_created: number,\n        date_opened: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n    let [installHandle, setInstallHandle] = useState<{\n        prompt: ()=>void,\n        userChoice: Promise<{outcome: 'accepted'|'rejected'}>\n    } | undefined>(undefined);\n    useEffect(()=>{\n        window.addEventListener('beforeinstallprompt', (e) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            setInstallHandle(e as any);\n        });\n    },[]);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    let deleteAllPrompt = () => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete all files?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            setRecentFiles([]);\n            localStorage.setItem('recent_files', JSON.stringify([]));\n            setDialogState(Dialog.close());\n        }));\n    }\n    let deleteSinglePrompt = (x: recentFile) => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete this file?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            setRecentFiles(newRecentFiles);\n            localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) { }\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({ type: 'set', val: { id: x.id, file_name: x.file_name, data: parsed } });\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n\n                // Update the accessed date for this song and move it to the top of the list\n                localStorage.setItem('recent_files', JSON.stringify([\n                    { ...x, date_opened: new Date().getTime() } as recentFile,\n                    ...recentFiles.filter(y => y.id !== x.id)\n                ]));\n            } catch (e) {\n                // Writing to local storage may be disabled currently\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteFile = (x: recentFile) => {\n        try {\n            deleteSinglePrompt(x);\n            // let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            // setRecentFiles(newRecentFiles);\n            // localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n        } catch (e) {\n            showError('An issue was encountered while deleting this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteAllFiles = () => {\n        try {\n            deleteAllPrompt();\n        } catch (e) {\n            showError('An issue was encountered while deleting all file(s).');\n            console.error(e);\n        }\n    }\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.(?:musicxml|mxl|xml)$/i, '');\n        let failedReads = 0;\n        let fail = () => {\n            failedReads++;\n            if (failedReads === 2) { //both reads failed\n                showError('An issue was encountered while reading the selected file.');\n            }\n        }\n        try {\n            let reader1 = new FileReader();\n            reader1.onload = function () {\n                try {\n                    let data = reader1.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as compressed\n\n                    (async () => {\n                        try {\n                            let zip = await JSZip.loadAsync(data);\n                            let details = await zip.file('META-INF/container.xml').async(\"text\");\n                            let parser = new DOMParser();\n                            let detailsDOM = parser.parseFromString(details, \"application/xml\");\n                            let nodes = detailsDOM.getElementsByTagName('rootfile');\n                            let musicXMLPath = nodes[0].getAttribute('full-path')!;\n                            for (let i = nodes.length - 1; i >= 0; i--) {\n                                if (nodes[i].getAttribute('media-type') === 'application/vnd.recordare.musicxml+xml') {\n                                    musicXMLPath = nodes[i].getAttribute('full-path')!;\n                                }\n                            }\n                            let musicXMLData = await zip.file(musicXMLPath).async(\"text\");\n                            let parsed = MusicXML.parseScore(musicXMLData);\n                            if (parsed.measures === undefined) {\n                                throw new Error('Invalid MusicXML format');\n                            }\n                            onUpload(fileName, parsed);\n                        } catch (e) {\n                            fail();\n                            console.error(e);\n                        }\n                    })();\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader1.readAsArrayBuffer((e.target as any).files[0]);\n            let reader2 = new FileReader();\n            reader2.onload = function () {\n                try {\n                    let data = reader2.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as uncompressed\n                    let parsed = MusicXML.parseScore(data as string);\n\n                    if (parsed.measures === undefined) {\n                        throw new Error('Invalid MusicXML format');\n                    }\n                    console.log(parsed);\n\n                    onUpload(fileName, parsed);\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader2.readAsText((e.target as any).files[0]);\n\n\n\n\n\n            // let reader = new FileReader();\n            // reader.onload = function () {\n            //     try {\n            //         let data = reader.result;\n            //         let parsed: ScoreTimewise;\n            //         if(data === null){\n            //             throw new Error('Failed to read file - null');\n            //         }\n            //         try {\n            //             //try to interpret this file as uncompressed\n            //             parsed = MusicXML.parseScore(data.toString());\n            //             console.log(data.toString());\n            //             console.log(parsed);\n            //         } catch(e){\n\n            //             throw new Error('...');\n            //         }\n\n            //         let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n            //         // Set this song as the current work in the global context\n            //         setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n            //         // Fail silently if localStorage is disabled\n            //         try {\n\n            //             // Set this song as the current work in localStorage\n            //             localStorage.setItem(id, JSON.stringify(parsed));\n            //             localStorage.setItem('current_file', id);\n\n            //             // Add this song to the recent songs list\n            //             let newRecentFiles = recentFiles.map(x => x);\n\n            //             for (let i = 0; i < newRecentFiles.length; i++) {\n            //                 if (newRecentFiles[i]['file_name'] === fileName) {\n            //                     newRecentFiles.splice(i, 1);\n            //                 }\n            //             }\n\n            //             newRecentFiles.unshift({file_name: fileName, date: new Date().getTime(), id});\n            //             localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n\n            //         } catch (e) {\n            //             console.error(e);\n            //         }\n\n            //         navigate('convert');\n            //     } catch (e) {\n            //         showError('An issue was encountered while reading the selected file.');\n            //         console.error(e);\n            //     }\n            // };\n            // reader.readAsArrayBuffer((e.target as any).files[0]);\n        } catch (e) {\n            showError('An issue was encountered while reading the selected file.');\n            console.error(e);\n        }\n    };\n\n    const onUpload = (fileName: string, parsed: ScoreTimewise) => {\n        let id = `file_${Array.from({ length: 16 }, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n        // Set this song as the current work in the global context\n        setCurrentFile({ type: 'set', val: { id, file_name: fileName, data: parsed } });\n\n        // Fail silently if localStorage is disabled\n        try {\n\n            // Set this song as the current work in localStorage\n            localStorage.setItem(id, JSON.stringify(parsed));\n            localStorage.setItem('current_file', id);\n\n            // Add this song to the recent songs list\n            localStorage.setItem('recent_files', JSON.stringify([\n                { file_name: fileName, date_created: new Date().getTime(), date_opened: new Date().getTime(), id } as recentFile,\n                ...recentFiles.filter(x => x.file_name !== fileName)\n            ]));\n\n        } catch (e) {\n            console.error(e);\n        }\n\n        navigate('convert');\n    }\n\n    return (\n        <Frame header=\"SNapp -&nbsp;Simplified&nbsp;Notation&nbsp;App&nbsp;for&nbsp;Sheet&nbsp;Music\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n                <div style={{ ...styles.item, maxWidth: '720px' }}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{ ...styles.item, flex: '.2 0 auto' }} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{ ...styles.item, flex: '.35 0 auto' }} />\n                </> : <>\n                        <div style={{ ...styles.item, flex: '.36 0 auto' }} />\n                        <div style={{ ...styles.item, fontSize: '28px', fontWeight: 'bolder' }}>Recent Files</div>\n                        <div style={{ ...styles.item, flex: '.08 0 auto' }} />\n                        <div style={{ ...styles.item, ...styles.recentFiles }}>\n                            <div style={{ ...styles.recentFilesInner }}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div className=\"button-recent-file\" style={styles.recentFilesItem}>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 1 auto', fontWeight: 'bold' }}>\n                                            {x.file_name}\n                                        </div>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto' }} />\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 100000 auto', fontSize: '22px' }}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date_created || (x as any).date /*migrate from x.date to x.date_created*/))}\n                                        </div>\n                                        <div onClick={() => { deleteFile(x); }} style={{ ...styles.recentFilesItemInner, color: 'gray', width: '35px' }} >\n                                            <svg style={{ paddingTop: '9px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                                <div onClick={() => { deleteAllFiles(); }} style={styles.deleteAll}>Delete All Files</div>\n                            </div>\n                        </div>\n                        <div style={{ ...styles.item, flex: '.24 0 auto' }} />\n                    </>}\n                <div style={styles.item}>\n                    <span id=\"button-upload\" style={styles.link}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Open MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml,.mxl,.xml\" onChange={(e) => { uploadFile(e); }}></input>\n                    </span>\n                </div>\n                {installHandle===undefined?null:<>\n                    <div style={{ ...styles.item, flex: '.5 0 auto' }} />\n                    <div style={{ ...styles.item, maxWidth: '720px' }}>\n                        Click the button below to add SNapp to your device's home screen.\n                    </div>\n                    <div style={{ ...styles.item, flex: '.07 0 auto' }} />\n                    <div style={styles.item}>\n                        <span id=\"button-upload\" style={styles.link} onClick={() => {\n                            installHandle!.prompt();\n                            installHandle!.userChoice.then(result=>{\n                                if (result.outcome === 'accepted') {\n                                    setInstallHandle(undefined);\n                                }\n                            });\n                        }}>\n                            Add to Home Screen\n                        </span>\n                    </div>\n                </>}\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '750px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    deleteAll: {\n        position: 'relative',\n        height: '40px',\n        width: '200px',\n        fontSize: '22px',\n        lineHeight: '40px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'pointer',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = ['narrow', 'moderate', 'wide'] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"●\", \"◼\", \"▲\", \"▼\", \"○\", \"☐\", \"△\", \"▽\", \"⊗\", \"⊠\"] as const; // Previous symbols: ⨂, □\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const clefPreferenceOptions = [\"WYSIWYP\",\"Traditional\"] as const;\nexport type clefPreferenceOptions = (typeof clefPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport const accidentalTypeOptions = ['auto', 'sharp', 'flat'] as const;\nexport type accidentalTypeOption = (typeof accidentalTypeOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    clefSymbols: clefPreferenceOptions;\n    measuresPerRow: measuresPerRowOption;\n    accidentalType: accidentalTypeOption\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 'moderate',\n    verticalSpacing: 'moderate',\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    clefSymbols: 'WYSIWYP',\n    measuresPerRow: 4,\n    accidentalType: 'auto'\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {Note, Score, Tie, TimeSignature, KeySignature, StaffType} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState, spacingPreferenceOption, scalePreferenceOption} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    forcedWidth?: number,\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n};\n\nconst SNView: React.FC<Props> = ({xml, forcedWidth}) => {\n    console.log(xml)\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            navigate('/');\n            setImmediate(() => setDialogState(Dialog.close()));\n        }));\n    }\n    let showErrorRef = useRef(showError);\n\n    console.log('Score:', score);\n    useEffect(() => {\n        if (forcedWidth === undefined) {\n            let width: number = undefined!;\n            let callback = () => {\n                let newWidth = ref.current!.getBoundingClientRect().width;\n                if (width !== newWidth) {\n                    width = newWidth;\n                    setWidth(newWidth);\n                }\n            };\n            window.addEventListener(\"resize\", callback);\n            // let interval = setInterval(callback, 20);\n            callback();\n            return () => {\n                window.removeEventListener(\"resize\", callback);\n                // clearInterval(interval);\n            }\n        } else {\n            setWidth(forcedWidth);\n        }\n    }, [setWidth, forcedWidth]);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        try {\n            setScore(parse(xml));\n        } catch (e) {\n            showErrorRef.current('An issue was encountered while processing this file.');\n            console.error(e);\n        }\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        let devMode = false;\n\n        // fetch preference values\n        let {\n            noteDurationColor,\n            noteSymbolColor,\n            staffScale,\n            horizontalSpacing,\n            verticalSpacing,\n            noteScale,\n            naturalNoteShape,\n            sharpNoteShape,\n            flatNoteShape,\n            measuresPerRow,\n            accidentalType\n        } = preferences;\n\n        // Map preference strings to numeric values \n        let noteScaleMap: Record<scalePreferenceOption, number> = {\n            small: 15,\n            medium: 20,\n            large: 25\n        }\n        let staffScaleMap: Record<scalePreferenceOption, number> = {\n            small: 18,\n            medium: 25,\n            large: 32\n        };\n        let verticalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 10,\n            moderate: 30,\n            wide: 50\n        };\n        let horizontalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 20,\n            moderate: 40,\n            wide: 60\n        };\n\n        //general spacing\n        let noteSymbolSize = noteScaleMap[noteScale]; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = verticalSpacingMap[verticalSpacing]; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        //horizontal spacing\n        let horizontalPadding = horizontalSpacingMap[horizontalSpacing]; //left/right padding\n        let staffLabelSpace = staffScaleMap[staffScale]; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        let staffLabels = preferences.clefSymbols==='WYSIWYP'?['𝒯', 'ℬ']:['𝄞', '𝄢']; //𝄢\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n\n            // if note is flat, we need to bring it a line higher.\n            if (accidentalType === 'auto' && getNoteAccidental(note) < 0) line++;\n            else if (accidentalType === 'flat' && getNoteAccidental(note) !== 0) line++; // handle user override\n\n            return line;\n        };\n\n        //find the title and author\n        let title = '';\n        try {\n            title = xml.movementTitle;\n            title = xml.work.workTitle;\n        } catch (e) {}\n\n        let author = '';\n        try {\n            let credits = xml.credits.filter(x => x.creditWords !== undefined && x.creditWords.length > 0).map(x => x.creditWords);\n            credits.forEach(credit => {\n                credit.forEach(words => {\n                    if (Math.abs(words.words.length - 20) < Math.abs(author.length - 20)) {\n                        author = words.words;\n                    }\n                });\n            });\n        } catch (e) {}\n\n        let minNote: Record<StaffType, number> = {\n            treble: 128,\n            bass: 128\n        };\n\n        let maxNote: Record<StaffType, number> = {\n            treble: -1,\n            bass: -1\n        };\n\n        //calculate lowest and highest note\n        let instrumentTrack = score.tracks.filter(track => track.trackTypes.includes('Instrument'))[0];\n        instrumentTrack.measures.forEach(measure => {\n            measure.forEach(note => {\n                minNote[note.staff] = Math.min(minNote[note.staff], note.midi);\n                maxNote[note.staff] = Math.max(maxNote[note.staff], note.midi);\n            });\n        });\n\n        let staffTypes: StaffType[] = ['treble', 'bass'];\n        //if there was an issue, abort\n\n        // if bass clef is empty, then we create an empty clef\n        let bassClefIsEmpty = false;\n        if (minNote.bass === 128 && maxNote.bass === -1) {\n            bassClefIsEmpty = true;\n            minNote.bass = 48;\n            maxNote.bass = 60;\n        }\n\n        staffTypes.forEach(staff => {\n            if (minNote[staff] >= 128 || minNote[staff] < 0 || maxNote[staff] >= 128 || maxNote[staff] < 0) {\n                console.log(minNote[staff], maxNote[staff]);\n                throw new Error('An issue was detected while analyzing this work\\'s note range');\n            }\n        });\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine: Record<StaffType, number> = {\n            treble: getNoteLine(minNote.treble),\n            bass: getNoteLine(minNote.bass)\n        }\n        let maxLine: Record<StaffType, number> = {\n            treble: getNoteLine(maxNote.treble),\n            bass: getNoteLine(maxNote.bass)\n        }\n        staffTypes.forEach(staff => {\n            // find the closest note line\n            while (minLine[staff] % 7 !== 0 && minLine[staff] % 7 !== 3) minLine[staff]--;\n            while (maxLine[staff] % 7 !== 0 && maxLine[staff] % 7 !== 3) maxLine[staff]++;\n\n            // widen staff range if it is too small\n            if (Math.abs(maxLine[staff] - minLine[staff]) <= 1) {\n                maxLine[staff] += (maxLine[staff] % 7 === 0) ? 3 : 4;\n                minLine[staff] -= (minLine[staff] % 7 === 0) ? 4 : 3;\n            }\n        });\n        let staffHeights: Record<StaffType, number> = {\n            treble: (maxLine.treble - minLine.treble) * noteSymbolSize / 2,\n            bass: (maxLine.bass - minLine.bass) * noteSymbolSize / 2\n        }\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        let getCurrentSignatures = (measureNumber: number): {currentTime: TimeSignature, currentKey: KeySignature} => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            let currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber);\n            let currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            // sometimes, signatures are defined on the second measure. Below lines handle such cases.\n            if (!currentTime) currentTime = score!.tracks[0].timeSignatures[0];\n            if (!currentKey) currentKey = score!.tracks[0].keySignatures[0];\n            return {currentTime, currentKey};\n        }\n\n        let grandStaff = (i: number): JSX.Element => {\n            return (\n                <div className={`snview-row snview-row-${i + 1}`} key={i} style={{position: 'relative', height: 'auto', paddingTop: `${rowPadding}px`}}>\n                    {staff(i, 'treble')}\n                    {staffBreak(i)} {/* information that goes between two staffs */}\n                    {staff(i, 'bass')}\n                    {pedal(i)}\n                </div>\n            );\n        }\n\n        let staff = (i: number, staff: StaffType): JSX.Element | null => {\n            if (bassClefIsEmpty && staff === 'bass') return null;\n            let staffHeight = staffHeights[staff];\n            let svgHeight = staffHeight + measureLabelSpace + noteSymbolSize / 2;\n            let staffName = staff === 'treble' ? staffLabels[0] : staffLabels[1];\n\n            return <svg viewBox={`0 0 ${width} ${svgHeight}`}>\n                <g transform={`translate(${horizontalPadding}, 0)`}>\n                    <text x={staffLabelSpace} y={measureLabelSpace + staffHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">{staffName}</text>\n                    <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />\n\n                    {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                        measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j, staff)\n                    )}\n                </g>\n            </svg>\n        }\n\n        let measureNumberToPos = (measureNumber: number): number => {\n            return strokeWidth + horizontalPadding + staffLabelSpace + octaveLabelSpace + measureNumber * measureWidth;\n        }\n\n        let staffBreak = (i: number): JSX.Element | null => {\n            // 1. lyrics\n            let lyrics: JSX.Element[] = [];\n            let lyricsTrack = score!.tracks.find(track => track.trackTypes.includes('Lyrics'));\n            if (lyricsTrack === undefined) return null;\n            let key = 0;\n\n            let notesAtRow = lyricsTrack.measures.slice(i * measuresPerRow, (i + 1) * measuresPerRow);\n            let rowIsEmpty = notesAtRow.every(measure => measure.length === 0);\n            if (bassClefIsEmpty && rowIsEmpty) return null; // save whitespace\n\n            let textSize = noteSymbolSize * 6 / 7;\n            notesAtRow.forEach((notesAtMeasure, measureNumber) => {\n                notesAtMeasure.forEach(note => {\n                    if (!note.attributes.lyrics) return;\n                    let x = measureNumberToPos(measureNumber) + noteTimeToPos(note.time, 'treble').x;\n                    lyrics.push(\n                        <text x={`${x}`} y={textSize} key={key++} fontSize={textSize}>\n                            {note.attributes.lyrics}\n                        </text>\n                    )\n                });\n            });\n            return (\n                <svg viewBox={`0 0 ${width} ${textSize * 1.5}`} style={{position: 'relative', height: 'auto'}}>\n                    {lyrics}\n                </svg>\n            );\n        }\n\n        let pedal = (i: number) => {\n            let pedals: JSX.Element[] = [];\n            let instrumentTrack = score!.tracks.find(track => track.trackTypes.includes('Instrument'));\n            if (!instrumentTrack) return null;\n            let key = 0;\n\n            let directionsAtRow = instrumentTrack.directions.slice(i * measuresPerRow, (i + 1) * measuresPerRow);\n            let directionsAreEmpty = directionsAtRow.every(directions => directions.length === 0);\n            if (bassClefIsEmpty && directionsAreEmpty) return null;\n\n            directionsAtRow.forEach((directionsAtMeasure, measureNumber) => {\n                directionsAtMeasure.forEach(direction => {\n                    if (!direction.pedal) return;\n                    let pedalText = direction.pedal === 'pedalStart' ? '𝒫𝑒𝒹.' : '✻';\n                    let x = measureNumberToPos(measureNumber) + noteTimeToPos(direction.time, 'treble').x;\n                    pedals.push(\n                        <text x={`${x}`} y={noteSymbolSize} key={key++} fontSize={noteSymbolSize} fontWeight='bold'>\n                            {pedalText}\n                        </text>\n                    )\n                });\n            });\n\n            return (\n                <svg viewBox={`0 0 ${width} ${2 * noteSymbolSize}`} style={{position: 'relative', height: 'auto'}}>\n                    {pedals}\n                </svg>\n            );\n        }\n\n        let measure = (x: number, y: number, measureNumber: number, staff: StaffType) => {\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let key = 0;\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeights[staff] + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine[staff]; j <= maxLine[staff]; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + staffHeights[staff] - (j - minLine[staff]) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine[staff]) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                if (!track.trackTypes.includes('Instrument')) return; // we do not render notes for lyrics only track.\n                let notes = track.measures[measureNumber].filter(note => note.staff === staff);\n                notes.forEach((note, _idx) => {\n                    noteHeadSVG.push(noteHead(note, key++, staff));\n                    let tieStart = note.attributes.ties.includes(Tie.Start);\n                    let tieStop = note.attributes.ties.includes(Tie.Stop);\n                    let isLastMeasure = ((measureNumber + 1) % measuresPerRow === 0); // whether current measure is the last measure of the row\n                    let isLastNote = note.time + note.duration >= currentTime.beats; // whether the note reaches the end of the measure\n                    let noteSpansRow = tieStart && isLastMeasure && isLastNote; // whether tied note spans next row\n                    noteTailSVG.push(noteTail(note, key++, tieStart, tieStop, noteSpansRow, staff));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        }\n\n        let noteTimeToPos = (noteTime: number, staff: StaffType) => ({\n            x: beatWidth * noteTime,\n            y: staffHeights[staff] + measureLabelSpace\n        });\n\n        let noteTail = (note: Note, i: number, tieStart: boolean, tieStop: boolean, noteSpansRow: boolean, staff: StaffType) => {\n            let key = 0;\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine[staff];\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time, staff);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration, staff);\n\n            let roundingSpace = Math.max(Math.min(noteSymbolSize, xEnd - xStart), 0);\n            let radiusStart = tieStop ? 0 : roundingSpace / 4;\n            let radiusEnd = tieStart ? 0 : roundingSpace / 2;\n            let pointedEnd = noteSpansRow;\n\n            boxes.push(\n                <path\n                    key={key++}\n                    d={`\n                        M${xStart + radiusStart} ${yStart - (line + 1) * noteSymbolSize / 2}\n                        H${xEnd - radiusEnd}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${radiusEnd} ${radiusEnd}\n                        ${pointedEnd ? `\n                            l${noteSymbolSize / 2 - radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                            l${-noteSymbolSize / 2 + radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                        `: `v${noteSymbolSize - 2 * radiusEnd}`}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${-radiusEnd} ${radiusEnd}\n                        H${xStart + radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${-radiusStart} ${-radiusStart}\n                        v${-noteSymbolSize + 2 * radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${radiusStart} ${-radiusStart}\n                        z\n                    `}\n                    fill={colorPreferenceStyles[noteDurationColor]}\n                    fillOpacity={0.5}\n                />\n            );\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        }\n\n        let noteHead = (note: Note, i: number, staff: StaffType) => {\n            if (note.attributes.ties.includes(Tie.Stop))\n                return null!;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine[staff];\n\n            let {x, y} = noteTimeToPos(note.time, staff);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = noteSymbolSize / 8;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let autoNoteShape = accidentalType === 'sharp' ? sharpNoteShape : flatNoteShape;\n            let shape = {\n                [Accidental.Natural]: naturalNoteShape,\n                [Accidental.Flat]: accidentalType === 'auto' ? flatNoteShape : autoNoteShape,\n                [Accidental.Sharp]: accidentalType === 'auto' ? sharpNoteShape : autoNoteShape,\n            }[accidental];\n\n            switch (shape) {\n                case '●':\n                    return <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '◼':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▲':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▼':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '○':\n                    return <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                case '☐':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '△':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2 + strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '▽':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2 - strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '⊗':\n                    return (<g key={i}>\n                        <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                        <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n                case '⊠':\n                    return (<g key={i}>\n                        <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y - noteSymbolSize / 2 + strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y + noteSymbolSize / 2 - strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y + noteSymbolSize / 2 - strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y - noteSymbolSize / 2 + strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n            }\n        }\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => grandStaff(i));\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                <div className={`snview-row snview-row-0`} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${180}`}>\n                        <text x={width / 2} y={50} fontSize={40} textAnchor=\"middle\" alignmentBaseline=\"hanging\">{title}</text>\n                        <text x={70} y={170} fontSize={25} textAnchor=\"start\">{score.tempo} bpm</text>\n                        <text x={width - 70} y={170} fontSize={25} textAnchor=\"end\">{author}</text>\n                    </svg>\n                </div>\n                {svgRows}\n            </div>\n        );\n    } catch (e) {\n        console.error(e);\n        if (!dialogState.shown) {\n            showError('An issue was encountered while generating WYSIWYP output for the selected file.');\n        }\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n}\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n}\n\nexport const showPrompt = (title: string, body: any, buttonText1: string, buttonAction1: () => void, buttonText2: string, buttonAction2: () => void): DialogAction => {\n    return {\n        type: 'open', val: {\n            title, width: 400, height: 275, contents: <div style={styles.body}>\n                <div style={styles.space} />\n                <div style={styles.top}>\n                    {body}\n                </div>\n                <div style={styles.space} />\n                <div style={styles.bottom}>\n                    <span style={styles.link} onClick={buttonAction1}>\n                        {buttonText1}\n                    </span>\n                    <span style={{...styles.link,color:'indianred'}} onClick={buttonAction2}>\n                        {buttonText2}\n                    </span>\n                </div>\n            </div>}};\n}\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n        padding:'0 30px',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","import MusicXML from 'musicxml-interfaces';\nimport {Note, TimeSignature, KeySignature, Tracks, Score, Tie, Notes, Track, TrackType, isDynamics, Direction, Directions, Slur} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nconst isScorePart = (part: MusicXML.PartGroup | MusicXML.ScorePart): part is MusicXML.ScorePart => {\n    return part && part._class === 'ScorePart';\n};\n\n// get piano part name from xml\nconst getPianoPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    const pianoPart = xml.partList.find(part => isScorePart(part) && part.partName.partName.toLowerCase() === 'piano');\n    return pianoPart ? (pianoPart as MusicXML.ScorePart).id : undefined;\n};\n\nconst getLyricsPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    let lyricsPartId: string | undefined;\n    // loop until we find a part with some lyrics defined. \n    xml.measures.some(measure => {\n        return Object.keys(measure.parts).some(partName => {\n            let part = measure.parts[partName];\n            let partContainsLyrics = part.some(entry => entry.lyrics !== undefined);\n            lyricsPartId = partContainsLyrics ? partName : undefined;\n            return lyricsPartId !== undefined;\n        });\n    });\n    return lyricsPartId;\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let lyricsPartId = getLyricsPartID(xml);\n    let pianoPartId = getPianoPartID(xml);\n\n    // currently, SNApp renders piano and lyric parts. We store the ids of the tracks we have to parse below.\n    let tempo: number | undefined;\n\n    let currentBeatType = 4;\n    let currentBeats = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: Notes[],\n            directions: Directions[]\n        }\n    } = {};\n\n    /** \n     * Multitrack Handling Logic\n     * \n     * We parse:\n     *      1) just the instrument part from a two part work for instrument and vocal\n     *      2) just the piano part from a work with multiple instrument parts\n     *      3) just one instrument part from a work with multiple instruments and none of them are piano\n     */\n\n    // parts that we want to parse. We may add more ids here if we decide to render more instruments parts.\n    let trackIDsToParse: string[] = [];\n\n    let instrumentId = pianoPartId !== undefined ? pianoPartId : 'P1';\n    trackIDsToParse.push(instrumentId);\n    if (lyricsPartId !== undefined && !trackIDsToParse.includes(lyricsPartId)) {\n        trackIDsToParse.push(lyricsPartId)\n    }\n\n    xml.measures.forEach((measure, measureNumber) => {\n        trackIDsToParse.forEach(partName => {\n            if (measure.parts[partName] === undefined) return; // if part has not started yet, skip this measure.\n\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length).fill([]),\n                    directions: Array(xml.measures.length).fill([])\n                };\n            }\n            let part = parts[partName];\n            let notes: Note[] = [];\n            let directions: Direction[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            let measureEnd = 0;\n\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n\n                            measureEnd = Math.max(measureEnd, time + divisionsToNoteLength(entry.duration));\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n\n                            if (entry.pitch !== undefined) {\n                                let entryTies = entry.ties as {type: number}[];\n                                let staffNumber = entry.staff ? entry.staff : 1;\n                                let entrySlur: Slur | undefined;\n                                let lyricsText: string | undefined;\n\n                                if (entry.notations && entry.notations.length > 0) {\n                                    entry.notations.forEach((notation: any) => {\n                                        if (notation.slurs) {\n                                            notation.slurs.forEach((slur: any) => {\n                                                if (slur.type === 0) entrySlur = 'start'\n                                                if (slur.type === 1) entrySlur = 'end'\n                                            });\n                                        }\n                                    });\n                                }\n                                if (entry.lyrics) {\n                                    let lyrics = entry.lyrics[0].lyricParts.find((lyrics: any) => lyrics._class === 'Text');\n                                    if (lyrics) lyricsText = lyrics.data;\n                                }\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    staff: staffNumber === 1 ? 'treble' : 'bass',\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : [],\n                                        slur: entrySlur,\n                                        lyrics: lyricsText\n                                    }\n                                });\n                            }\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                    currentBeats = entry.times[0].beats[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        // parse tempo\n                        if (entry.hasOwnProperty('sound') && entry.sound.tempo !== undefined) {\n                            if (!tempo && entry.sound.tempo) tempo = parseInt(entry.sound.tempo); // take the first defined tempo\n                        }\n                        if (!entry.directionTypes || entry.directionTypes === 0) break;\n\n                        // parse other directions\n                        entry.directionTypes.forEach((direction: any) => {\n                            // parse dynamics\n                            if (direction.hasOwnProperty('dynamics')) {\n                                Object.keys(direction.dynamics).forEach(key => {\n                                    if (isDynamics(key)) directions.push({time: part.progress, dynamics: key})\n                                });\n                            }\n                            // parse pedal\n                            if (direction.hasOwnProperty('pedal')) {\n                                if (direction.pedal.type === 0) directions.push({time: part.progress, pedal: 'pedalStart'});\n                                if (direction.pedal.type === 1) directions.push({time: part.progress, pedal: 'pedalEnd'});\n                                // we disregard other pedal types\n                            }\n                        });\n                        break;\n                    case 'Sound':\n                        if (!tempo && entry.tempo) tempo = parseInt(entry.tempo); // take the first defined tempo\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n            part.measures[measureNumber] = notes;\n            part.directions[measureNumber] = directions; \n\n            // check pick up measure\n            if (measureNumber === 0 && measureEnd < currentBeats) {\n                let offset = currentBeats - measureEnd;\n                part.measures[0].forEach(note => note.time += offset);\n                part.directions[0].forEach(direction => direction.time += offset);\n            }\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(partId => {\n        let trackTypes: TrackType[] = []\n        if (partId === lyricsPartId) trackTypes.push('Lyrics');\n        if (partId === instrumentId) trackTypes.push('Instrument');\n\n        return {\n            measures: parts[partId].measures,\n            directions: parts[partId].directions,\n            timeSignatures: parts[partId].timeSignatures,\n            keySignatures: parts[partId].keySignatures,\n            trackTypes: trackTypes\n        } as Track;\n    });\n\n    // handle unprovided signatures\n    tracks.forEach(track => {\n        // add default values for key signatures if it is not provided.\n        if (track.keySignatures.length === 0) track.keySignatures.push({measure: 0, fifths: 0});\n\n        if (track.timeSignatures.length === 0) {\n            if (track.measures.length === 1) {\n                // case 1: all notes grouped into a single measure\n                let measure = track.measures[0];\n                let newMeasures: Note[][] = Array(Math.ceil(measure.length / 4)).fill([]).map((_, index) => index * 4).map(start => measure.slice(start, start + 4)); // divide notes into chunks of four\n                newMeasures.forEach((measure, idx) => measure.forEach(note => note.time -= 4 * idx)); // shift note start time appropriately\n                track.timeSignatures.push({measure: newMeasures.length, beats: 4, beatTypes: 4})\n                track.measures = newMeasures;\n            } else {\n                // case 2: time signature is not provided at all\n                let currentMeasureLength = 4; // start with assuming 4/4 time signature.\n                track.measures.forEach((measure, measureNumber) => {\n                    let lastNote = measure[measure.length - 1];\n                    let measureLength = Math.max(lastNote.time + lastNote.duration);\n                    if (currentMeasureLength !== measureLength) {\n                        track.timeSignatures.push({measure: measureNumber, beats: measureLength, beatTypes: 4});\n                        currentMeasureLength = measureLength;\n                    }\n                });\n            }\n        }\n    });\n    if (!tempo) tempo = 60;\n    return {tracks, tempo}\n};","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";"],"sourceRoot":""}