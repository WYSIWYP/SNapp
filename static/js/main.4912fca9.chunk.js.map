{"version":3,"sources":["contexts/Dialog.tsx","components/Frame.tsx","components/Expandable.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx","parser/Types.tsx","contexts/Preferences.tsx","components/SNView.tsx","util/Util.tsx","util/Dialog.tsx","parser/MusicXML.tsx","images/upload.svg"],"names":["initialState","shown","DialogContext","createContext","undefined","DialogStateProvider","_ref","children","reducer","useRef","state","action","type","data","val","_useReducer","useReducer","current","_useReducer2","Object","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Provider","value","useDialogState","useContext","styles","appContainer","overflow","header","fontStyle","fontWeight","fontSize","textAlign","letterSpacing","left","height","lineHeight","transform","backgroundColor","minWidth","position","page","top","sideBar","right","Frame","sideMenu","showSideMenu","react_default","style","id","objectSpread","className","concat","group","paddingLeft","title","marginTop","alignItems","display","width","marginBottom","childrenWrapper","_useState","useState","_useState2","slicedToArray","expanded","setExpanded","ref","downArrow","xmlns","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","points","rightArrow","onClick","s","Math","ceil","clientHeight","CurrentFileContext","CurrentFileStateProvider","useCurrentFileState","leftSide","float","svg","marginRight","color","marginLeft","cursor","subHeader","SNView","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","padding","opacity","sideBarContent","line","name","hidden","Convert","show","setShow","_usePreferencesState","usePreferencesState","_usePreferencesState2","preferences","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","_useState3","_useState4","showPreferencesButton","setShowPreferencesButton","useEffect","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","wrap","_context","prev","next","localStorage","getItem","JSON","parse","filter","x","e","console","log","navigate","stop","sidebar","file","Blob","stringify","saveAs","autoBom","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","error","readAsText","files","importFile","Expandable","measuresPerRow","measuresPerRowOptions","map","key","clefSymbols","clefPreferenceOptions","staffScale","scalePreferenceOptions","horizontalSpacing","spacingPreferenceOptions","verticalSpacing","accidentalType","accidentalTypeOptions","noteScale","naturalNoteShape","noteHeadPreferenceOptions","sharpNoteShape","flatNoteShape","noteSymbolColor","colorPreferenceOptions","noteDurationColor","components_Frame","strokeWidth","strokeLinecap","strokeLinejoin","d","margin","document","getElementById","canvas","getElementsByClassName","pdf","jsPDF","rows","nextRowY","i","length","row","_split$map","getElementsByTagName","getAttribute","split","parseInt","_split$map2","w","h","canvasRowHeight","pdfRowHeight","addPage","ctx","getContext","fillStyle","fillRect","canvg","innerHTML","ignoreClear","addImage","save","openPDF","padding-right","Fragment","cx","cy","r","xml","forcedWidth","body","NotFound","GlobalStateProvider","PreferencesStateProvider","forEach","bg","frame","border","borderRadius","userSelect","headerRight","maxHeight","overflowY","buttons","bottom","Dialog","_useDialogState","dialog","active","startX","startY","mouseX","mouseY","y","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","contents","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingRight","overflowX","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","link","deleteAll","icon","Menu","setRecentFiles","installHandle","setInstallHandle","window","addEventListener","preventDefault","setDialogState","showError","recent","loadFile","setItem","date_opened","Date","getTime","toConsumableArray","deleteFile","newRecentFiles","deleteSinglePrompt","deleteAllFiles","onUpload","fileName","Array","from","floor","random","toString","join","date_created","react","date","getMonth","getDate","getFullYear","paddingTop","x1","y1","x2","y2","src","alt","replace","failedReads","fail","reader1","Error","zip","details","parser","detailsDOM","nodes","musicXMLPath","musicXMLData","JSZip","loadAsync","sent","async","DOMParser","parseFromString","MusicXML","parseScore","measures","t0","readAsArrayBuffer","reader2","uploadFile","prompt","userChoice","then","outcome","Router","contexts_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","global_Global","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_Router","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Tie","__webpack_require__","__webpack_exports__","colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","keys","PreferencesContext","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","Accidental","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setWidth","score","setScore","_useDialogState2","dialogState","setImmediate","showErrorRef","callback","newWidth","getBoundingClientRect","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3___default","noteSymbolSize","small","medium","large","rowPadding","narrow","moderate","wide","horizontalPadding","staffLabelSpace","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","staffLabels","octaveLines","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","movementTitle","work","workTitle","author","credits","creditWords","credit","words","abs","minNote","treble","bass","maxNote","track","trackTypes","includes","measure","staff","min","midi","max","staffTypes","minLine","maxLine","staffHeights","beatsPerMeasure","measureWidth","measureNumber","reduce","accum","rowNumber","_getCurrentSignatures","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","reverse","currentTime","find","timeSignature","currentKey","keySignature","getCurrentSignatures","measureSVG","push","measureLabelSpace","j","octaveLine","lineY","textAnchor","dominantBaseline","tickX","tickSize","noteHeadSVG","noteTailSVG","_idx","noteHead","tieStart","attributes","ties","Start","tieStop","Stop","isLastMeasure","isLastNote","time","duration","noteSpansRow","noteTail","staffHeight","yOffset","dynamicsSpace","staffName","range","noteTimeToPos","noteTime","boxes","_noteTimeToPos","xStart","yStart","xEnd","roundingSpace","radiusStart","radiusEnd","pointedEnd","fillOpacity","_Accidental$Natural$A","accidental","_noteTimeToPos3","triHeight","sqrt","crossCircleWidth","autoNoteShape","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","svgRows","grandStaffHeight","fingeringSpace","paddingBottom","grandStaff","alignmentBaseline","res","close","showMessage","buttonText","buttonAction","space","showPrompt","buttonText1","buttonAction1","buttonText2","buttonAction2","_Users_ahharvey_Documents_GitHub_SNapp2_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_Types__WEBPACK_IMPORTED_MODULE_0__","pitchToMidi","pitch","step","c","f","g","b","toLowerCase","octave","alter","round","lyricsPartId","some","parts","partName","partContainsLyrics","entry","lyrics","getLyricsPartID","pianoPartId","pianoPart","partList","part","_class","isScorePart","getPianoPartID","currentBeatType","trackIDsToParse","instrumentId","divisions","progress","notes","divisionsToNoteLength","chord","rest","entryTies","staffNumber","tie","times","beatTypes","partId","newMeasures","_","index","start","slice","idx","currentMeasureLength","lastNote","measureLength","module","exports","p"],"mappings":"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","file":"static/js/main.4912fca9.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","import React, {CSSProperties} from \"react\";\n\ntype Props = {\n    header?: string;\n    fontSize?: number;\n    sideMenu?: React.ReactNode;\n    showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n    header,\n    fontSize,\n    sideMenu,\n    showSideMenu,\n    children\n}) => {\n    return (\n        <div style={styles.appContainer}>\n\n            {header === undefined ? null : <div id=\"header\" style={{...styles.header, fontSize: fontSize || 40}}>\n                {header}\n            </div>}\n\n            <div style={{...styles.page, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>{children}</div>\n            <div className={`animated ${showSideMenu ? 'open' : 'close'}`}\n                style={{...styles.sideBar, ...(header === undefined ? {top: '0px', height: '100%'} : {})}}>\n                {sideMenu}\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    appContainer: {\n        overflow: \"hidden\",\n    },\n    header: {\n        fontStyle: \"normal\",\n        fontWeight: \"normal\",\n        fontSize: \"42px\",\n        textAlign: \"center\",\n        letterSpacing: \"0.05em\",\n        left: \"50%\",\n        height: \"80px\",\n        lineHeight: \"80px\",\n        transform: \"translate(-50%,0px)\",\n        backgroundColor: \"#31B7D6\",\n        minWidth: \"600px\",\n        position: \"absolute\",\n        overflow: 'hidden',\n    },\n    page: {\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        overflow: \"auto\",\n    },\n    sideBar: {\n        backgroundColor: \"rgba(0,0,0,0.7)\",\n        top: \"80px\",\n        height: \"calc(100% - 80px)\",\n        left: \"auto\",\n        right: \"0px\",\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {CSSProperties, useState, useRef} from \"react\";\n\ntype Props = {\n    title: string;\n};\n\nconst Frame: React.FC<Props> = ({\n    title,\n    children\n}) => {\n    let [expanded, setExpanded] = useState(false);\n    let ref = useRef(undefined! as HTMLDivElement);\n    let downArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"6 9 12 15 18 9\"></polyline></svg>;\n    let rightArrow = <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 -3 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg>;\n    return (\n        <div style={styles.group}>\n            <div style={styles.title} onClick={() => {setExpanded(s => !s)}}>\n                {expanded ? downArrow : rightArrow} {title}\n            </div>\n            <div className={`animated-height`} style={{...styles.children, height: `${expanded ? Math.ceil(ref === undefined ? 0 : ref.current.clientHeight + 30) : 0}px`}}>\n                <div ref={ref} style={styles.childrenWrapper}>\n                    {children}\n                </div>\n            </div>\n        </div >\n    );\n};\n\nconst styleMap = {\n    group: {\n        paddingLeft: '10px',\n        height: 'auto',\n        position: 'relative',\n    },\n    title: {\n        position: 'relative',\n        height: '40px',\n        marginTop: '30px',\n        alignItems: 'baseline',\n        display: 'flex',\n        width: '100%',\n        lineHeight: '40px',\n        fontSize: '23px',\n    },\n    children: {\n        position: 'relative',\n        paddingLeft: '15px',\n        marginBottom: '30px',\n        overflow: 'hidden',\n    },\n    childrenWrapper: {\n        position: 'relative',\n        height: 'auto',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport Expandable from '../components/Expandable';\nimport {saveAs} from 'file-saver';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions,\n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions, accidentalTypeOptions, clefPreferenceOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\n// import {useDialogState} from '../contexts/Dialog';\n// import * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    // let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    // let showError = (error: string)=>{\n    //     setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n    //         setDialogState(Dialog.close());\n    //     }));\n    // }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n\n            let margin = 5;\n            let padding = 5;\n\n            let hidden = document.getElementById('hidden-pdf-generation') as HTMLDivElement;\n            let canvas = hidden.getElementsByClassName('canvas')[0] as HTMLCanvasElement;\n\n            let pdf = new jsPDF(); //210 x 297 mm (A4 paper dimensions)\n            let width = 210;\n            let height = 297;\n\n            // should change with preferences\n            margin = width * margin / 100;\n            padding = width * padding / 100;\n\n\n            let rows = hidden.getElementsByClassName('snview-row');\n\n            let nextRowY = margin;\n            for (let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n\n                let [, , w, h] = row.getElementsByTagName('svg')[0].getAttribute('viewBox')!.split(' ').map(x => parseInt(x));\n                let canvasRowHeight = Math.ceil(1000 * h / w);\n                let pdfRowHeight = Math.ceil((width - margin * 2) * h / w);\n\n                if (nextRowY + pdfRowHeight > height - margin) {\n                    pdf.addPage();\n                    nextRowY = margin;\n                }\n\n                canvas.height = canvasRowHeight;\n                let ctx = canvas.getContext(\"2d\")!;\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = \"black\";\n                canvg(canvas, row.innerHTML, {ignoreClear: true});\n                pdf.addImage(canvas, 'JPEG', margin, nextRowY, width - margin * 2, pdfRowHeight);\n\n                nextRowY += pdfRowHeight + padding;\n            }\n\n\n\n            // pdf.rect(0,0,200,287,'F');\n            // pdf.addPage();\n            // pdf.rect(0,10,200,287,'F');\n\n            //(pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp', {\n            autoBom: false,\n        });\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (\n        <div style={styles.sideBar}>\n            <div style={styles.sideBarTop}>\n                <div id=\"export\" title=\"Click to save your preferences\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                    Save\n                </div>\n                <div id=\"import\" style={styles.sideBarTopOptions}>\n                    Open\n                <input style={styles.fileInput} type=\"file\" title=\"Click to load your preferences\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n                </div>\n                <div id=\"close\" style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                    Close ✕\n                </div>\n            </div>\n\n            <div style={styles.sideBarContent}>\n\n            <Expandable title=\"Staff Appearance\">\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Measures per Row</div>\n                    <select value={preferences.measuresPerRow} onChange={\n                        (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                    }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Symbols</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.clefSymbols} onChange={\n                        (e) => {setPreferences({type: 'set', val: {clefSymbols: e.target.value as any}});}\n                    }>{clefPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Clef Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.staffScale} onChange={\n                        (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                    }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Margin Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.horizontalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                <div style={styles.line}>\n                    <div style={styles.name}>Staff Spacing Size</div>\n                    {/* deleted value and onchange */}\n                    <select value={preferences.verticalSpacing} onChange={\n                        (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                    }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                </div>\n\n                </Expandable>\n\n                <Expandable title=\"Note Appearance\">\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Accidental Type</div>\n                        <select value={preferences.accidentalType} onChange={\n                            (e) => {setPreferences({type: 'set', val: {accidentalType: e.target.value as any}});}\n                        }>{accidentalTypeOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Note Size</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.noteScale} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                        }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    \n                    <div style={styles.line}>\n                        <div style={styles.name}>Natural Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.naturalNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Sharp Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.sharpNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Flat Notehead</div>\n                        {/* deleted value and onchange */}\n                        <select value={preferences.flatNoteShape} onChange={\n                            (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                        }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Notehead Color</div>\n                        <select value={preferences.noteSymbolColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n\n                    <div style={styles.line}>\n                        <div style={styles.name}>Duration Color</div>\n                        <select value={preferences.noteDurationColor} onChange={\n                            (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                        }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n                    </div>\n                    \n                </Expandable>\n\n            </div>\n\n        </div>)\n\n    return (\n        <Frame showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div id=\"home\" style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    SNapp Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div id=\"preference\" style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView} onClick={() => {setShow(false);}}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n            <div id=\"hidden-pdf-generation\" style={styles.hidden}>\n                <canvas className=\"canvas\" width={1000} height={1000} />\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} forcedWidth={1000} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderBottom: 'solid 1px #bbb',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        position: 'absolute',\n        top: '65px',\n        height: 'calc(100% - 65px)',\n        overflow: 'auto',\n    },\n    line: {\n        marginTop: '30px',\n        marginBottom: '30px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n        width: '100%'\n    },\n    name: {\n        position: 'relative',\n        width: '50%',\n        display: 'inline-block'\n    },\n    hidden: {\n        width: '0px',\n        height: '0px',\n        overflow: 'hidden',\n        opacity: .01,\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n    \n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, { CSSProperties, useState, useEffect, Fragment } from 'react';\nimport { RouteComponentProps, navigate } from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML, { ScoreTimewise } from 'musicxml-interfaces';\nimport { useCurrentFileState } from '../contexts/CurrentFile';\nimport { useDialogState } from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport JSZip from 'jszip';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date_created: number,\n        date_opened: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n    let [installHandle, setInstallHandle] = useState<{\n        prompt: ()=>void,\n        userChoice: Promise<{outcome: 'accepted'|'rejected'}>\n    } | undefined>(undefined);\n    useEffect(()=>{\n        window.addEventListener('beforeinstallprompt', (e) => {\n            // Prevent Chrome 67 and earlier from automatically showing the prompt\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            setInstallHandle(e as any);\n        });\n    },[]);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    let deleteAllPrompt = () => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete all files?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            setRecentFiles([]);\n            localStorage.setItem('recent_files', JSON.stringify([]));\n            setDialogState(Dialog.close());\n        }));\n    }\n    let deleteSinglePrompt = (x: recentFile) => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', 'Are you sure you want to delete this file?', 'Close', () => {\n            setDialogState(Dialog.close());\n        }, 'Delete', () => {\n            let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            setRecentFiles(newRecentFiles);\n            localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) { }\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({ type: 'set', val: { id: x.id, file_name: x.file_name, data: parsed } });\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n\n                // Update the accessed date for this song and move it to the top of the list\n                localStorage.setItem('recent_files', JSON.stringify([\n                    { ...x, date_opened: new Date().getTime() } as recentFile,\n                    ...recentFiles.filter(y => y.id !== x.id)\n                ]));\n            } catch (e) {\n                // Writing to local storage may be disabled currently\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteFile = (x: recentFile) => {\n        try {\n            deleteSinglePrompt(x);\n            // let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            // setRecentFiles(newRecentFiles);\n            // localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n        } catch (e) {\n            showError('An issue was encountered while deleting this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteAllFiles = () => {\n        try {\n            deleteAllPrompt();\n        } catch (e) {\n            showError('An issue was encountered while deleting all file(s).');\n            console.error(e);\n        }\n    }\n\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.(?:musicxml|mxl|xml)$/i, '');\n        let failedReads = 0;\n        let fail = () => {\n            failedReads++;\n            if (failedReads === 2) { //both reads failed\n                showError('An issue was encountered while reading the selected file.');\n            }\n        }\n        try {\n            let reader1 = new FileReader();\n            reader1.onload = function () {\n                try {\n                    let data = reader1.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as compressed\n\n                    (async () => {\n                        try {\n                            let zip = await JSZip.loadAsync(data);\n                            let details = await zip.file('META-INF/container.xml').async(\"text\");\n                            let parser = new DOMParser();\n                            let detailsDOM = parser.parseFromString(details, \"application/xml\");\n                            let nodes = detailsDOM.getElementsByTagName('rootfile');\n                            let musicXMLPath = nodes[0].getAttribute('full-path')!;\n                            for (let i = nodes.length - 1; i >= 0; i--) {\n                                if (nodes[i].getAttribute('media-type') === 'application/vnd.recordare.musicxml+xml') {\n                                    musicXMLPath = nodes[i].getAttribute('full-path')!;\n                                }\n                            }\n                            let musicXMLData = await zip.file(musicXMLPath).async(\"text\");\n                            let parsed = MusicXML.parseScore(musicXMLData);\n                            if (parsed.measures === undefined) {\n                                throw new Error('Invalid MusicXML format');\n                            }\n                            onUpload(fileName, parsed);\n                        } catch (e) {\n                            fail();\n                            console.error(e);\n                        }\n                    })();\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader1.readAsArrayBuffer((e.target as any).files[0]);\n            let reader2 = new FileReader();\n            reader2.onload = function () {\n                try {\n                    let data = reader2.result;\n                    if (data === null) {\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as uncompressed\n                    let parsed = MusicXML.parseScore(data as string);\n\n                    if (parsed.measures === undefined) {\n                        throw new Error('Invalid MusicXML format');\n                    }\n                    console.log(parsed);\n\n                    onUpload(fileName, parsed);\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader2.readAsText((e.target as any).files[0]);\n\n\n\n\n\n            // let reader = new FileReader();\n            // reader.onload = function () {\n            //     try {\n            //         let data = reader.result;\n            //         let parsed: ScoreTimewise;\n            //         if(data === null){\n            //             throw new Error('Failed to read file - null');\n            //         }\n            //         try {\n            //             //try to interpret this file as uncompressed\n            //             parsed = MusicXML.parseScore(data.toString());\n            //             console.log(data.toString());\n            //             console.log(parsed);\n            //         } catch(e){\n\n            //             throw new Error('...');\n            //         }\n\n            //         let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n            //         // Set this song as the current work in the global context\n            //         setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n            //         // Fail silently if localStorage is disabled\n            //         try {\n\n            //             // Set this song as the current work in localStorage\n            //             localStorage.setItem(id, JSON.stringify(parsed));\n            //             localStorage.setItem('current_file', id);\n\n            //             // Add this song to the recent songs list\n            //             let newRecentFiles = recentFiles.map(x => x);\n\n            //             for (let i = 0; i < newRecentFiles.length; i++) {\n            //                 if (newRecentFiles[i]['file_name'] === fileName) {\n            //                     newRecentFiles.splice(i, 1);\n            //                 }\n            //             }\n\n            //             newRecentFiles.unshift({file_name: fileName, date: new Date().getTime(), id});\n            //             localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n\n            //         } catch (e) {\n            //             console.error(e);\n            //         }\n\n            //         navigate('convert');\n            //     } catch (e) {\n            //         showError('An issue was encountered while reading the selected file.');\n            //         console.error(e);\n            //     }\n            // };\n            // reader.readAsArrayBuffer((e.target as any).files[0]);\n        } catch (e) {\n            showError('An issue was encountered while reading the selected file.');\n            console.error(e);\n        }\n    };\n\n    const onUpload = (fileName: string, parsed: ScoreTimewise) => {\n        let id = `file_${Array.from({ length: 16 }, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n        // Set this song as the current work in the global context\n        setCurrentFile({ type: 'set', val: { id, file_name: fileName, data: parsed } });\n\n        // Fail silently if localStorage is disabled\n        try {\n\n            // Set this song as the current work in localStorage\n            localStorage.setItem(id, JSON.stringify(parsed));\n            localStorage.setItem('current_file', id);\n\n            // Add this song to the recent songs list\n            localStorage.setItem('recent_files', JSON.stringify([\n                { file_name: fileName, date_created: new Date().getTime(), date_opened: new Date().getTime(), id } as recentFile,\n                ...recentFiles.filter(x => x.file_name !== fileName)\n            ]));\n\n        } catch (e) {\n            console.error(e);\n        }\n\n        navigate('convert');\n    }\n\n    return (\n        <Frame header=\"SNapp -&nbsp;Simplified&nbsp;Notation&nbsp;App&nbsp;for&nbsp;Sheet&nbsp;Music\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n                <div style={{ ...styles.item, maxWidth: '720px' }}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{ ...styles.item, flex: '.2 0 auto' }} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{ ...styles.item, flex: '.35 0 auto' }} />\n                </> : <>\n                        <div style={{ ...styles.item, flex: '.36 0 auto' }} />\n                        <div style={{ ...styles.item, fontSize: '28px', fontWeight: 'bolder' }}>Recent Files</div>\n                        <div style={{ ...styles.item, flex: '.08 0 auto' }} />\n                        <div style={{ ...styles.item, ...styles.recentFiles }}>\n                            <div style={{ ...styles.recentFilesInner }}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div className=\"button-recent-file\" style={styles.recentFilesItem}>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 1 auto', fontWeight: 'bold' }}>\n                                            {x.file_name}\n                                        </div>\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto' }} />\n                                        <div onClick={() => { loadFile(x); }} style={{ ...styles.recentFilesItemInner, flex: '0 100000 auto', fontSize: '22px' }}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date_created || (x as any).date /*migrate from x.date to x.date_created*/))}\n                                        </div>\n                                        <div onClick={() => { deleteFile(x); }} style={{ ...styles.recentFilesItemInner, color: 'gray', width: '35px' }} >\n                                            <svg style={{ paddingTop: '9px' }} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                                <div onClick={() => { deleteAllFiles(); }} style={styles.deleteAll}>Delete All Files</div>\n                            </div>\n                        </div>\n                        <div style={{ ...styles.item, flex: '.24 0 auto' }} />\n                    </>}\n                <div style={styles.item}>\n                    <span id=\"button-upload\" style={styles.link}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Open MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml,.mxl,.xml\" onChange={(e) => { uploadFile(e); }}></input>\n                    </span>\n                </div>\n                {installHandle===undefined?null:<>\n                    <div style={{ ...styles.item, flex: '.5 0 auto' }} />\n                    <div style={{ ...styles.item, maxWidth: '720px' }}>\n                        Click the button below to add SNapp to your device's home screen.\n                    </div>\n                    <div style={{ ...styles.item, flex: '.07 0 auto' }} />\n                    <div style={styles.item}>\n                        <span id=\"button-upload\" style={styles.link} onClick={() => {\n                            installHandle!.prompt();\n                            installHandle!.userChoice.then(result=>{\n                                if (result.outcome === 'accepted') {\n                                    setInstallHandle(undefined);\n                                }\n                            });\n                        }}>\n                            Add to Home Screen\n                        </span>\n                    </div>\n                </>}\n                <div style={{ ...styles.item, flex: '1 0 auto' }} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '750px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    deleteAll: {\n        position: 'relative',\n        height: '40px',\n        width: '200px',\n        fontSize: '22px',\n        lineHeight: '40px',\n        left: '50%',\n        transform: 'translate(-50%, 0)',\n        cursor: 'pointer',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/**\n * This file contains types shared across all parsers.\n */\n\nexport enum Tie {\n    Start = \"START\", \n    Stop = \"STOP\",\n}\n\nexport type TrackType = 'Instrument' | 'Lyrics'; // part types that app currently handles\n\nexport type StaffType = 'treble' | 'bass';\n\nexport type Note = {\n    time: number,\n    duration: number,\n    midi: number,\n    staff: StaffType,\n    attributes: {\n        ties: Tie[], // TODO: consider making this optional\n        // other attributes like slurs and dynamics can go here\n    }\n};\n\nexport type Measure = Note[]; // note: each part should have 1 staff or 2 staves (for piano)\n\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Track = {\n    measures: Measure[],\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[],\n    trackTypes: TrackType[] // we use an array here because a track might contain both lyrics and piano part.\n};\n\nexport type Tracks = Track[];\n\nexport type Score = {\n    tracks: Tracks,\n};\n","import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = ['narrow', 'moderate', 'wide'] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"●\", \"◼\", \"▲\", \"▼\", \"○\", \"☐\", \"△\", \"▽\", \"⊗\", \"⊠\"] as const; // Previous symbols: ⨂, □\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const clefPreferenceOptions = [\"WYSIWYP\",\"Traditional\"] as const;\nexport type clefPreferenceOptions = (typeof clefPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport const accidentalTypeOptions = ['auto', 'sharp', 'flat'] as const;\nexport type accidentalTypeOption = (typeof accidentalTypeOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    clefSymbols: clefPreferenceOptions;\n    measuresPerRow: measuresPerRowOption;\n    accidentalType: accidentalTypeOption\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 'moderate',\n    verticalSpacing: 'moderate',\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    clefSymbols: 'WYSIWYP',\n    measuresPerRow: 4,\n    accidentalType: 'auto'\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {Note, Score, Tie, TimeSignature, KeySignature, StaffType} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState, spacingPreferenceOption, scalePreferenceOption} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    forcedWidth?: number,\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n};\n\nconst SNView: React.FC<Props> = ({xml, forcedWidth}) => {\n    console.log(xml)\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            navigate('/');\n            setImmediate(() => setDialogState(Dialog.close()));\n        }));\n    }\n    let showErrorRef = useRef(showError);\n\n    console.log('Score:', score);\n    useEffect(() => {\n        if (forcedWidth === undefined) {\n            let width: number = undefined!;\n            let callback = () => {\n                let newWidth = ref.current!.getBoundingClientRect().width;\n                if (width !== newWidth) {\n                    width = newWidth;\n                    setWidth(newWidth);\n                }\n            };\n            window.addEventListener(\"resize\", callback);\n            // let interval = setInterval(callback, 20);\n            callback();\n            return () => {\n                window.removeEventListener(\"resize\", callback);\n                // clearInterval(interval);\n            }\n        } else {\n            setWidth(forcedWidth);\n        }\n    }, [setWidth, forcedWidth]);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        try {\n            setScore(parse(xml));\n        } catch (e) {\n            showErrorRef.current('An issue was encountered while processing this file.');\n            console.error(e);\n        }\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        let devMode = false;\n\n        // fetch preference values\n        let {\n            noteDurationColor,\n            noteSymbolColor,\n            staffScale,\n            horizontalSpacing,\n            verticalSpacing,\n            noteScale,\n            naturalNoteShape,\n            sharpNoteShape,\n            flatNoteShape,\n            measuresPerRow,\n            accidentalType\n        } = preferences;\n\n        // Map preference strings to numeric values \n        let noteScaleMap: Record<scalePreferenceOption, number> = {\n            small: 15,\n            medium: 20,\n            large: 25\n        }\n        let staffScaleMap: Record<scalePreferenceOption, number> = {\n            small: 18,\n            medium: 25,\n            large: 32\n        };\n        let verticalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 10,\n            moderate: 30,\n            wide: 50\n        };\n        let horizontalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 20,\n            moderate: 40,\n            wide: 60\n        };\n\n        //general spacing\n        let noteSymbolSize = noteScaleMap[noteScale]; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = verticalSpacingMap[verticalSpacing]; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        // spacing between two clefs (aka grand staff distance)\n        let dynamicsSpace = 10;\n        let lyricsSpace = 10;\n        let staffPadding = 5;\n        let staffDistance = dynamicsSpace + lyricsSpace + 2 * staffPadding;\n\n        // annotation space for each clef\n        let fingeringSpace = 15;\n        let articulationSpace = 15;\n        let articulationPadding = 5;\n        let annotationSpace = fingeringSpace + articulationSpace + 2 * articulationPadding;\n\n        //horizontal spacing\n        let horizontalPadding = horizontalSpacingMap[horizontalSpacing]; //left/right padding\n        let staffLabelSpace = staffScaleMap[staffScale]; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        let staffLabels = preferences.clefSymbols==='WYSIWYP'?['𝒯', 'ℬ']:['𝄞', '𝄢']; //𝄢\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n\n            // if note is flat, we need to bring it a line higher.\n            if (accidentalType === 'auto' && getNoteAccidental(note) < 0) line++;\n            else if (accidentalType === 'flat' && getNoteAccidental(note) !== 0) line++; // handle user override\n\n            return line;\n        };\n\n        //find the title and author\n        let title = '';\n        try {\n            title = xml.movementTitle;\n            title = xml.work.workTitle;\n        } catch (e) {}\n\n        let author = '';\n        try {\n            let credits = xml.credits.filter(x => x.creditWords !== undefined && x.creditWords.length > 0).map(x => x.creditWords);\n            credits.forEach(credit => {\n                credit.forEach(words => {\n                    if (Math.abs(words.words.length - 20) < Math.abs(author.length - 20)) {\n                        author = words.words;\n                    }\n                })\n            })\n        } catch (e) {}\n\n        let minNote: Record<StaffType, number> = {\n            treble: 128,\n            bass: 128\n        };\n\n        let maxNote: Record<StaffType, number> = {\n            treble: -1,\n            bass: -1\n        };\n\n        //calculate lowest and highest note\n        let instrumentTrack = score.tracks.filter(track => track.trackTypes.includes('Instrument'))[0];\n        instrumentTrack.measures.forEach(measure => {\n            measure.forEach(note => {\n                minNote[note.staff] = Math.min(minNote[note.staff], note.midi);\n                maxNote[note.staff] = Math.max(maxNote[note.staff], note.midi);\n            })\n        });\n\n        let staffTypes: StaffType[] = ['treble', 'bass'];\n        //if there was an issue, abort\n\n        // if bass clef is empty, then we create an empty clef // TODO: consider not displaying bass if it is empty.\n        if (minNote.bass === 128 && maxNote.bass === -1) {\n            minNote.bass = 48;\n            maxNote.bass = 60;\n        }\n\n        staffTypes.forEach(staff => {\n            if (minNote[staff] >= 128 || minNote[staff] < 0 || maxNote[staff] >= 128 || maxNote[staff] < 0) {\n                console.log(minNote[staff], maxNote[staff]);\n                throw new Error('An issue was detected while analyzing this work\\'s note range');\n            }\n        });\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine: Record<StaffType, number> = {\n            treble: getNoteLine(minNote.treble),\n            bass: getNoteLine(minNote.bass)\n        }\n        let maxLine: Record<StaffType, number> = {\n            treble: getNoteLine(maxNote.treble),\n            bass: getNoteLine(maxNote.bass)\n        }\n        staffTypes.forEach(staff => {\n            // find the closest note line\n            while (minLine[staff] % 7 !== 0 && minLine[staff] % 7 !== 3) minLine[staff]--;\n            while (maxLine[staff] % 7 !== 0 && maxLine[staff] % 7 !== 3) maxLine[staff]++;\n\n            // widen staff range if it is too small\n            if (Math.abs(maxLine[staff] - minLine[staff]) <= 1) {\n                maxLine[staff] += (maxLine[staff] % 7 === 0) ? 3 : 4;\n                minLine[staff] -= (minLine[staff] % 7 === 0) ? 4 : 3;\n            }\n        });\n        let staffHeights: Record<StaffType, number> = {\n            treble: (maxLine.treble - minLine.treble) * noteSymbolSize / 2,\n            bass: (maxLine.bass - minLine.bass) * noteSymbolSize / 2\n        }\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        // let measuresPerRow = Math.floor(availableMeasureSpace / measureWidth);\n        // if (measuresPerRow <= 0) {\n        //     throw new Error('Could not place a measure in the allowed space');\n        // }\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        //let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\n        // let beatsPerRow = beatsPerMeasure * measuresPerRow;\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        //calculate required height (vert padding + row height + row padding)\n        // let height = verticalPadding * 2 + rowNumber * (staffHeight + measureLabelSpace) + (rowNumber - 1) * rowPadding;\n\n        let getCurrentSignatures = (measureNumber: number): {currentTime: TimeSignature, currentKey: KeySignature} => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            let currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber);\n            let currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            // sometimes, signatures are defined on the second measure. Below lines handle such cases.\n            if (!currentTime) currentTime = score!.tracks[0].timeSignatures[0];\n            if (!currentKey) currentKey = score!.tracks[0].keySignatures[0];\n            return {currentTime, currentKey};\n        }\n\n        let measure = (x: number, y: number, measureNumber: number, staff: StaffType) => {\n            // TODO: handle pick up measures\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let key = 0;\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeights[staff] + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine[staff]; j <= maxLine[staff]; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + staffHeights[staff] - (j - minLine[staff]) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine[staff]) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                if (!track.trackTypes.includes('Instrument')) return; // we do not render notes for lyrics only track.\n                let notes = track.measures[measureNumber].filter(note => note.staff === staff);\n                notes.forEach((note, _idx) => {\n                    noteHeadSVG.push(noteHead(note, key++, staff));\n                    let tieStart = note.attributes.ties.includes(Tie.Start);\n                    let tieStop = note.attributes.ties.includes(Tie.Stop);\n                    let isLastMeasure = ((measureNumber + 1) % measuresPerRow === 0); // whether current measure is the last measure of the row\n                    let isLastNote = note.time + note.duration >= currentTime.beats; // whether the note reaches the end of the measure\n                    let noteSpansRow = tieStart && isLastMeasure && isLastNote; // whether tied note spans next row\n                    noteTailSVG.push(noteTail(note, key++, tieStart, tieStop, noteSpansRow, staff));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        }\n\n        let grandStaff = (i: number): JSX.Element => {\n            let trebleSpaceHeight = staffHeights.treble + measureLabelSpace + annotationSpace + noteSymbolSize / 2;\n            let bassStaffHeight = staffHeights.bass + measureLabelSpace + annotationSpace + noteSymbolSize / 2;\n            let grandStaffHeight = trebleSpaceHeight + bassStaffHeight + staffDistance;\n\n            return (\n                <div className={`snview-row snview-row-${i + 1}`} key={i} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${grandStaffHeight}`}>\n                        {staff(i, 'treble')}\n                        {staff(i, 'bass')}\n                    </svg>\n                </div>\n            );\n        }\n\n        let staff = (i: number, staff: StaffType): JSX.Element => {\n            let staffHeight = staffHeights[staff];\n            let trebleStaffHeight = staffHeights.treble + measureLabelSpace + noteSymbolSize / 2; // \n            let yOffset = staff === 'treble' ? 0 : trebleStaffHeight + staffDistance;\n            let staffName = staff === 'treble' ? staffLabels[0] : staffLabels[1];\n            return <g id={`row${i}${staff}`} key={staff + i} transform={`translate(${horizontalPadding}, ${yOffset})`}>\n                {devMode ? <rect y={measureLabelSpace} width={staffLabelSpace} height={staffHeight} fill=\"#ffdddd\" /> : null}\n                {devMode ? <rect x={staffLabelSpace} y={measureLabelSpace} width={octaveLabelSpace} height={staffHeight} fill=\"#ffddff\" /> : null}\n                <text x={staffLabelSpace} y={measureLabelSpace + staffHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">{staffName}</text>\n                <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />\n\n                {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                    measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j, staff)\n                )}\n            </g>\n        }\n\n\n        let noteTimeToPos = (noteTime: number, staff: StaffType) => ({\n            x: beatWidth * noteTime,\n            y: staffHeights[staff] + measureLabelSpace\n        });\n\n        // let beatsToPos = (beat: number) => {\n        //     let row = Math.floor(beat / beatsPerRow);\n        //     let measure = (beat - row * beatsPerRow) / beatsPerMeasure;\n        //     return {\n        //         row, measure,\n        //         ...rowMeasureToPos(row, measure)\n        //     };\n        // }\n        // let rowMeasureToPos = (row: number, measure: number) => ({\n        //     x: horizontalPadding + staffLabelSpace + octaveLabelSpace + measure * measureWidth,\n        //     y: verticalPadding + row * (staffHeight + measureLabelSpace + rowPadding) + staffHeight + measureLabelSpace\n        // });\n\n        let noteTail = (note: Note, i: number, tieStart: boolean, tieStop: boolean, noteSpansRow: boolean, staff: StaffType) => {\n            let key = 0;\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine[staff];\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time, staff);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration, staff);\n\n            // let pushBox = (x1: number, x2: number, y: number) => {\n            //     boxes.push(<rect key={key++} x={x1} y={y - (line + 1) * noteSymbolSize / 2} width={x2 - x1} height={noteSymbolSize} fill={colorPreferenceStyles[noteDurationColor]} fillOpacity={.5} />);\n            // }\n            // while (rowStart < rowEnd) {\n            //     //only executes rarely so it is faster to compute this value in the loop\n            //     pushBox(xStart, horizontalPadding + staffLabelSpace + octaveLabelSpace + measuresPerRow * measureWidth, yStart);\n            //     rowStart++;\n            //     measureStart = 0;\n            //     let {x, y} = rowMeasureToPos(rowStart, measureStart);\n            //     xStart = x;\n            //     yStart = y;\n            // }\n\n            let roundingSpace = Math.max(Math.min(noteSymbolSize, xEnd - xStart), 0);\n            let radiusStart = roundingSpace / 4;\n            let radiusEnd = roundingSpace / 2;\n            let pointedEnd = noteSpansRow;\n\n            if (tieStart) {\n                //if(!noteSpansRow){ //this check prevents pointed ends from extending past the end of the row\n                radiusEnd = 0;\n                //}\n            }\n            if (tieStop) {\n                radiusStart = 0;\n            }\n            boxes.push(\n                <path\n                    key={key++}\n                    d={`\n                        M${xStart + radiusStart} ${yStart - (line + 1) * noteSymbolSize / 2}\n                        H${xEnd - radiusEnd}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${radiusEnd} ${radiusEnd}\n                        ${pointedEnd ? `\n                            l${noteSymbolSize / 2 - radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                            l${-noteSymbolSize / 2 + radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                        `: `v${noteSymbolSize - 2 * radiusEnd}`}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${-radiusEnd} ${radiusEnd}\n                        H${xStart + radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${-radiusStart} ${-radiusStart}\n                        v${-noteSymbolSize + 2 * radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${radiusStart} ${-radiusStart}\n                        z\n                    `}\n                    fill={colorPreferenceStyles[noteDurationColor]}\n                    fillOpacity={0.5}\n                />\n            );\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        }\n\n        let noteHead = (note: Note, i: number, staff: StaffType) => {\n            if (note.attributes.ties.includes(Tie.Stop))\n                return null!;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine[staff];\n\n            let {x, y} = noteTimeToPos(note.time, staff);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = noteSymbolSize / 8;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let autoNoteShape = accidentalType === 'sharp' ? sharpNoteShape : flatNoteShape;\n            let shape = {\n                [Accidental.Natural]: naturalNoteShape,\n                [Accidental.Flat]: accidentalType === 'auto' ? flatNoteShape : autoNoteShape,\n                [Accidental.Sharp]: accidentalType === 'auto' ? sharpNoteShape : autoNoteShape,\n            }[accidental];\n\n            switch (shape) {\n                case '●':\n                    return <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '◼':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▲':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▼':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '○':\n                    return <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                case '☐':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '△':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2 + strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '▽':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2 - strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '⊗':\n                    return (<g key={i}>\n                        <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                        <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n                case '⊠':\n                    return (<g key={i}>\n                        <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y - noteSymbolSize / 2 + strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y + noteSymbolSize / 2 - strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y + noteSymbolSize / 2 - strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y - noteSymbolSize / 2 + strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n            }\n        }\n\n        // let devSvg = devMode ? (\n        //     <g id=\"devMode\">\n        //         {<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\" />}\n        //         {<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<rect x={horizontalPadding} y={verticalPadding} width={width - horizontalPadding * 2} height={height - verticalPadding * 2} fill=\"#ddffdd\" />}\n        //     </g>\n        // ) : null;\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => grandStaff(i));\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                {/*devSvg*/}\n                <div className={`snview-row snview-row-0`} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${180}`}>\n                        <text x={width / 2} y={50} fontSize={40} textAnchor=\"middle\" alignmentBaseline=\"hanging\">{title}</text>\n                        <text x={70} y={170} fontSize={25} textAnchor=\"start\">60 bpm</text>\n                        <text x={width - 70} y={170} fontSize={25} textAnchor=\"end\">{author}</text>\n                    </svg>\n                </div>\n                {svgRows}\n            </div>\n        );\n    } catch (e) {\n        console.error(e);\n        if (!dialogState.shown) {\n            showError('An issue was encountered while generating WYSIWYP output for the selected file.');\n        }\n        //console.error(e);\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n}\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n}\n\nexport const showPrompt = (title: string, body: any, buttonText1: string, buttonAction1: () => void, buttonText2: string, buttonAction2: () => void): DialogAction => {\n    return {\n        type: 'open', val: {\n            title, width: 400, height: 275, contents: <div style={styles.body}>\n                <div style={styles.space} />\n                <div style={styles.top}>\n                    {body}\n                </div>\n                <div style={styles.space} />\n                <div style={styles.bottom}>\n                    <span style={styles.link} onClick={buttonAction1}>\n                        {buttonText1}\n                    </span>\n                    <span style={{...styles.link,color:'indianred'}} onClick={buttonAction2}>\n                        {buttonText2}\n                    </span>\n                </div>\n            </div>}};\n}\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n        padding:'0 30px',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","import MusicXML from 'musicxml-interfaces';\nimport {Note, TimeSignature, KeySignature, Tracks, Score, Tie, Measure, Track, TrackType} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nconst isScorePart = (part: MusicXML.PartGroup | MusicXML.ScorePart): part is MusicXML.ScorePart => {\n    return part && part._class === 'ScorePart';\n};\n\n// get piano part name from xml\nconst getPianoPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    const pianoPart = xml.partList.find(part => isScorePart(part) && part.partName.partName.toLowerCase() === 'piano');\n    return pianoPart ? (pianoPart as MusicXML.ScorePart).id : undefined;\n    // if (!pianoPart) return undefined;\n    // const pianoPartId = (pianoPart as MusicXML.ScorePart).id;\n\n    // get the number of staves \n    // let numStaves: number | undefined;\n    // xml.measures.some(measure => measure.parts[pianoPartId].some(entry => numStaves = entry.staves)); // loop until entry.staves is defined\n    // if (numStaves === undefined) numStaves = 1; // default is 1\n    // return {pianoPartId, numStaves};\n};\n\nconst getLyricsPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    let lyricsPartId: string | undefined;\n    // loop until we find a part with some lyrics defined. \n    xml.measures.some(measure => {\n        return Object.keys(measure.parts).some(partName => {\n            let part = measure.parts[partName];\n            let partContainsLyrics = part.some(entry => entry.lyrics !== undefined);\n            lyricsPartId = partContainsLyrics ? partName : undefined;\n            return lyricsPartId !== undefined;\n        });\n    });\n    return lyricsPartId;\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let lyricsPartId = getLyricsPartID(xml);\n    let pianoPartId = getPianoPartID(xml);\n\n    // currently, SNApp renders piano and lyric parts. We store the ids of the tracks we have to parse below.\n    // let trackTypeMap: Partial<Record<string, TrackType>> = {\n    //     [pianoPartId]: 'Piano',\n    //     ...(lyricsPartId && {[lyricsPartId]: 'Lyrics'}) // conditionally assign lyrics part\n    // }\n\n    let currentBeatType = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: Measure[],\n        }\n    } = {};\n\n    /** \n     * Multitrack Handling Logic\n     * \n     * We parse:\n     *      1) just the instrument part from a two part work for instrument and vocal\n     *      2) just the piano part from a work with multiple instrument parts\n     *      3) just one instrument part from a work with multiple instruments and none of them are piano\n     */\n\n    // parts that we want to parse. We may add more ids here if we decide to render more instruments parts.\n    let trackIDsToParse: string[] = [];\n\n    let instrumentId = pianoPartId !== undefined ? pianoPartId : 'P1';\n    trackIDsToParse.push(instrumentId);\n    if (lyricsPartId !== undefined && !trackIDsToParse.includes(lyricsPartId)) {\n        trackIDsToParse.push(lyricsPartId) \n    }\n    // console.log(`lyrics partId: ${lyricsPartId}, instrument partId: ${instrumentId}`);\n\n    xml.measures.forEach((measure, measureNumber) => {\n        trackIDsToParse.forEach(partName => {\n            if (measure.parts[partName] === undefined) return; // if part has not started yet, skip this measure.\n\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length)\n                };\n            }\n            let part = parts[partName];\n            let notes: Note[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n                            if (entry.pitch !== undefined) {\n                                let entryTies = entry.ties as {type: number}[];\n                                let staffNumber = entry.staff ? entry.staff : 1;\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    staff: staffNumber === 1 ? 'treble' : 'bass',\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : []\n                                    }\n                                });\n                            }\n                            part.measures[measureNumber] = notes;\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        break;\n                    case 'Sound':\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(partId => {\n        let trackTypes: TrackType[] = []\n        if (partId === lyricsPartId) trackTypes.push('Lyrics');\n        if (partId === instrumentId) trackTypes.push('Instrument');\n\n        return {\n            measures: parts[partId].measures,\n            timeSignatures: parts[partId].timeSignatures,\n            keySignatures: parts[partId].keySignatures,\n            trackTypes: trackTypes\n        } as Track;\n    });\n\n    // TODO: handle grace note \n    // handle unprovided signatures\n    tracks.forEach(track => {\n        // add default values for key signatures if it is not provided.\n        if (track.keySignatures.length === 0) track.keySignatures.push({measure: 0, fifths: 0});\n\n        if (track.timeSignatures.length === 0) {\n            if (track.measures.length === 1) {\n                // case 1: all notes grouped into a single measure\n                let measure = track.measures[0];\n                let newMeasures: Note[][] = Array(Math.ceil(measure.length / 4)).fill([]).map((_, index) => index * 4).map(start => measure.slice(start, start + 4)); // divide notes into chunks of four\n                newMeasures.forEach((measure, idx) => measure.forEach(note => note.time -= 4 * idx)); // shift note start time appropriately\n                track.timeSignatures.push({measure: newMeasures.length, beats: 4, beatTypes: 4})\n                track.measures = newMeasures;\n            } else {\n                // case 2: time signature is not provided at all\n                let currentMeasureLength = 4; // start with assuming 4/4 time signature.\n                track.measures.forEach((measure, measureNumber) => {\n                    let lastNote = measure[measure.length - 1];\n                    let measureLength = Math.max(lastNote.time + lastNote.duration);\n                    if (currentMeasureLength !== measureLength) {\n                        track.timeSignatures.push({measure: measureNumber, beats: measureLength, beatTypes: 4});\n                        currentMeasureLength = measureLength;\n                    }\n                });\n            }\n        }\n    });\n    return {tracks}\n};","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";"],"sourceRoot":""}