{"version":3,"sources":["contexts/Dialog.tsx","components/Frame.tsx","contexts/CurrentFile.tsx","pages/Convert.tsx","pages/NotFound.tsx","contexts/Global.tsx","components/global/Dialog.tsx","components/global/Global.tsx","pages/Menu.tsx","Router.tsx","serviceWorker.ts","index.tsx","parser/Types.tsx","contexts/Preferences.tsx","components/SNView.tsx","util/Util.tsx","util/Dialog.tsx","parser/MusicXML.tsx","images/upload.svg"],"names":["initialState","shown","DialogContext","createContext","undefined","DialogStateProvider","_ref","children","reducer","useRef","state","action","type","data","val","_useReducer","useReducer","current","_useReducer2","Object","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","dispatch","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","Provider","value","useDialogState","useContext","styles","appContainer","overflow","header","paddingTop","fontStyle","fontWeight","fontSize","alignItems","textAlign","letterSpacing","left","top","height","transform","backgroundColor","minWidth","position","page","sideBar","overflowY","overflowX","right","Frame","sideMenu","showSideMenu","react_default","style","id","objectSpread","className","concat","CurrentFileContext","CurrentFileStateProvider","slicedToArray","useCurrentFileState","leftSide","float","width","svg","marginRight","display","color","marginTop","marginLeft","cursor","subHeader","SNView","sideBarTop","justifyContent","borderBottom","sideBarTopOptions","whiteSpace","fileInput","padding","opacity","sideBarContent","line","marginBottom","name","hidden","Convert","_useState","useState","_useState2","show","setShow","_usePreferencesState","usePreferencesState","_usePreferencesState2","preferences","setPreferences","_useCurrentFileState","_useCurrentFileState2","currentFile","setCurrentFile","_useState3","_useState4","showPreferencesButton","setShowPreferencesButton","useEffect","timeout","setTimeout","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","file_name","wrap","_context","prev","next","localStorage","getItem","JSON","parse","filter","x","e","console","log","navigate","stop","sidebar","title","onClick","file","Blob","stringify","saveAs","exportFile","accept","onChange","reader","FileReader","onload","parsed","target","result","error","readAsText","files","importFile","measuresPerRow","measuresPerRowOptions","map","key","accidentalType","accidentalTypeOptions","noteScale","scalePreferenceOptions","staffScale","horizontalSpacing","spacingPreferenceOptions","verticalSpacing","naturalNoteShape","noteHeadPreferenceOptions","sharpNoteShape","flatNoteShape","noteSymbolColor","colorPreferenceOptions","noteDurationColor","components_Frame","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","points","margin","document","getElementById","canvas","getElementsByClassName","pdf","jsPDF","rows","nextRowY","i","length","row","_split$map","getElementsByTagName","getAttribute","split","parseInt","_split$map2","w","h","canvasRowHeight","Math","ceil","pdfRowHeight","addPage","ctx","getContext","fillStyle","fillRect","canvg","innerHTML","ignoreClear","addImage","save","openPDF","padding-right","Fragment","cx","cy","r","xml","forcedWidth","body","NotFound","GlobalStateProvider","PreferencesStateProvider","forEach","bg","frame","border","borderRadius","lineHeight","userSelect","headerRight","maxHeight","buttons","bottom","Dialog","_useDialogState","dialog","active","startX","startY","mouseX","mouseY","y","drag","setDrag","onMouseMove","clientX","clientY","onMouseUp","onMouseLeave","onMouseDown","contents","Global","components","X","container","flexDirection","item","flex","recentFiles","maxWidth","recentFilesInner","paddingLeft","paddingRight","recentFilesItem","textOverflow","recentFilesSeparator","recentFilesItemInner","link","deleteAll","icon","Menu","setRecentFiles","setDialogState","showError","recent","loadFile","setItem","date_opened","Date","getTime","toConsumableArray","deleteFile","newRecentFiles","deleteSinglePrompt","deleteAllFiles","onUpload","fileName","Array","from","floor","random","toString","join","date_created","react","date","getMonth","getDate","getFullYear","x1","y1","x2","y2","src","alt","replace","failedReads","fail","reader1","Error","zip","details","parser","detailsDOM","nodes","musicXMLPath","musicXMLData","JSZip","loadAsync","sent","async","DOMParser","parseFromString","MusicXML","parseScore","measures","t0","readAsArrayBuffer","reader2","uploadFile","Router","contexts_Global","es","pages_Menu","path","pages_Convert","pages_NotFound","global_Global","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_Router","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","Tie","__webpack_require__","__webpack_exports__","colorPreferenceStyles","black","grey","red","orange","yellow","green","blue","purple","keys","PreferencesContext","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","Accidental","ref","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","setWidth","score","setScore","_useDialogState2","dialogState","setImmediate","showErrorRef","callback","newWidth","getBoundingClientRect","removeEventListener","react__WEBPACK_IMPORTED_MODULE_3___default","noteSymbolSize","small","medium","large","rowPadding","narrow","moderate","wide","horizontalPadding","staffLabelSpace","scoreWidth","beatWidth","tracks","timeSignatures","beats","keyFifths","keySignatures","fifths","staffLabels","octaveLines","number","accidentalMap","noteMap","getNoteAccidental","note","Sharp","Flat","Natural","getNoteLine","movementTitle","work","workTitle","author","credits","creditWords","credit","words","abs","minNote","treble","bass","maxNote","track","trackTypes","includes","measure","staff","min","midi","max","staffTypes","minLine","maxLine","staffHeights","beatsPerMeasure","measureWidth","measureNumber","reduce","accum","rowNumber","_getCurrentSignatures","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","reverse","currentTime","find","timeSignature","currentKey","keySignature","getCurrentSignatures","measureSVG","push","measureLabelSpace","j","octaveLine","lineY","textAnchor","dominantBaseline","tickX","tickSize","noteHeadSVG","noteTailSVG","_idx","noteHead","tieStart","attributes","ties","Start","tieStop","Stop","isLastMeasure","isLastNote","time","duration","noteSpansRow","noteTail","staffHeight","yOffset","dynamicsSpace","staffName","range","noteTimeToPos","noteTime","boxes","_noteTimeToPos","xStart","yStart","xEnd","roundingSpace","radiusStart","radiusEnd","pointedEnd","fillOpacity","_Accidental$Natural$A","accidental","_noteTimeToPos3","triHeight","sqrt","crossCircleWidth","autoNoteShape","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","svgRows","grandStaffHeight","fingeringSpace","paddingBottom","grandStaff","alignmentBaseline","res","close","showMessage","buttonText","buttonAction","space","showPrompt","buttonText1","buttonAction1","buttonText2","buttonAction2","_Users_ahharvey_Documents_GitHub_SNapp_client_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_Types__WEBPACK_IMPORTED_MODULE_0__","pitchToMidi","pitch","step","c","f","g","b","toLowerCase","octave","alter","round","lyricsPartId","some","parts","partName","partContainsLyrics","entry","lyrics","getLyricsPartID","pianoPartId","pianoPart","partList","part","_class","isScorePart","getPianoPartID","currentBeatType","trackIDsToParse","instrumentId","divisions","progress","notes","divisionsToNoteLength","chord","rest","entryTies","staffNumber","tie","times","beatTypes","partId","newMeasures","_","index","start","slice","idx","currentMeasureLength","lastNote","measureLength","module","exports","p"],"mappings":"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","file":"static/js/main.92dba8aa.chunk.js","sourcesContent":["import React, {createContext, useContext, useReducer, useRef} from 'react';\n\nexport type state = {\n    shown: boolean,\n    data?: {\n        title: string,\n        contents: any,\n        width: number,\n        height: number,\n    }\n};\nexport type action = {\n    type: 'open', val: state['data'],\n} | {\n    type: 'close',\n};\n\nlet initialState: state = {\n    shown: false,\n};\n\nexport const DialogContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const DialogStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'open':\n                return {\n                    shown: true,\n                    data: action.val,\n                };\n            case 'close':\n                return {shown: false};\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <DialogContext.Provider value={[state, dispatch]}>\n            {children}\n        </DialogContext.Provider>\n    );\n};\nexport const useDialogState = () => useContext(DialogContext);\n","import React, { CSSProperties } from \"react\";\n\ntype Props = {\n  header: string;\n  fontSize?: number;\n  sideMenu?: React.ReactNode;\n  showSideMenu?: boolean;\n};\n\nconst Frame: React.FC<Props> = ({\n  header,\n  fontSize,\n  sideMenu,\n  showSideMenu,\n  children\n}) => {\n  return (\n    <div style={styles.appContainer}>\n      <div id=\"header\" style={{ ...styles.header, fontSize: fontSize || 45 }}>\n        {header}\n        {/* <div style={styles.headerLeft}>\n                    {headerLeft}\n                </div>\n                <div style={styles.headerRight}>\n                    {headerRight}\n                </div> */}\n      </div>\n\n      <div style={styles.page}>{children}</div>\n      <div className={`animated ${showSideMenu?'open':'close'}`}\n        style={{...styles.sideBar}}>\n            {sideMenu}\n      </div>\n    </div>\n  );\n};\n\nconst styleMap = {\n  appContainer: {\n    overflow: \"hidden\"\n  },\n  header: {\n    paddingTop: \"8px\",\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fontSize: \"42px\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    letterSpacing: \"0.15em\",\n    left: \"50%\",\n    top: \"0px\",\n    height: \"80px\",\n    transform: \"translate(-50%,0px)\",\n    backgroundColor: \"#31B7D6\",\n    minWidth: \"600px\",\n    position: \"absolute\"\n  },\n  page: {\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    overflow: \"auto\"\n  },\n  sideBar: {\n    overflowY: 'scroll',\n    overflowX: 'hidden',\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    top: \"80px\",\n    height: \"calc(100% - 80px)\",\n    left: \"auto\",\n    right: \"0px\"\n  }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Frame;\n","import React, {createContext, useContext, useReducer, useRef} from 'react';\nimport MusicXML from 'musicxml-interfaces';\n\nexport type state = {\n    id?: string,\n    file_name?: string,\n    data?: MusicXML.ScoreTimewise\n};\nexport type action = {\n    type: 'set', val: state,\n};\n\nlet initialState: state = {};\n\nexport const CurrentFileContext = createContext(undefined! as [state, React.Dispatch<action>]);\nexport const CurrentFileStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef((state: state, action: action): state => {\n        switch (action.type) {\n            case 'set':\n                return action.val;\n        }\n    });\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <CurrentFileContext.Provider value={[state, dispatch]}>\n            {children}\n        </CurrentFileContext.Provider>\n    );\n};\nexport const useCurrentFileState = () => useContext(CurrentFileContext);\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport SNView from '../components/SNView';\nimport Frame from '../components/Frame';\nimport {saveAs} from 'file-saver';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {\n    usePreferencesState, colorPreferenceOptions, scalePreferenceOptions, \n    spacingPreferenceOptions, noteHeadPreferenceOptions, measuresPerRowOptions, accidentalTypeOptions\n} from '../contexts/Preferences';\nimport jsPDF from 'jspdf';\nimport canvg from 'canvg';\n// import {useDialogState} from '../contexts/Dialog';\n// import * as Dialog from '../util/Dialog';\n\ntype Props = {} & RouteComponentProps;\n\nconst Convert: React.FC<Props> = () => {\n\n    let [show, setShow] = useState(false);\n\n    let [preferences, setPreferences] = usePreferencesState();\n    let [currentFile, setCurrentFile] = useCurrentFileState();\n    // let [, setDialogState] = useDialogState();\n\n    let [showPreferencesButton, setShowPreferencesButton] = useState(true);\n\n    // let showError = (error: string)=>{\n    //     setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n    //         setDialogState(Dialog.close());\n    //     }));\n    // }\n\n    useEffect(() => {\n        if (show) {\n            setShowPreferencesButton(false);\n            return () => {};\n        } else {\n            let timeout = setTimeout(() => {\n                setShowPreferencesButton(true);\n            }, 1000);\n            return () => {\n                clearTimeout(timeout);\n            }\n        }\n    }, [show])\n\n    useEffect(() => {\n        (async () => {\n            // If the current file is not in the context,\n            if (currentFile.id === undefined) {\n                try {\n                    // Load the current file data from localStorage\n                    let id = localStorage.getItem('current_file')!;\n                    let file_name = JSON.parse(localStorage.getItem('recent_files')!).filter((x: any) => x.id === id)[0].file_name;\n                    let data = JSON.parse(localStorage.getItem(id)!);\n                    setCurrentFile({type: 'set', val: {id, file_name, data}});\n                } catch (e) {\n                    console.log(e);\n                    navigate('..');\n                }\n            }\n        })();\n    }, [currentFile.id, setCurrentFile]);\n\n    let openPDF = () => {\n        try {\n\n            let margin = 5;\n            let padding = 5;\n\n            let hidden = document.getElementById('hidden-pdf-generation') as HTMLDivElement;\n            let canvas = hidden.getElementsByClassName('canvas')[0] as HTMLCanvasElement;\n            \n            let pdf = new jsPDF(); //210 x 297 mm (A4 paper dimensions)\n            let width = 210;\n            let height = 297;\n\n            // should change with preferences\n            margin = width*margin/100;\n            padding = width*padding/100;\n\n\n            let rows = hidden.getElementsByClassName('snview-row');\n            \n            let nextRowY = margin;\n            for(let i = 0; i < rows.length; i++) {\n                let row = rows[i];\n\n                let [,,w,h] = row.getElementsByTagName('svg')[0].getAttribute('viewBox')!.split(' ').map(x=>parseInt(x));\n                let canvasRowHeight = Math.ceil(1000*h/w);\n                let pdfRowHeight = Math.ceil((width-margin*2)*h/w);\n\n                if(nextRowY+pdfRowHeight > height-margin){\n                    pdf.addPage();\n                    nextRowY = margin;\n                }\n\n                canvas.height = canvasRowHeight;\n                let ctx = canvas.getContext(\"2d\")!;\n                ctx.fillStyle = \"white\";\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n                ctx.fillStyle = \"black\";\n                canvg(canvas,row.innerHTML,{ignoreClear: true});\n                pdf.addImage(canvas, 'JPEG', margin, nextRowY, width-margin*2, pdfRowHeight);\n\n                nextRowY += pdfRowHeight+padding;\n            }\n            \n            \n            \n            // pdf.rect(0,0,200,287,'F');\n            // pdf.addPage();\n            // pdf.rect(0,10,200,287,'F');\n\n            //(pdf as any).addSvgAsImage(document.getElementById('snview')!.innerHTML, 0, 0, 1000, 1000);\n            pdf.save(`${currentFile.file_name || 'WYSIWYP'}.pdf`);\n        } catch (e) {\n            console.error(e);\n        }\n    };\n    let exportFile = () => {\n        var file = new Blob([JSON.stringify(preferences, null, 4)], {type: 'text/plain'});\n        saveAs(file, 'preferences.snapp');\n    };\n    let importFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        try {\n            let reader = new FileReader();\n            reader.onload = function (e) {\n                try {\n                    let parsed = JSON.parse((e.target as any).result);\n                    setPreferences({type: 'set', val: parsed});\n                } catch (e) {\n                    console.error(e);\n                }\n            };\n            reader.readAsText((e.target as any).files[0]);\n        } catch (e) {\n            console.error(e);\n        }\n        e.target.value = \"\";\n    };\n    let sidebar = (<div style={styles.sideBar}>\n        <div style={styles.sideBarTop}>\n            <div id=\"export\" title=\"Click to export\" style={styles.sideBarTopOptions} onClick={() => {exportFile();}}>\n                Export\n            </div>\n            <div id=\"import\" style={styles.sideBarTopOptions}>\n                Import\n                <input style={styles.fileInput} type=\"file\" title=\"Click to import\" accept=\".snapp\" onChange={(e) => {importFile(e);}}></input>\n            </div>\n            <div id=\"close\" style={styles.sideBarTopOptions} onClick={() => {setShow(false);}}>\n                Close X\n            </div>\n        </div>\n\n        <div style={styles.sideBarContent}>\n            <div>\n            \n            <div style={styles.line}>\n                <div style={styles.name}>Measures per Row</div>\n                <select value={preferences.measuresPerRow} onChange={\n                    (e) => {setPreferences({type: 'set', val: {measuresPerRow: e.target.value as any}});}\n                }>{measuresPerRowOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Accidental Type</div>\n                <select value={preferences.accidentalType} onChange={\n                    (e) => {setPreferences({type: 'set', val: {accidentalType: e.target.value as any}});}\n                }>{accidentalTypeOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Note Size</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.noteScale} onChange={\n                    (e) => {setPreferences({type: 'set', val: {noteScale: e.target.value as any}});}\n                }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Clef Size</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.staffScale} onChange={\n                    (e) => {setPreferences({type: 'set', val: {staffScale: e.target.value as any}});}\n                }>{scalePreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Margin Size</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.horizontalSpacing} onChange={\n                    (e) => {setPreferences({type: 'set', val: {horizontalSpacing: e.target.value as any}});}\n                }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Staff Spacing Size</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.verticalSpacing} onChange={\n                    (e) => {setPreferences({type: 'set', val: {verticalSpacing: e.target.value as any}});}\n                }>{spacingPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Natural Notehead</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.naturalNoteShape} onChange={\n                    (e) => {setPreferences({type: 'set', val: {naturalNoteShape: e.target.value as any}});}\n                }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Sharp Notehead</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.sharpNoteShape} onChange={\n                    (e) => {setPreferences({type: 'set', val: {sharpNoteShape: e.target.value as any}});}\n                }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Flat Notehead</div>\n                {/* deleted value and onchange */}\n                <select value={preferences.flatNoteShape} onChange={\n                    (e) => {setPreferences({type: 'set', val: {flatNoteShape: e.target.value as any}});}\n                }>{noteHeadPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Notehead Color</div>\n                <select value={preferences.noteSymbolColor} onChange={\n                    (e) => {setPreferences({type: 'set', val: {noteSymbolColor: e.target.value as any}});}\n                }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n            <div style={styles.line}>\n                <div style={styles.name}>Duration Color</div>\n                <select value={preferences.noteDurationColor} onChange={\n                    (e) => {setPreferences({type: 'set', val: {noteDurationColor: e.target.value as any}});}\n                }>{colorPreferenceOptions.map(x => <option key={x}>{x}</option>)}</select>\n            </div>\n\n        </div>\n        </div>\n\n    </div>)\n\n    return (\n        <Frame header=\"SNapp\" showSideMenu={show} sideMenu={sidebar}>\n            <div style={styles.subHeader}>\n\n                <div id=\"home\" style={styles.left} onClick={() => {navigate('/');}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\"></path><polyline points=\"9 22 9 12 15 12 15 22\"></polyline></svg>\n                    Home\n                </div>\n                <div style={styles.left} onClick={() => {openPDF();}}>\n                    <svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" padding-right=\"5px\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"></path><polyline points=\"13 2 13 9 20 9\"></polyline></svg>\n                    Save as PDF\n                </div>\n\n                <div id=\"preference\" style={styles.right} onClick={() => {setShow(true);}} >\n\n                    {!showPreferencesButton ? <></> : <><svg style={styles.svg} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"3\"></circle><path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path></svg>Preferences</>}\n\n                </div>\n\n            </div>\n            <div style={styles.SNView}>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} />}\n            </div>\n            <div id=\"hidden-pdf-generation\" style={styles.hidden}>\n                <canvas className=\"canvas\" width={1000} height={1000}/>\n                {currentFile.data === undefined ? null : <SNView xml={currentFile.data} forcedWidth={1000} />}\n            </div>\n\n        </Frame>\n\n\n    );\n};\n\nconst styleMap = {\n    leftSide: {\n        float: 'left',\n        width: '80%',\n    },\n\n    svg: {\n        marginRight: '7px',\n    },\n    // snv:{\n    //     top: '200px',\n    // },\n\n    left: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        color: '#31B7D6',\n        marginTop: '15px',\n        marginLeft: '25px',\n        fontSize: '23px',\n        fontWeight: 'bold',\n        cursor: 'pointer',\n        position: 'relative',\n        float: 'left',\n        width: 'auto',\n    },\n    right: {\n        display: 'flex',\n        alignItems: 'center',\n        height: 'auto',\n        marginTop: '15px',\n        fontWeight: 'bold',\n        color: '#31B7D6',\n        fontSize: '23px',\n        marginRight: '25px',\n        position: 'relative',\n        float: 'right',\n        width: 'auto',\n        cursor: 'pointer',\n    },\n\n    subHeader: {\n        height: '65px',\n    },\n    SNView: {\n        top: '65px',\n        height: 'auto',\n    },\n    sideBar: {\n        color: 'white',\n        minWidth: '350px',\n    },\n    sideBarTop: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n\n        borderBottom: 'solid 1px #bbb',\n        height: '65px',\n        color: '#31B7D6',\n        fontSize: '23px',\n        fontWeight: 'bold',\n    },\n    sideBarTopOptions: {\n        position: 'relative',\n        width: '33%',\n        height: 'auto',\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        cursor: 'pointer',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: '0px',\n        width: '100%',\n        height: '100%',\n        cursor: 'pointer',\n        padding: '0px',\n        opacity: 0,\n    },\n    sideBarContent: {\n        position: 'absolute',\n        top: '65px',\n        height: \"calc(100% - 65px)\",\n    },\n    line: {\n        marginTop: '30px',\n        marginBottom: '30px',\n        justifyContent: 'center',\n        alignItems: 'baseline',\n        display: 'flex',\n        position: 'relative',\n        height: 'auto',\n        width: '100%'\n    },\n    name: {\n        position: 'relative',\n        width: '50%',\n        display: 'inline-block'\n    },\n    hidden: {\n        width: '0px',\n        height: '0px',\n        overflow: 'hidden',\n        opacity: .01,\n    }\n\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\n\nexport default Convert;\n","import React, {CSSProperties} from 'react';\nimport {RouteComponentProps} from \"@reach/router\";\n\ntype Props = {} & RouteComponentProps;\n\nconst NotFound: React.FC<Props> = () => {\n    return (\n        <div style={styles.body}>\n            That page could not be found\n        </div>\n    );\n};\n\nconst styleMap = {\n    body: {\n        top: '50%',\n        height: 'auto',\n        transform: 'translate(0px,-50px)',\n        textAlign: 'center',\n        fontSize: '22px',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap,CSSProperties> = styleMap;\n\nexport default NotFound;\n","import React from 'react';\nimport {DialogStateProvider} from './Dialog';\nimport {CurrentFileStateProvider} from './CurrentFile';\nimport {PreferencesStateProvider} from './Preferences';\n\nconst GlobalStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let stateProviders = [DialogStateProvider, CurrentFileStateProvider, PreferencesStateProvider] as React.FunctionComponent[];\n    stateProviders.forEach(x=>{\n        children = x({children});\n    });\n    return <>{children}</>;\n};\nexport default GlobalStateProvider;\n","import React, {useEffect, useState, CSSProperties} from 'react';\nimport {useDialogState} from '../../contexts/Dialog';\n//import Button from '../Button';\n\ntype Props = {};\n\nconst Dialog: React.FC<Props> = () => {\n    \n    let [dialog,] = useDialogState();\n    let data = dialog.data!;\n\n    let [drag, setDrag] = useState({active: false, startX: 0, startY: 0, mouseX: 0, mouseY: 0, x: 0, y: 0});\n\n    useEffect(()=>{\n        if(drag.x !== 0 && drag.y !== 0 && !dialog.shown){\n            setDrag({...drag, x: 0, y: 0});\n        }\n    },[drag,dialog.shown]);\n\n    return (\n        !dialog.shown?null:<div\n            style={styles.bg}\n            onMouseMove={(e)=>{setDrag({...drag, mouseX: e.clientX, mouseY: e.clientY, ...(drag.active?{x: drag.mouseX-drag.startX, y: drag.mouseY-drag.startY}:{})});}}\n            onMouseUp={()=>{setDrag({...drag, active: false});}}\n            onMouseLeave={()=>{setDrag({...drag, active: false});}}\n        >\n            <div style={{\n                ...styles.frame,\n                top: `calc(50% + ${drag.y}px)`,\n                left: `calc(50% + ${drag.x}px)`,\n                width: `${data.width}px`,\n                height: `${data.height}px`,\n            }}>\n                <div style={{...styles.header, fontSize: 30 || 45}}\n                    onMouseDown={()=>{setDrag({...drag, active: true, startX: drag.mouseX-drag.x, startY: drag.mouseY-drag.y});}}\n                >\n                    {data.title}\n                    <div style={styles.headerRight}>\n                        {undefined || ''}\n                    </div>\n                </div>\n                <div style={styles.body}>\n                    {data.contents}\n                    {/*<div style={styles.buttons}><Button text={data.buttons[0].text} action={data.buttons[0].action || (()=>{dispatchDialog({type: 'close'})})} /></div>*/}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst styleMap = {\n    bg: {\n        position: 'fixed',\n        backgroundColor: '#00000099',\n    },\n    frame: {\n        border: '2px solid #444',\n        overflow: 'hidden',\n        transform: 'translate(-50%,-50%)',\n        borderRadius: '10px',\n    },\n    header: {\n        height: '50px',\n        backgroundColor: '#ddd',\n        lineHeight: '50px',\n        textAlign: 'center',\n        userSelect: 'none',\n        borderBottom: '1px solid #444',\n    },\n    headerRight: {\n        left: 'auto',\n        right: '20px',\n        width: 'auto',\n        fontSize: '15px',\n    },\n    body: {\n        top: '50px',\n        backgroundColor: '#fff',\n        height: 'calc(100% - 50px)',\n    },\n    page: {\n        top: 'calc(50% - 40px)',\n        left: '50%',\n        height: 'auto',\n        width: '85%',\n        maxHeight: 'calc(100% - 120px)',\n        textAlign: 'center',\n        fontSize: '25px',\n        transform: 'translate(-50%, -50%)',\n        overflowY: 'auto',\n    },\n    buttons: {\n        top: 'auto',\n        bottom: '20px',\n        left: '50%',\n        width: '200px',\n        height: '60px',\n        transform: 'translate(-50%, 0px)',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Dialog;\n","import React from 'react';\nimport Dialog from './Dialog';\n\nconst Global: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let components = [Dialog] as React.FunctionComponent[];\n    components.forEach(x=>{\n        children = x({children});\n    });\n    return <>{components.map((X,i)=><X key={i}></X>)}</>;\n};\nexport default Global;\n","import React, {CSSProperties, useState, useEffect, Fragment} from 'react';\nimport {RouteComponentProps, navigate} from \"@reach/router\";\nimport Frame from '../components/Frame';\nimport svg from '../images/upload.svg';\nimport MusicXML, {ScoreTimewise} from 'musicxml-interfaces';\nimport {useCurrentFileState} from '../contexts/CurrentFile';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport JSZip from 'jszip';\n\ntype Props = {} & RouteComponentProps;\n\nconst Menu: React.FC<Props> = () => {\n    type recentFile = {\n        file_name: string,\n        date_created: number,\n        date_opened: number,\n        id: string,\n    };\n\n    let [recentFiles, setRecentFiles] = useState<recentFile[]>(undefined!);\n\n    let [, setDialogState] = useDialogState();\n    let [, setCurrentFile] = useCurrentFileState();\n\n    let showError = (error: string)=>{\n        setDialogState(Dialog.showMessage('An Error Occurred',error,'Close',()=>{\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    let deleteAllPrompt = () => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', <>Are you sure you want<br/>to delete all files?</>, 'Cancel', () => {\n            setDialogState(Dialog.close());\n        }, 'Continue', () => {\n            setRecentFiles([]);\n            localStorage.setItem('recent_files', JSON.stringify([]));\n            setDialogState(Dialog.close());\n        }));\n    }\n    let deleteSinglePrompt = (x: recentFile) => {\n        setDialogState(Dialog.showPrompt('Delete Confirmation', <>Are you sure you want<br />to delete this file?</>, 'Cancel', () => {\n            setDialogState(Dialog.close());\n        }, 'Continue', () => {\n            let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            setRecentFiles(newRecentFiles);\n            localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n            setDialogState(Dialog.close());\n        }));\n    }\n\n    useEffect(() => {\n        let recent: recentFile[] = null!;\n        try {\n            recent = JSON.parse(localStorage.getItem('recent_files')!);\n        } catch (e) {}\n        if (recent === null) {\n            recent = [];\n        }\n        setRecentFiles(recent);\n    }, []);\n\n    const loadFile = (x: recentFile) => {\n        try {\n            let parsed = JSON.parse(localStorage.getItem(x.id)!);\n\n            // Set this song as the current work in the global context\n            setCurrentFile({type: 'set', val: {id: x.id, file_name: x.file_name, data: parsed}});\n\n            try {\n                // Set this song as the current work in localStorage\n                localStorage.setItem('current_file', x.id);\n\n                // Update the accessed date for this song and move it to the top of the list\n                localStorage.setItem('recent_files', JSON.stringify([\n                    {...x, date_opened: new Date().getTime()} as recentFile,\n                    ...recentFiles.filter(y=>y.id!==x.id)\n                ]));\n            } catch(e){\n                // Writing to local storage may be disabled currently\n                console.error(e);\n            }\n\n            navigate('convert');\n        } catch (e) {\n            showError('An issue was encountered while loading the data for this file.');\n            console.error(e);\n        }\n    };\n    \n    const deleteFile = (x: recentFile) => {\n        try {\n            deleteSinglePrompt(x);\n            // let newRecentFiles = recentFiles.filter(y => y.id !== x.id);\n            // setRecentFiles(newRecentFiles);\n            // localStorage.setItem('recent_files', JSON.stringify(newRecentFiles));\n        } catch (e) {\n            showError('An issue was encountered while deleting this file.');\n            console.error(e);\n        }\n    };\n\n    const deleteAllFiles = () => {\n        try {\n            deleteAllPrompt();\n        } catch (e) {\n            showError('An issue was encountered while deleting all file(s).');\n            console.error(e);\n        }\n    }\n    const uploadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n        let fileName = (e.target as any).files[0].name.replace(/\\.(?:musicxml|mxl)$/i, '');\n        let failedReads = 0;\n        let fail = ()=>{\n            failedReads++;\n            if(failedReads === 2){ //both reads failed\n                showError('An issue was encountered while reading the selected file.');\n            }\n        }\n        try {\n            let reader1 = new FileReader();\n            reader1.onload = function () {\n                try {\n                    let data = reader1.result;\n                    if(data === null){\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as compressed\n                    \n                    (async ()=>{\n                        try {\n                            let zip = await JSZip.loadAsync(data);\n                            let details = await zip.file('META-INF/container.xml').async(\"text\");\n                            let parser = new DOMParser();\n                            let detailsDOM = parser.parseFromString(details, \"application/xml\");\n                            let nodes = detailsDOM.getElementsByTagName('rootfile');\n                            let musicXMLPath = nodes[0].getAttribute('full-path')!;\n                            for(let i = nodes.length-1; i >= 0; i--){\n                                if(nodes[i].getAttribute('media-type') === 'application/vnd.recordare.musicxml+xml'){\n                                    musicXMLPath = nodes[i].getAttribute('full-path')!;\n                                }\n                            }\n                            let musicXMLData = await zip.file(musicXMLPath).async(\"text\");\n                            let parsed = MusicXML.parseScore(musicXMLData);\n                            if(parsed.measures === undefined){\n                                throw new Error('Invalid MusicXML format');\n                            }\n                            onUpload(fileName,parsed);\n                        } catch(e){\n                            fail();\n                            console.error(e);\n                        }\n                    })();\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader1.readAsArrayBuffer((e.target as any).files[0]);\n            let reader2 = new FileReader();\n            reader2.onload = function () {\n                try {\n                    let data = reader2.result;\n                    if(data === null){\n                        throw new Error('Failed to read file - null');\n                    }\n                    //try to interpret this file as uncompressed\n                    let parsed = MusicXML.parseScore(data as string);\n                    \n                    if(parsed.measures === undefined){\n                        throw new Error('Invalid MusicXML format');\n                    }\n                    console.log(parsed);\n                    \n                    onUpload(fileName,parsed);\n                } catch (e) {\n                    fail();\n                    console.error(e);\n                }\n            };\n            reader2.readAsText((e.target as any).files[0]);\n\n        } catch (e) {\n            showError('An issue was encountered while reading the selected file.');\n            console.error(e);\n        }\n    };\n\n    const onUpload = (fileName: string, parsed: ScoreTimewise)=>{\n        let id = `file_${Array.from({length: 16}, () => Math.floor(Math.random() * 16).toString(16)).join('')}`;\n\n        // Set this song as the current work in the global context\n        setCurrentFile({type: 'set', val: {id, file_name: fileName, data: parsed}});\n\n        // Fail silently if localStorage is disabled\n        try {\n            \n            // Set this song as the current work in localStorage\n            localStorage.setItem(id, JSON.stringify(parsed));\n            localStorage.setItem('current_file', id);\n\n            // Add this song to the recent songs list\n            localStorage.setItem('recent_files', JSON.stringify([\n                {file_name: fileName, date_created: new Date().getTime(), date_opened: new Date().getTime(), id} as recentFile,\n                ...recentFiles.filter(x=>x.file_name!==fileName)\n            ]));\n\n        } catch (e) {\n            console.error(e);\n        }\n\n        navigate('convert');\n    }\n\n    return (\n        <Frame header=\"SNapp\">\n            {recentFiles === undefined ? null : <div style={styles.container}>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n                <div style={{...styles.item, maxWidth: '720px'}}>\n                    SNapp implements a simpler and more intuitive music notation so that\n                    musicians can spend less time learning music and more time playing it!\n                </div>\n                {recentFiles.length === 0 ? <>\n                    <div style={{...styles.item, flex: '.2 0 auto'}} />\n                    <div style={styles.item}>\n                        Try uploading a MusicXML file below\n                    </div>\n                    <div style={{...styles.item, flex: '.35 0 auto'}} />\n                </> : <>\n                        <div style={{...styles.item, flex: '.36 0 auto'}} />\n                        <div style={{...styles.item, fontSize: '28px', fontWeight: 'bolder'}}>Recent Files</div>\n                        <div style={{...styles.item, flex: '.08 0 auto'}} />\n                        <div style={{...styles.item, ...styles.recentFiles}}>\n                            <div style={{...styles.recentFilesInner}}>\n                                {recentFiles.map(x => <Fragment key={x.id}>\n                                    <div className=\"button-recent-file\" style={styles.recentFilesItem}>\n                                        <div onClick={() => {loadFile(x);}} style={{...styles.recentFilesItemInner, flex: '0 100000 auto', fontWeight: 'bold'}}>\n                                            {x.file_name}\n                                        </div>\n                                        <div onClick={() => {loadFile(x);}} style={{...styles.recentFilesItemInner, width: '10px', flex: '1 1 auto'}} />\n                                        <div onClick={() => {loadFile(x);}} style={{...styles.recentFilesItemInner, flex: '0 1 auto', fontSize: '22px'}}>\n                                            {(d => `${d.getMonth() + 1}/${d.getDate()}/${d.getFullYear()}`)(new Date(x.date_created || (x as any).date /*migrate from x.date to x.date_created*/))}\n                                        </div>\n                                        <div onClick={() => {deleteFile(x);}} style={{...styles.recentFilesItemInner, color: 'gray', width: '25px'}} >\n                                            <svg style={{paddingTop: '9px'}} xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><line x1=\"18\" y1=\"6\" x2=\"6\" y2=\"18\"></line><line x1=\"6\" y1=\"6\" x2=\"18\" y2=\"18\"></line></svg>\n                                        </div>\n                                    </div>\n                                    <div style={styles.recentFilesSeparator}></div>\n                                </Fragment>)}\n                                {recentFiles.length===1?null:<div onClick={() => {deleteAllFiles();}} style={styles.deleteAll} >Delete All Files</div>}\n                            </div>\n                        </div>\n                        <div style={{...styles.item, flex: '.24 0 auto'}} />\n                    </>}\n                <div style={styles.item}>\n                    <span id=\"button-upload\" style={styles.link} onClick={() => {}}>\n                        <img src={svg} style={styles.icon} alt=\"\" />\n                        Upload MusicXML File\n                        <input style={styles.fileInput} type=\"file\" title=\"Click to upload\" accept=\".musicxml,.mxl\" onChange={(e) => {uploadFile(e);}}></input>\n                    </span>\n                </div>\n                <div style={{...styles.item, flex: '1 0 auto'}} />\n            </div>}\n        </Frame>\n    );\n};\n\nconst styleMap = {\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflow: 'hidden',\n    },\n    item: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        marginLeft: '50%',\n        width: '70%',\n        transform: 'translate(-50%,0px)',\n        textAlign: 'center',\n        fontSize: '21px',\n        flex: '0 0 auto',\n    },\n    fileInput: {\n        position: 'absolute',\n        top: '0px',\n        left: 'calc(50% - 170px)',\n        width: '340px',\n        height: '100%',\n        cursor: 'pointer',\n        opacity: 0,\n    },\n    recentFiles: {\n        color: '#31B7D6',\n        maxWidth: '750px',\n        height: '250px',\n        borderRadius: '10px',\n        border: '2px solid #BBBBBB',\n        padding: '5px',\n        overflow: 'hidden',\n    },\n    recentFilesInner: {\n        position: 'relative',\n        paddingLeft: '15px',\n        paddingRight: '15px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    recentFilesItem: {\n        display: 'flex',\n        width: 'calc(100% - 10px)',\n        marginTop: '20px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        lineHeight: '40px',\n        fontSize: '24px',\n        position: 'relative',\n        height: '40px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n    },\n    recentFilesSeparator: {\n        position: 'relative',\n        height: '2px',\n        backgroundColor: '#DDDDDD',\n        borderRadius: '10px',\n    },\n    recentFilesItemInner: {\n        position: 'initial',\n        width: 'auto',\n        flex: '0 0 auto',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n    },\n    deleteAll: {\n        height: 'fit-content',\n        width: 'fit-content',\n        marginTop: '5px',\n        top: 'auto',\n        left: '50%',\n        fontWeight: 'bold',\n        transform: 'translate(-50%, 0)',\n        cursor: 'pointer',\n        padding:'5px 10px',\n    },\n    icon: {\n        height: '1em',\n        width: '1em',\n        position: 'relative',\n        display: 'inline-flex',\n        top: '.125em',\n        marginRight: '.25em',\n    },\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n\nexport default Menu;\n","import React from 'react';\nimport {Router as ReachRouter} from '@reach/router';\nimport Convert from './pages/Convert';\nimport NotFound from './pages/NotFound';\nimport GlobalStateProvider from './contexts/Global';\nimport Global from './components/global/Global';\nimport Menu from './pages/Menu';\n\nconst Router: React.FC = () => {\n    return (\n        <GlobalStateProvider>\n            <ReachRouter>\n                <Menu path=\"/\" />\n                <Convert path=\"/convert\" />\n                <NotFound path=\"/*\" />\n            </ReachRouter>\n            <Global />\n        </GlobalStateProvider>\n    );\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","/**\n * This file contains types shared across all parsers.\n */\n\nexport enum Tie {\n    Start = \"START\", \n    Stop = \"STOP\",\n}\n\nexport type TrackType = 'Instrument' | 'Lyrics'; // part types that app currently handles\n\nexport type StaffType = 'treble' | 'bass';\n\nexport type Note = {\n    time: number,\n    duration: number,\n    midi: number,\n    staff: StaffType,\n    attributes: {\n        ties: Tie[], // TODO: consider making this optional\n        // other attributes like slurs and dynamics can go here\n    }\n};\n\nexport type Measure = Note[]; // note: each part should have 1 staff or 2 staves (for piano)\n\nexport type TimeSignature = {\n    measure: number,\n    beats: number,\n    beatTypes: number,\n};\n\nexport type KeySignature = {\n    measure: number,\n    fifths: number\n}\n\nexport type Track = {\n    measures: Measure[],\n    timeSignatures: TimeSignature[],\n    keySignatures: KeySignature[],\n    trackTypes: TrackType[] // we use an array here because a track might contain both lyrics and piano part.\n};\n\nexport type Tracks = Track[];\n\nexport type Score = {\n    tracks: Tracks,\n};\n","import React, {createContext, useContext, useReducer, useRef} from \"react\";\n\nexport const colorPreferenceStyles = {\n    black: \"#000000\",\n    grey: \"#777777\",\n    red: \"#FF0000\",\n    orange: \"orange\",\n    yellow: \"#FFFF00\",\n    green: \"#00FF00\",\n    blue: \"#0000FF\",\n    purple: \"purple\"\n};\nexport const colorPreferenceOptions = Object.keys(\n    colorPreferenceStyles\n) as (keyof typeof colorPreferenceStyles)[];\nexport type colorPreferenceOption = (typeof colorPreferenceOptions)[number];\n\nexport const scalePreferenceOptions = ['small', 'medium', 'large'] as const;\nexport type scalePreferenceOption = (typeof scalePreferenceOptions)[number];\n\nexport const spacingPreferenceOptions = ['narrow', 'moderate', 'wide'] as const;\nexport type spacingPreferenceOption = (typeof spacingPreferenceOptions)[number];\n\nexport const noteHeadPreferenceOptions = [\"●\", \"◼\", \"▲\", \"▼\", \"○\", \"☐\", \"△\", \"▽\", \"⊗\", \"⊠\"] as const; // Previous symbols: ⨂, □\nexport type noteHeadPreferenceOption = (typeof noteHeadPreferenceOptions)[number];\n\nexport const measuresPerRowOptions = [1, 2, 3, 4, 5, 6] as const; // TODO: Consider using a slider\nexport type measuresPerRowOption = (typeof measuresPerRowOptions)[number];\n\nexport const accidentalTypeOptions = ['auto', 'sharp', 'flat'] as const;\nexport type accidentalTypeOption = (typeof accidentalTypeOptions)[number];\n\nexport type state = {\n    noteDurationColor: colorPreferenceOption;\n    noteSymbolColor: colorPreferenceOption;\n    staffScale: scalePreferenceOption;\n    horizontalSpacing: spacingPreferenceOption;\n    verticalSpacing: spacingPreferenceOption;\n    noteScale: scalePreferenceOption;\n    naturalNoteShape: noteHeadPreferenceOption,\n    sharpNoteShape: noteHeadPreferenceOption;\n    flatNoteShape: noteHeadPreferenceOption;\n    measuresPerRow: measuresPerRowOption;\n    accidentalType: accidentalTypeOption\n};\nexport type action = {\n    type: \"set\";\n    val: Partial<state>;\n};\n\nlet initialState: state = {\n    noteDurationColor: \"grey\",\n    noteSymbolColor: \"black\",\n    staffScale: 'medium',\n    horizontalSpacing: 'moderate',\n    verticalSpacing: 'moderate',\n    noteScale: 'medium',\n    naturalNoteShape: '●',\n    sharpNoteShape: '▲',\n    flatNoteShape: '▼',\n    measuresPerRow: 4,\n    accidentalType: 'auto'\n};\n\nexport const PreferencesContext = createContext(undefined! as [\n    state,\n    React.Dispatch<action>\n]);\nexport const PreferencesStateProvider: React.FC<{}> = ({children}) => {\n    //we need to use a ref here to ensure that the same reducer is always used\n    let reducer = useRef(\n        (state: state, action: action): state => {\n            switch (action.type) {\n                case \"set\":\n                    return {...state, ...action.val};\n            }\n        }\n    );\n    let [state, dispatch] = useReducer(reducer.current, initialState);\n    return (\n        <PreferencesContext.Provider value={[state, dispatch]}>\n            {children}\n        </PreferencesContext.Provider>\n    );\n};\nexport const usePreferencesState = () => useContext(PreferencesContext);\n","import React, {useEffect, useState, useRef} from 'react';\nimport {range} from '../util/Util';\n// import {Note} from '@tonejs/midi/dist/Note';\nimport MusicXML from 'musicxml-interfaces';\nimport {parse} from '../parser/MusicXML'\nimport {Note, Score, Tie, TimeSignature, KeySignature, StaffType} from '../parser/Types'\nimport {colorPreferenceStyles, usePreferencesState, spacingPreferenceOption, scalePreferenceOption} from '../contexts/Preferences';\nimport {useDialogState} from '../contexts/Dialog';\nimport * as Dialog from '../util/Dialog';\nimport {navigate} from '@reach/router';\n\ntype Props = {\n    xml: MusicXML.ScoreTimewise,\n    forcedWidth?: number,\n};\n\nenum Accidental {\n    Flat = -1,\n    Natural = 0,\n    Sharp = 1\n};\n\nconst SNView: React.FC<Props> = ({xml, forcedWidth}) => {\n    console.log(xml)\n    const ref = useRef(null! as HTMLDivElement);\n    let [width, setWidth] = useState<number | undefined>(undefined);\n    let [score, setScore] = useState<Score | undefined>(undefined);\n    let [preferences,] = usePreferencesState();\n\n    let [dialogState, setDialogState] = useDialogState();\n\n    let showError = (error: string) => {\n        setDialogState(Dialog.showMessage('An Error Occurred', error, 'Close', () => {\n            navigate('/');\n            setImmediate(() => setDialogState(Dialog.close()));\n        }));\n    }\n    let showErrorRef = useRef(showError);\n\n    console.log('Score:', score);\n    useEffect(() => {\n        if (forcedWidth === undefined) {\n            let width: number = undefined!;\n            let callback = () => {\n                let newWidth = ref.current!.getBoundingClientRect().width;\n                if (width !== newWidth) {\n                    width = newWidth;\n                    setWidth(newWidth);\n                }\n            };\n            window.addEventListener(\"resize\", callback);\n            // let interval = setInterval(callback, 20);\n            callback();\n            return () => {\n                window.removeEventListener(\"resize\", callback);\n                // clearInterval(interval);\n            }\n        } else {\n            setWidth(forcedWidth);\n        }\n    }, [setWidth, forcedWidth]);\n\n    useEffect(() => {\n        // parse only when page loads or xml changes\n        try {\n            setScore(parse(xml));\n        } catch (e) {\n            showErrorRef.current('An issue was encountered while processing this file.');\n            console.error(e);\n        }\n    }, [xml]);\n\n    if (score === undefined || width === undefined) { //skip first render when width is unknown or parsing is incomplete\n        return <div ref={ref}></div>;\n    }\n\n    try {\n        let devMode = false;\n\n        // fetch preference values\n        let {\n            noteDurationColor,\n            noteSymbolColor,\n            staffScale,\n            horizontalSpacing,\n            verticalSpacing,\n            noteScale,\n            naturalNoteShape,\n            sharpNoteShape,\n            flatNoteShape,\n            measuresPerRow,\n            accidentalType\n        } = preferences;\n\n        // Map preference strings to numeric values \n        let noteScaleMap: Record<scalePreferenceOption, number> = {\n            small: 15,\n            medium: 20,\n            large: 25\n        }\n        let staffScaleMap: Record<scalePreferenceOption, number> = {\n            small: 18,\n            medium: 25,\n            large: 32\n        };\n        let verticalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 10,\n            moderate: 30,\n            wide: 50\n        };\n        let horizontalSpacingMap: Record<spacingPreferenceOption, number> = {\n            narrow: 20,\n            moderate: 40,\n            wide: 60\n        };\n\n        //general spacing\n        let noteSymbolSize = noteScaleMap[noteScale]; //width/height of note symbols\n        let strokeWidth = 2;\n        let tickSize = 7;\n\n        //vertical spacing\n        let verticalPadding = 30; //top/bottom padding\n        let rowPadding = verticalSpacingMap[verticalSpacing]; //space between rows\n        let measureLabelSpace = 15; //space for measure labels\n\n        // spacing between two clefs (aka grand staff distance)\n        let dynamicsSpace = 10;\n        let lyricsSpace = 10;\n        let staffPadding = 5;\n        let staffDistance = dynamicsSpace + lyricsSpace + 2 * staffPadding;\n\n        // annotation space for each clef\n        let fingeringSpace = 15;\n        let articulationSpace = 15;\n        let articulationPadding = 5;\n        let annotationSpace = fingeringSpace + articulationSpace + 2 * articulationPadding;\n\n        //horizontal spacing\n        let horizontalPadding = horizontalSpacingMap[horizontalSpacing]; //left/right padding\n        let staffLabelSpace = staffScaleMap[staffScale]; //space for staff labels\n        let octaveLabelSpace = measureLabelSpace; //space for octave labels\n        // let tieExtensionSpace = measureLabelSpace;\n\n        // composite horizontal spacing\n        let scoreWidth = width - 2 * horizontalPadding - staffLabelSpace - octaveLabelSpace; // width of just the WYSIWYP score\n        let beatWidth = scoreWidth / score.tracks[0].timeSignatures[0].beats / measuresPerRow;\n\n        // get key signature\n        let keyFifths = score.tracks[0].keySignatures[0].fifths;\n\n        // let octaveGroups = [1, 1, 0, 0, 0, 1, 1]; //octaveGroups (C D E / F G A B)\n        let staffLabels = ['𝒯', '𝄢'];\n        let octaveLines = [\n            {color: 'red', number: true}, undefined, undefined, /* C, D, E */\n            {color: 'blue'}, undefined, undefined, undefined, /* F, G, A, B */\n        ];\n        let accidentalMap = [0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0].map(x => x === 1); // C, C#, D, D#, E, ...\n        let noteMap = [0, 0, 1, 1, 2, 3, 3, 4, 4, 5, 5, 6];\n\n        let getNoteAccidental = (note: number): Accidental => {\n            return accidentalMap[note % 12] ? (keyFifths >= 0 ? Accidental.Sharp : Accidental.Flat) : Accidental.Natural;\n        };\n\n        // We map C0 (midi note 12) to line 0.\n        let getNoteLine = (note: number) => {\n            let line = Math.floor(note / 12 - 1) * 7 + noteMap[note % 12];\n\n            // if note is flat, we need to bring it a line higher.\n            if (accidentalType === 'auto' && getNoteAccidental(note) < 0) line++;\n            else if (accidentalType === 'flat' && getNoteAccidental(note) !== 0) line++; // handle user override\n\n            return line;\n        };\n\n        //find the title and author\n        let title = '';\n        try {\n            title = xml.movementTitle;\n            title = xml.work.workTitle;\n        } catch (e) {}\n\n        let author = '';\n        try {\n            let credits = xml.credits.filter(x => x.creditWords !== undefined && x.creditWords.length > 0).map(x => x.creditWords);\n            credits.forEach(credit => {\n                credit.forEach(words => {\n                    if (Math.abs(words.words.length - 20) < Math.abs(author.length - 20)) {\n                        author = words.words;\n                    }\n                })\n            })\n        } catch (e) {}\n\n        let minNote: Record<StaffType, number> = {\n            treble: 128,\n            bass: 128\n        };\n\n        let maxNote: Record<StaffType, number> = {\n            treble: -1,\n            bass: -1\n        };\n\n        //calculate lowest and highest note\n        let instrumentTrack = score.tracks.filter(track => track.trackTypes.includes('Instrument'))[0];\n        instrumentTrack.measures.forEach(measure => {\n            measure.forEach(note => {\n                minNote[note.staff] = Math.min(minNote[note.staff], note.midi);\n                maxNote[note.staff] = Math.max(maxNote[note.staff], note.midi);\n            })\n        });\n\n        let staffTypes: StaffType[] = ['treble', 'bass'];\n        //if there was an issue, abort\n\n        // if bass clef is empty, then we create an empty clef // TODO: consider not displaying bass if it is empty.\n        if (minNote.bass === 128 && maxNote.bass === -1) {\n            minNote.bass = 48;\n            maxNote.bass = 60;\n        }\n\n        staffTypes.forEach(staff => {\n            if (minNote[staff] >= 128 || minNote[staff] < 0 || maxNote[staff] >= 128 || maxNote[staff] < 0) {\n                console.log(minNote[staff], maxNote[staff]);\n                throw new Error('An issue was detected while analyzing this work\\'s note range');\n            }\n        });\n\n        //calculate the height of each row (based upon low/high notes and oct groups)\n        let minLine: Record<StaffType, number> = {\n            treble: getNoteLine(minNote.treble),\n            bass: getNoteLine(minNote.bass)\n        }\n        let maxLine: Record<StaffType, number> = {\n            treble: getNoteLine(maxNote.treble),\n            bass: getNoteLine(maxNote.bass)\n        }\n        staffTypes.forEach(staff => {\n            // find the closest note line\n            while (minLine[staff] % 7 !== 0 && minLine[staff] % 7 !== 3) minLine[staff]--;\n            while (maxLine[staff] % 7 !== 0 && maxLine[staff] % 7 !== 3) maxLine[staff]++;\n\n            // widen staff range if it is too small\n            if (Math.abs(maxLine[staff] - minLine[staff]) <= 1) {\n                maxLine[staff] += (maxLine[staff] % 7 === 0) ? 3 : 4;\n                minLine[staff] -= (minLine[staff] % 7 === 0) ? 4 : 3;\n            }\n        });\n        let staffHeights: Record<StaffType, number> = {\n            treble: (maxLine.treble - minLine.treble) * noteSymbolSize / 2,\n            bass: (maxLine.bass - minLine.bass) * noteSymbolSize / 2\n        }\n\n        //calculate the number of beats per measure\n        let beatsPerMeasure = score.tracks[0].timeSignatures[0].beats;\n        let measureWidth = beatWidth * beatsPerMeasure;\n\n        //calculate tne number of measures per row\n        let availableMeasureSpace = width - horizontalPadding * 2 - staffLabelSpace - octaveLabelSpace;\n        // let measuresPerRow = Math.floor(availableMeasureSpace / measureWidth);\n        // if (measuresPerRow <= 0) {\n        //     throw new Error('Could not place a measure in the allowed space');\n        // }\n        horizontalPadding += (availableMeasureSpace - measuresPerRow * measureWidth) / 2; //update horizontal padding to center rows\n\n        //calculate the number of rows\n        //let ticksPerMeasure = midi.header.ppq*beatsPerMeasure; //needs to take into account size of a beat\n        // let beatsPerRow = beatsPerMeasure * measuresPerRow;\n        let measureNumber = score.tracks.reduce((accum, track) => Math.max(accum, track.measures.length), 0);\n        if (measureNumber <= 0) {\n            throw new Error('Failed to identify number of measures');\n        }\n        let rowNumber = Math.ceil(measureNumber / measuresPerRow);\n\n        //calculate required height (vert padding + row height + row padding)\n        // let height = verticalPadding * 2 + rowNumber * (staffHeight + measureLabelSpace) + (rowNumber - 1) * rowPadding;\n\n        let getCurrentSignatures = (measureNumber: number): {currentTime: TimeSignature, currentKey: KeySignature} => {\n            let timeSignatures = [...score!.tracks[0].timeSignatures].reverse(); // we reverse the array because we want to find the latest key signature.\n            let keySignatures = [...score!.tracks[0].keySignatures].reverse();\n\n            let currentTime = timeSignatures.find(timeSignature => timeSignature.measure <= measureNumber);\n            let currentKey = keySignatures.find(keySignature => keySignature.measure <= measureNumber);\n\n            // sometimes, signatures are defined on the second measure. Below lines handle such cases.\n            if (!currentTime) currentTime = score!.tracks[0].timeSignatures[0];\n            if (!currentKey) currentKey = score!.tracks[0].keySignatures[0];\n            return {currentTime, currentKey};\n        }\n\n        let measure = (x: number, y: number, measureNumber: number, staff: StaffType) => {\n            // TODO: handle pick up measures\n            // Get time signature of current measure\n            let {currentTime, currentKey} = getCurrentSignatures(measureNumber);\n            beatWidth = scoreWidth / currentTime.beats / measuresPerRow;\n            beatsPerMeasure = currentTime.beats;\n            keyFifths = currentKey!.fifths;\n\n            // Draw measure\n            let key = 0;\n            let measureSVG: JSX.Element[] = [];\n            measureSVG.push(<rect key={key++} x={measureWidth - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeights[staff] + strokeWidth} fill=\"#000000\" />);\n            for (let j = minLine[staff]; j <= maxLine[staff]; j++) {\n                let octaveLine = octaveLines[j % 7];\n                if (octaveLine !== undefined) {\n                    let lineY = measureLabelSpace + staffHeights[staff] - (j - minLine[staff]) * noteSymbolSize / 2;\n                    measureSVG.push(<rect key={key++} x={strokeWidth / 2} y={lineY - strokeWidth / 2} width={measureWidth - strokeWidth} height={strokeWidth} fill={octaveLine.color} />);\n                    if (measureNumber % measuresPerRow === 0 && octaveLine.number === true) {\n                        measureSVG.push(<text x={-strokeWidth} key={key++} y={lineY} fontSize={measureLabelSpace} textAnchor=\"end\" dominantBaseline=\"middle\">{Math.floor(j / 7)}</text>);\n                    }\n                    if (j < maxLine[staff]) {\n                        for (let measureNumber = 1; measureNumber < beatsPerMeasure; measureNumber++) {\n                            let tickX = measureWidth / beatsPerMeasure * measureNumber;\n                            measureSVG.push(<rect key={key++} x={tickX - strokeWidth / 2} y={lineY - tickSize} width={strokeWidth} height={tickSize - strokeWidth / 2} fill=\"#000000\" />);\n                        }\n                    }\n                }\n            }\n\n            // Add notes to the measure\n            const noteHeadSVG: JSX.Element[] = [];\n            const noteTailSVG: JSX.Element[] = [];\n            score!.tracks.forEach(track => {\n                if (!track.trackTypes.includes('Instrument')) return; // we do not render notes for lyrics only track.\n                let notes = track.measures[measureNumber].filter(note => note.staff === staff);\n                notes.forEach((note, _idx) => {\n                    noteHeadSVG.push(noteHead(note, key++, staff));\n                    let tieStart = note.attributes.ties.includes(Tie.Start);\n                    let tieStop = note.attributes.ties.includes(Tie.Stop);\n                    let isLastMeasure = ((measureNumber + 1) % measuresPerRow === 0); // whether current measure is the last measure of the row\n                    let isLastNote = note.time + note.duration >= currentTime.beats; // whether the note reaches the end of the measure\n                    let noteSpansRow = tieStart && isLastMeasure && isLastNote; // whether tied note spans next row\n                    noteTailSVG.push(noteTail(note, key++, tieStart, tieStop, noteSpansRow, staff));\n                });\n            });\n\n            return (\n                <g id={`measure${measureNumber + 1}`} key={measureNumber} transform={`translate(${x}, ${y})`}>\n                    <g id='frame'>\n                        {devMode ? <rect width={measureWidth} height={measureLabelSpace - strokeWidth / 2} fill=\"#ffdddd\" /> : null}\n                        <text x={strokeWidth} y={measureLabelSpace - strokeWidth} fontSize={measureLabelSpace}>{measureNumber + 1}</text>\n                        {measureSVG}\n                    </g>\n                    <g id='notes'>\n                        {noteTailSVG}\n                        {noteHeadSVG}\n                    </g>\n                </g>\n            );\n        }\n\n        let grandStaff = (i: number): JSX.Element => {\n            let trebleSpaceHeight = staffHeights.treble + measureLabelSpace + annotationSpace + noteSymbolSize / 2;\n            let bassStaffHeight = staffHeights.bass + measureLabelSpace + annotationSpace + noteSymbolSize / 2;\n            let grandStaffHeight = trebleSpaceHeight + bassStaffHeight + staffDistance;\n\n            return (\n                <div className={`snview-row snview-row-${i + 1}`} key={i} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${grandStaffHeight}`}>\n                        {staff(i, 'treble')}\n                        {staff(i, 'bass')}\n                    </svg>\n                </div>\n            );\n        }\n\n        let staff = (i: number, staff: StaffType): JSX.Element => {\n            let staffHeight = staffHeights[staff];\n            let trebleStaffHeight = staffHeights.treble + measureLabelSpace + noteSymbolSize / 2; // \n            let yOffset = staff === 'treble' ? 0 : trebleStaffHeight + staffDistance;\n            let staffName = staff === 'treble' ? staffLabels[0] : staffLabels[1];\n            return <g id={`row${i}${staff}`} key={staff + i} transform={`translate(${horizontalPadding}, ${yOffset})`}>\n                {devMode ? <rect y={measureLabelSpace} width={staffLabelSpace} height={staffHeight} fill=\"#ffdddd\" /> : null}\n                {devMode ? <rect x={staffLabelSpace} y={measureLabelSpace} width={octaveLabelSpace} height={staffHeight} fill=\"#ffddff\" /> : null}\n                <text x={staffLabelSpace} y={measureLabelSpace + staffHeight / 2} fontSize={staffLabelSpace * 1.5} textAnchor=\"end\" dominantBaseline=\"middle\">{staffName}</text>\n                <rect x={staffLabelSpace + octaveLabelSpace - strokeWidth / 2} y={measureLabelSpace - strokeWidth / 2} width={strokeWidth} height={staffHeight + strokeWidth} fill=\"#000000\" />\n\n                {range(0, i < rowNumber - 1 ? measuresPerRow : measureNumber - (rowNumber - 1) * measuresPerRow).map(j =>\n                    measure(staffLabelSpace + octaveLabelSpace + j * measureWidth, 0, i * measuresPerRow + j, staff)\n                )}\n            </g>\n        }\n\n\n        let noteTimeToPos = (noteTime: number, staff: StaffType) => ({\n            x: beatWidth * noteTime,\n            y: staffHeights[staff] + measureLabelSpace\n        });\n\n        // let beatsToPos = (beat: number) => {\n        //     let row = Math.floor(beat / beatsPerRow);\n        //     let measure = (beat - row * beatsPerRow) / beatsPerMeasure;\n        //     return {\n        //         row, measure,\n        //         ...rowMeasureToPos(row, measure)\n        //     };\n        // }\n        // let rowMeasureToPos = (row: number, measure: number) => ({\n        //     x: horizontalPadding + staffLabelSpace + octaveLabelSpace + measure * measureWidth,\n        //     y: verticalPadding + row * (staffHeight + measureLabelSpace + rowPadding) + staffHeight + measureLabelSpace\n        // });\n\n        let noteTail = (note: Note, i: number, tieStart: boolean, tieStop: boolean, noteSpansRow: boolean, staff: StaffType) => {\n            let key = 0;\n            let boxes: JSX.Element[] = [];\n\n            let line = getNoteLine(note.midi) - minLine[staff];\n            let {x: xStart, y: yStart} = noteTimeToPos(note.time, staff);\n            let {x: xEnd} = noteTimeToPos(note.time + note.duration, staff);\n\n            // let pushBox = (x1: number, x2: number, y: number) => {\n            //     boxes.push(<rect key={key++} x={x1} y={y - (line + 1) * noteSymbolSize / 2} width={x2 - x1} height={noteSymbolSize} fill={colorPreferenceStyles[noteDurationColor]} fillOpacity={.5} />);\n            // }\n            // while (rowStart < rowEnd) {\n            //     //only executes rarely so it is faster to compute this value in the loop\n            //     pushBox(xStart, horizontalPadding + staffLabelSpace + octaveLabelSpace + measuresPerRow * measureWidth, yStart);\n            //     rowStart++;\n            //     measureStart = 0;\n            //     let {x, y} = rowMeasureToPos(rowStart, measureStart);\n            //     xStart = x;\n            //     yStart = y;\n            // }\n\n            let roundingSpace = Math.max(Math.min(noteSymbolSize, xEnd - xStart), 0);\n            let radiusStart = roundingSpace / 4;\n            let radiusEnd = roundingSpace / 2;\n            let pointedEnd = noteSpansRow;\n\n            if (tieStart) {\n                //if(!noteSpansRow){ //this check prevents pointed ends from extending past the end of the row\n                radiusEnd = 0;\n                //}\n            }\n            if (tieStop) {\n                radiusStart = 0;\n            }\n            boxes.push(\n                <path\n                    key={key++}\n                    d={`\n                        M${xStart + radiusStart} ${yStart - (line + 1) * noteSymbolSize / 2}\n                        H${xEnd - radiusEnd}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${radiusEnd} ${radiusEnd}\n                        ${pointedEnd ? `\n                            l${noteSymbolSize / 2 - radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                            l${-noteSymbolSize / 2 + radiusEnd} ${noteSymbolSize / 2 - radiusEnd}\n                        `: `v${noteSymbolSize - 2 * radiusEnd}`}\n                        ${pointedEnd ? `l` : `a${radiusEnd} ${radiusEnd} 0 0 ${noteSpansRow ? 0 : 1} `}${-radiusEnd} ${radiusEnd}\n                        H${xStart + radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${-radiusStart} ${-radiusStart}\n                        v${-noteSymbolSize + 2 * radiusStart}\n                        a${radiusStart} ${radiusStart} 0 0 1 ${radiusStart} ${-radiusStart}\n                        z\n                    `}\n                    fill={colorPreferenceStyles[noteDurationColor]}\n                    fillOpacity={0.5}\n                />\n            );\n\n            return (\n                <React.Fragment key={i}>\n                    {boxes}\n                </React.Fragment>\n            );\n        }\n\n        let noteHead = (note: Note, i: number, staff: StaffType) => {\n            if (note.attributes.ties.includes(Tie.Stop))\n                return null!;\n            let accidental: Accidental = getNoteAccidental(note.midi);\n            let line = getNoteLine(note.midi) - minLine[staff];\n\n            let {x, y} = noteTimeToPos(note.time, staff);\n\n            x += noteSymbolSize / 2;\n            y -= line * noteSymbolSize / 2;\n            let triHeight = noteSymbolSize * Math.sqrt(3) / 2;\n\n            let strokeWidth = noteSymbolSize / 8;\n            let crossCircleWidth = noteSymbolSize / 2 / Math.sqrt(2);\n\n            let autoNoteShape = accidentalType === 'sharp' ? sharpNoteShape : flatNoteShape;\n            let shape = {\n                [Accidental.Natural]: naturalNoteShape,\n                [Accidental.Flat]: accidentalType === 'auto' ? flatNoteShape : autoNoteShape,\n                [Accidental.Sharp]: accidentalType === 'auto' ? sharpNoteShape : autoNoteShape,\n            }[accidental];\n\n            switch (shape) {\n                case '●':\n                    return <circle key={i} cx={x} cy={y} r={noteSymbolSize / 2} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '◼':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▲':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2} ${x + noteSymbolSize / 2},${y + triHeight / 2} ${x - noteSymbolSize / 2},${y + triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '▼':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2} ${x + noteSymbolSize / 2},${y - triHeight / 2} ${x - noteSymbolSize / 2},${y - triHeight / 2}`} fill={colorPreferenceStyles[noteSymbolColor]} />;\n                case '○':\n                    return <circle key={i} cx={x} cy={y} r={(noteSymbolSize - strokeWidth) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                case '☐':\n                    return <rect key={i} x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '△':\n                    return <polygon key={i} points={`${x},${y - triHeight / 2 + strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y + triHeight / 2 - strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '▽':\n                    return <polygon key={i} points={`${x},${y + triHeight / 2 - strokeWidth} ${x + noteSymbolSize / 2 - Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2} ${x - noteSymbolSize / 2 + Math.sqrt(3) * strokeWidth / 2},${y - triHeight / 2 + strokeWidth / 2}`} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />;\n                case '⊗':\n                    return (<g key={i}>\n                        <circle cx={x} cy={y} r={(noteSymbolSize - 2) / 2} strokeWidth={strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} fill='none' />;\n                        <line x1={x - crossCircleWidth} y1={y - crossCircleWidth} x2={x + crossCircleWidth} y2={y + crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - crossCircleWidth} y1={y + crossCircleWidth} x2={x + crossCircleWidth} y2={y - crossCircleWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n                case '⊠':\n                    return (<g key={i}>\n                        <rect x={x - noteSymbolSize / 2 + strokeWidth / 2} y={y - noteSymbolSize / 2 + strokeWidth / 2} width={noteSymbolSize - strokeWidth} height={noteSymbolSize - strokeWidth} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} fill='none' />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y - noteSymbolSize / 2 + strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y + noteSymbolSize / 2 - strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                        <line x1={x - noteSymbolSize / 2 + strokeWidth / 2} y1={y + noteSymbolSize / 2 - strokeWidth / 2} x2={x + noteSymbolSize / 2 - strokeWidth / 2} y2={y - noteSymbolSize / 2 + strokeWidth / 2} stroke={colorPreferenceStyles[noteSymbolColor]} strokeWidth={strokeWidth} />\n                    </g>);\n            }\n        }\n\n        // let devSvg = devMode ? (\n        //     <g id=\"devMode\">\n        //         {<rect x={0} y={0} width={width} height={height} fill=\"#ddddff\" />}\n        //         {<circle cx={0} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={0} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={width} cy={`${height}`} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<circle cx={0} cy={height} r=\"40\" stroke=\"black\" strokeWidth=\"3\" fill=\"red\" />}\n        //         {<rect x={horizontalPadding} y={verticalPadding} width={width - horizontalPadding * 2} height={height - verticalPadding * 2} fill=\"#ddffdd\" />}\n        //     </g>\n        // ) : null;\n\n        let svgRows: JSX.Element[] = range(0, rowNumber).map(i => grandStaff(i));\n        return (\n            <div id=\"snview\" ref={ref} style={{width: '100%', height: 'auto', overflow: 'hidden', minWidth: '350px', userSelect: 'text', paddingTop: verticalPadding, paddingBottom: verticalPadding}}>\n                {/*devSvg*/}\n                <div className={`snview-row snview-row-0`} style={{position: 'relative', height: 'auto', paddingBottom: `${rowPadding}px`}}>\n                    <svg viewBox={`0 0 ${width} ${180}`}>\n                        <text x={width / 2} y={50} fontSize={40} textAnchor=\"middle\" alignmentBaseline=\"hanging\">{title}</text>\n                        <text x={70} y={170} fontSize={25} textAnchor=\"start\">60 bpm</text>\n                        <text x={width - 70} y={170} fontSize={25} textAnchor=\"end\">{author}</text>\n                    </svg>\n                </div>\n                {svgRows}\n            </div>\n        );\n    } catch (e) {\n        console.error(e);\n        if (!dialogState.shown) {\n            showError('An issue was encountered while generating WYSIWYP output for the selected file.');\n        }\n        //console.error(e);\n        return <div ref={ref}></div>;\n    }\n};\n\nexport default SNView;\n","\nexport function range(min: number, max: number){\n    let res: number[] = [];\n    for(let i = min; i < max; i++){\n        res.push(i);\n    }\n    return res;\n}\n","import React, {CSSProperties} from \"react\";\nimport {action as DialogAction} from '../contexts/Dialog';\n\nexport const close = ()=>{\n    return {type: 'close'} as DialogAction;\n}\n\nexport const showMessage = (title: string, body: any, buttonText: string, buttonAction: ()=>void): DialogAction =>{\n    return {type: 'open', val: {title, width: 400, height: 275, contents: <div style={styles.body}>\n        <div style={styles.space} />\n        <div style={styles.top}>\n            {body}\n        </div>\n        <div style={styles.space} />\n        <div style={styles.bottom}>\n            <span style={styles.link} onClick={buttonAction}>\n                {buttonText}\n            </span>\n        </div>\n    </div>}};\n}\n\nexport const showPrompt = (title: string, body: any, buttonText1: string, buttonAction1: () => void, buttonText2: string, buttonAction2: () => void): DialogAction => {\n    return {\n        type: 'open', val: {\n            title, width: 400, height: 275, contents: <div style={styles.body}>\n                <div style={styles.space} />\n                <div style={styles.top}>\n                    {body}\n                </div>\n                <div style={styles.space} />\n                <div style={styles.bottom}>\n                    <span style={styles.link} onClick={buttonAction1}>\n                        {buttonText1}\n                    </span>\n                    <span style={{...styles.link}} onClick={buttonAction2}>\n                        {buttonText2}\n                    </span>\n                </div>\n            </div>\n        }\n    };\n}\n\nconst styleMap = {\n    body: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    top: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        fontSize: '20px',\n        textAlign: 'center',\n        flex: '0 1 auto',\n        padding: '30px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n    },\n    bottom: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        paddingBottom: '20px',\n    },\n    space: {\n        position: 'initial',\n        top: 'auto',\n        left: 'auto',\n        height: 'auto',\n        flex: '1 0 auto',\n    },\n    link: {\n        color: '#31B7D6',\n        cursor: 'pointer',\n        fontSize: '28px',\n        fontWeight: 'bold',\n        padding:'0 30px',\n    }\n} as const;\nconst styles: Record<keyof typeof styleMap, CSSProperties> = styleMap;\n","import MusicXML from 'musicxml-interfaces';\nimport {Note, TimeSignature, KeySignature, Tracks, Score, Tie, Measure, Track, TrackType} from './Types'\n\nconst pitchToMidi = (pitch: {octave: number, step: string, alter?: number}) => {\n    // we assume C4 = 60 as middle C. Note that typical 88-key piano contains notes from A0 (21) - C8 (108).\n    let step = ({c: 0, d: 2, e: 4, f: 5, g: 7, a: 9, b: 11} as {[index: string]: number})[pitch.step.toLowerCase()];\n    return (pitch.octave + 1) * 12 + step + (pitch.alter === undefined ? 0 : Math.round(pitch.alter));\n};\n\nconst isScorePart = (part: MusicXML.PartGroup | MusicXML.ScorePart): part is MusicXML.ScorePart => {\n    return part && part._class === 'ScorePart';\n};\n\n// get piano part name from xml\nconst getPianoPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    const pianoPart = xml.partList.find(part => isScorePart(part) && part.partName.partName.toLowerCase() === 'piano');\n    return pianoPart ? (pianoPart as MusicXML.ScorePart).id : undefined;\n    // if (!pianoPart) return undefined;\n    // const pianoPartId = (pianoPart as MusicXML.ScorePart).id;\n\n    // get the number of staves \n    // let numStaves: number | undefined;\n    // xml.measures.some(measure => measure.parts[pianoPartId].some(entry => numStaves = entry.staves)); // loop until entry.staves is defined\n    // if (numStaves === undefined) numStaves = 1; // default is 1\n    // return {pianoPartId, numStaves};\n};\n\nconst getLyricsPartID = (xml: MusicXML.ScoreTimewise): string | undefined => {\n    let lyricsPartId: string | undefined;\n    // loop until we find a part with some lyrics defined. \n    xml.measures.some(measure => {\n        return Object.keys(measure.parts).some(partName => {\n            let part = measure.parts[partName];\n            let partContainsLyrics = part.some(entry => entry.lyrics !== undefined);\n            lyricsPartId = partContainsLyrics ? partName : undefined;\n            return lyricsPartId !== undefined;\n        });\n    });\n    return lyricsPartId;\n};\n\nexport const parse = (xml: MusicXML.ScoreTimewise): Score => {\n    let lyricsPartId = getLyricsPartID(xml);\n    let pianoPartId = getPianoPartID(xml);\n\n    // currently, SNApp renders piano and lyric parts. We store the ids of the tracks we have to parse below.\n    // let trackTypeMap: Partial<Record<string, TrackType>> = {\n    //     [pianoPartId]: 'Piano',\n    //     ...(lyricsPartId && {[lyricsPartId]: 'Lyrics'}) // conditionally assign lyrics part\n    // }\n\n    let currentBeatType = 4;\n    let parts: {\n        [index: string]: {\n            divisions: number,\n            progress: number,\n            timeSignatures: TimeSignature[];\n            keySignatures: KeySignature[];\n            measures: Measure[],\n        }\n    } = {};\n\n    /** \n     * Multitrack Handling Logic\n     * \n     * We parse:\n     *      1) just the instrument part from a two part work for instrument and vocal\n     *      2) just the piano part from a work with multiple instrument parts\n     *      3) just one instrument part from a work with multiple instruments and none of them are piano\n     */\n\n    // parts that we want to parse. We may add more ids here if we decide to render more instruments parts.\n    let trackIDsToParse: string[] = [];\n\n    let instrumentId = pianoPartId !== undefined ? pianoPartId : 'P1';\n    trackIDsToParse.push(instrumentId);\n    if (lyricsPartId !== undefined && !trackIDsToParse.includes(lyricsPartId)) {\n        trackIDsToParse.push(lyricsPartId) \n    }\n    // console.log(`lyrics partId: ${lyricsPartId}, instrument partId: ${instrumentId}`);\n\n    xml.measures.forEach((measure, measureNumber) => {\n        trackIDsToParse.forEach(partName => {\n            if (measure.parts[partName] === undefined) return; // if part has not started yet, skip this measure.\n\n            if (parts[partName] === undefined) {\n                parts[partName] = {\n                    divisions: undefined!,\n                    progress: 0,\n                    timeSignatures: [],\n                    keySignatures: [],\n                    measures: Array(xml.measures.length)\n                };\n            }\n            let part = parts[partName];\n            let notes: Note[] = [];\n            // computes note lengh with respect to the beat type\n            let divisionsToNoteLength = (divisions: number) => {\n                if (part.divisions === undefined) {\n                    console.error('A note was defined before timing information was established');\n                    return divisions / 24;\n                }\n                return divisions / part.divisions * (currentBeatType / 4);\n            }\n            part.progress = 0;\n            measure.parts[partName].forEach(entry => {\n                switch (entry._class) {\n                    case 'Note':\n                        if (entry.duration !== undefined) { //grace notes do not have a duration - are not displayed\n                            let time = part.progress;\n                            if (entry.chord !== undefined) {\n                                if (notes.length === 0) {\n                                    console.error('The first note within a measure was marked as being part of a chord');\n                                } else {\n                                    if (notes[notes.length - 1].duration !== divisionsToNoteLength(entry.duration)) {\n                                        console.error('Two notes in a chord were of different durations');\n                                    }\n                                    time = notes[notes.length - 1].time;\n                                }\n                            } else {\n                                part.progress += divisionsToNoteLength(entry.duration);\n                            }\n                            if (entry.rest === undefined && entry.pitch === undefined) {\n                                console.error('A note was neither marked as a rest or given a pitch');\n                            }\n                            if (entry.rest !== undefined && entry.pitch !== undefined) {\n                                console.error('A note was marked as a rest but was also given a pitch');\n                            }\n                            if (entry.pitch !== undefined) {\n                                let entryTies = entry.ties as {type: number}[];\n                                let staffNumber = entry.staff ? entry.staff : 1;\n                                notes.push({\n                                    time, duration: divisionsToNoteLength(entry.duration),\n                                    midi: pitchToMidi(entry.pitch),\n                                    staff: staffNumber === 1 ? 'treble' : 'bass',\n                                    attributes: {\n                                        ties: entryTies ? entryTies.map(tie => tie.type === 0 ? Tie.Start : Tie.Stop) : []\n                                    }\n                                });\n                            }\n                            part.measures[measureNumber] = notes;\n                        }\n                        break;\n                    case 'Backup':\n                        part.progress -= divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Forward':\n                        part.progress += divisionsToNoteLength(entry.duration);\n                        break;\n                    case 'Attributes':\n                        if (entry.divisions !== undefined) {\n                            part.divisions = entry.divisions;\n                        }\n                        if (entry.times !== undefined) {\n                            if (entry.times.length !== 0) {\n                                try {\n                                    part.timeSignatures.push({\n                                        measure: measureNumber,\n                                        beats: parseInt(entry.times[0].beats[0]),\n                                        beatTypes: entry.times[0].beatTypes[0],\n                                    });\n                                    currentBeatType = entry.times[0].beatTypes[0];\n                                } catch (e) {\n                                    console.error('Failed to parse time signature', entry.times[0]);\n                                }\n                            }\n                        }\n                        if (entry.keySignatures && entry.keySignatures.length !== 0) {\n                            try {\n                                part.keySignatures.push({\n                                    measure: measureNumber,\n                                    fifths: entry.keySignatures[0].fifths\n                                });\n                            } catch (e) {\n                                console.error('Failed to parse key signature', entry.keySignatures[0]);\n                            }\n                        }\n                        break;\n                    case 'Print':\n                        break;\n                    case 'Barline':\n                        break;\n                    case 'Direction':\n                        break;\n                    case 'Sound':\n                        break;\n                    default:\n                        console.error(`Unrecognized MusicXML entry: '${entry._class}'`);\n                        break;\n                }\n            });\n        });\n    });\n    let tracks: Tracks = Object.keys(parts).map(partId => {\n        let trackTypes: TrackType[] = []\n        if (partId === lyricsPartId) trackTypes.push('Lyrics');\n        if (partId === instrumentId) trackTypes.push('Instrument');\n\n        return {\n            measures: parts[partId].measures,\n            timeSignatures: parts[partId].timeSignatures,\n            keySignatures: parts[partId].keySignatures,\n            trackTypes: trackTypes\n        } as Track;\n    });\n\n    // TODO: handle grace note \n    // handle unprovided signatures\n    tracks.forEach(track => {\n        // add default values for key signatures if it is not provided.\n        if (track.keySignatures.length === 0) track.keySignatures.push({measure: 0, fifths: 0});\n\n        if (track.timeSignatures.length === 0) {\n            if (track.measures.length === 1) {\n                // case 1: all notes grouped into a single measure\n                let measure = track.measures[0];\n                let newMeasures: Note[][] = Array(Math.ceil(measure.length / 4)).fill([]).map((_, index) => index * 4).map(start => measure.slice(start, start + 4)); // divide notes into chunks of four\n                newMeasures.forEach((measure, idx) => measure.forEach(note => note.time -= 4 * idx)); // shift note start time appropriately\n                track.timeSignatures.push({measure: newMeasures.length, beats: 4, beatTypes: 4})\n                track.measures = newMeasures;\n            } else {\n                // case 2: time signature is not provided at all\n                let currentMeasureLength = 4; // start with assuming 4/4 time signature.\n                track.measures.forEach((measure, measureNumber) => {\n                    let lastNote = measure[measure.length - 1];\n                    let measureLength = Math.max(lastNote.time + lastNote.duration);\n                    if (currentMeasureLength !== measureLength) {\n                        track.timeSignatures.push({measure: measureNumber, beats: measureLength, beatTypes: 4});\n                        currentMeasureLength = measureLength;\n                    }\n                });\n            }\n        }\n    });\n    return {tracks}\n};","module.exports = __webpack_public_path__ + \"static/media/upload.027829c2.svg\";"],"sourceRoot":""}